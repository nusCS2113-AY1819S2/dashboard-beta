[
  {
    "path": "README.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d PlanMySem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:imagesDir: docs/images]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "https://travis-ci.org/CS2113-AY1819S2-T08-3/main[image:https://travis-ci.org/CS2113-AY1819S2-T08-3/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "https://ci.appveyor.com/project/seanieyap/main-r8jp5[image:https://ci.appveyor.com/api/projects/status/nmi13f89dmx9yasg?svg\u003dtrue[Build Status]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "https://app.netlify.com/sites/planmysem/deploys[image:https://api.netlify.com/api/v1/badges/6c19b45b-dbdd-4eff-afe2-200356d6ebb4/deploy-status[Build Status]]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "https://coveralls.io/github/CS2113-AY1819S2-T08-3/main?branch\u003dmaster[image:https://coveralls.io/repos/github/CS2113-AY1819S2-T08-3/main/badge.svg?branch\u003dmaster[Coverage Status]]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "https://www.codacy.com/app/CS2113T-T08-3/main?utm_source\u003dgithub.com\u0026utm_medium\u003dreferral\u0026utm_content\u003dCS2113-AY1819S2-T08-3/main\u0026utm_campaign\u003dBadge_Grade[image:https://api.codacy.com/project/badge/Grade/90f57d16da5049858ef67b6eaaf692f2[Codacy Badge]]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "https://opensource.org/licenses/MIT[image:https://img.shields.io/badge/License-MIT-yellow.svg[License: MIT]]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "PlanMySem is a CLI (Command Line Interface) scheduling/calendar application that targets NUS students and staff who prefer to use a desktop application for managing their schedule/calendar. PlanMySem automatically creates a planner that is synchronised according to the NUS academic calendar for the current semester and enables easy creation, editing and deleting of items. Special weeks such as recess week and reading week are taken into account within our unique recursion system. Items can then be efficiently managed via the intuitive tagging system."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "PlanMySem is optimized for those who prefer to work with a Command Line Interface (CLI) and/or are learning to work more efficiently with CLI tools. Additionally, unlike traditional calendar/scheduling applications, PlanMySem utilizes minimal resources on the user’s machine while still allowing the user to view their schedules swiftly and efficiently."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "*Useful Links*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Contributors"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Marcus Phua"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Julian Lim"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Lim Ding Heng"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Sean Yap"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* PlanMySem is built upon an https://github.com/se-edu/addressbook-level3[AddressBook-Level3] Application created by the https://github.com/se-edu/[SE-EDU] initiative."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Some parts of this sample application was inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by Marco Jakob"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Libraries used: https://github.com/TestFX/TestFX[TextFX], https://bitbucket.org/controlsfx/controlsfx/[ControlsFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/google/guava[Guava], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Contact Us"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/CS2113-AY1819S2-T08-3/main/issues[issue tracker]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 21,
      "-": 23
    }
  },
  {
    "path": "_reposense/config.json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "  \"authors\":"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "  ["
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"githubId\": \"macchazuki\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"displayName\": \"JUL...REN\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"authorNames\": [\"macchazuki\", \"Julian\"]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    },"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"githubId\": \"dingheng4448\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"displayName\": \"LIM...ENG\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"authorNames\": [\"dingheng4448\", \"Lim Ding Heng\"]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"githubId\": \"marcus-pzj\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"displayName\": \"MAR...JIE\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"authorNames\": [\"marcus-pzj\", \"Marcus Phua Zheng Jie\", \"marcus_pzj\"]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    },"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"githubId\": \"seanieyap\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"displayName\": \"SEA...ONG\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"authorNames\": [\"seanieyap\", \"Sean Yap\"]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-pzj": 25
    }
  },
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/4.8.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00272.0.3\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "mainClassName \u003d \u0027planmysem.Main\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_1_9"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_1_9"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    main {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        java {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            srcDirs \u003d [\u0027src\u0027]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        resources {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            srcDirs \u003d [\u0027src\u0027]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        java {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            srcDirs \u003d [\u0027test/java\u0027]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    checkstyleTest.enabled \u003d false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    String testFxVersion \u003d \u00274.0.12-alpha\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    String jUnitVersion \u003d \u00275.1.0\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    implementation group: \u0027org.controlsfx\u0027, name: \u0027controlsfx\u0027, version: \u00278.40.11\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    implementation group: \u0027com.google.guava\u0027, name: \u0027guava\u0027, version: \u002719.0\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027javax.xml.bind\u0027, name: \u0027jaxb-api\u0027, version: \u00272.2.8\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.sun.xml.bind\u0027, name: \u0027jaxb-impl\u0027, version: \u00272.3.0\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.sun.xml.bind\u0027, name: \u0027jaxb-core\u0027, version: \u00272.3.0\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027javax.activation\u0027, name: \u0027activation\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027junit\u0027, name: \u0027junit\u0027, version: \u00274.12\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-core\u0027, version: testFxVersion, {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        exclude group: \u0027org.testfx\u0027, module: \u0027testfx-internal-java8\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-junit\u0027, version: testFxVersion"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    testRuntimeOnly group: \u0027org.testfx\u0027, name: \u0027testfx-internal-java9\u0027, version: testFxVersion"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    testRuntimeOnly group: \u0027org.testfx\u0027, name: \u0027openjfx-monocle\u0027, version: \u0027jdk-9+181\u0027"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    testRuntimeOnly group:\u0027org.junit.vintage\u0027, name:\u0027junit-vintage-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    archiveName \u003d \u0027PlanMySem.jar\u0027"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "task wrapper(type: Wrapper) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    gradleVersion \u003d \u00274.8.1\u0027"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    sourceDirectories \u003d files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    classDirectories \u003d  files(sourceSets.main.output)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    executionData \u003d files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        classDirectories \u003d files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        })"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "task headless {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    doLast {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        println \u0027Setting headless mode properties.\u0027"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        test {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            systemProperties \u003d ["
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u0027testfx.robot\u0027: \u0027glass\u0027,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u0027testfx.headless\u0027: \u0027true\u0027,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u0027prism.order\u0027: \u0027sw\u0027,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u0027prism.text\u0027: \u0027t2k\u0027,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            ]"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "// Makes sure that headless properties are set before running tests"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "test.mustRunAfter headless"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            linkcss: true,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            stylesheet: \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            icons: \u0027font\u0027,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            experimental: true,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            sectlinks: true,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            idprefix: \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            idseparator: \u0027-\u0027,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027site-root\u0027: \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u0027site-name\u0027         : \u0027PlanMySem\u0027,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u0027site-githuburl\u0027    : \u0027https://github.com/CS2113-AY1819S2-T08-3/main\u0027,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027headless\u0027, \u0027test\u0027, \u0027asciidoctor\u0027, \u0027checkstyleMain\u0027, \u0027checkstyleTest\u0027"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 89,
      "-": 101
    }
  },
  {
    "path": "config.json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "  \"authors\":"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "  ["
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"githubId\": \"macchazuki\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"displayName\": \"JUL...REN\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"authorNames\": [\"macchazuki\", \"Julian\"]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    },"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"githubId\": \"dingheng4448\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"displayName\": \"LIM...ENG\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"authorNames\": [\"dingheng4448\", \"Lim Ding Heng\"]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"githubId\": \"marcus-pzj\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"displayName\": \"MAR...JIE\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"authorNames\": [\"marcus-pzj\", \"Marcus Phua Zheng Jie\"]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    },"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"githubId\": \"seanieyap\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"displayName\": \"SEA...ONG\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "      \"authorNames\": [\"seanieyap\", \"Sean Yap\"]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-pzj": 25
    }
  },
  {
    "path": "config/checkstyle/checkstyle.xml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003c!DOCTYPE module PUBLIC"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003c!--"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    This configuration file enforces rules for a modified version of the module\u0027s code standard at"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    https://oss-generic.github.io/process/codingstandards/coding-standards-java.html"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "--\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003cmodule name\u003d\"Checker\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003cmodule name\u003d\"FileTabCharacter\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that there are no tab characters in the file. --\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003c/module\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003c/module\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003cmodule name\u003d\"RegexpSingleline\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003c/module\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003cmodule name\u003d\"SuppressionFilter\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cproperty name\u003d\"file\" value\u003d\"config/checkstyle/suppressions.xml\"/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003c/module\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003cmodule name\u003d\"TreeWalker\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Required for SuppressionCommentFilter to work --\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"FileContentsHolder\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Required to allow exceptions in code style --\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!--"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        IMPORT CHECKS"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          1. STATIC: static imports"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          2. STANDARD_JAVA_PACKAGE: standard java/javax imports"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          3. SPECIAL_IMPORTS: defined as org imports"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          4. THIRD_PARTY_PACKAGE: defined as com imports"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"CustomImportOrder\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"customImportOrderRules\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                      value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks for redundant import statements."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        An import statement is redundant if:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          * It is a duplicate of another import. This is, when a class is imported more than once."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          * The class non-statically imported is from the same package as the current package."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"RedundantImport\"/\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks for unused import statements."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        An import statement is unused if:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          It\u0027s not referenced in the file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"UnusedImports\"/\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!--"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        NAMING CHECKS"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"PackageName\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"TypeName\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"ConstantName\"\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                     value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"StaticVariableName\"\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"MemberName\"\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Validates non-static members against the supplied expression. --\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"MethodName\"\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"ParameterName\"\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"LocalVariableName\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!--"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LENGTH and CODING CHECKS"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that array type declarations follow Java Style"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          Java style: public static void main(String[] args) // Allowed"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          C style:    public static void main(String args[]) // Not allowed"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"LineLength\"\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks if a line is too long. --\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"LeftCurly\"\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"RightCurly\"\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            the same line. e.g., the following example is fine:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cpre\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "              if {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                ..."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "              } else"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/pre\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            --\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- This next example is not fine:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cpre\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "              if {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                ..."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "              }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "              else"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/pre\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            --\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks for braces around loop blocks --\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"NeedBraces\"\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!--"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (true) return 1; // Not allowed"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (true) { return 1; } // Not allowed"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            else if {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "              return 1; // else if should always be multi line"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (true)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "              return 1; // Not allowed"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            --\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that long constants are defined with an upper ell.--\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"UpperEll\"/\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"FallThrough\"\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Warn about falling through to the next case statement.  Similar to"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            javac -Xlint:fallthrough, but the check is suppressed if a single-line comment"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            some other variants which we don\u0027t publicized to promote consistency)."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            --\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"reliefPattern\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                      value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that Class variables should never be declared public. --\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"VisibilityModifier\"\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!--"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        ORDER CHECKS"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "             @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks if the Class and Interface declarations is organized in this order"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          1. Class (static) variables. Order: public, protected, package level (no access modifier), private."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          2. Instance variables. Order: public, protected, package level (no access modifier), private."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          3. Constructors"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "          4. Methods"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"DeclarationOrder\"/\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"ModifierOrder\"\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 8.4.3.  The prescribed order is:"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 public, protected, private, abstract, static, final, transient, volatile,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 synchronized, native, strictfp"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "              --\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!--"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        WHITESPACE CHECKS"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that comments are indented relative to their position in the code --\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"WhitespaceAround\"\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks that various tokens are surrounded by whitespace."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 This includes most binary operators and keywords followed"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 by regular or curly braces."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            --\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Allow empty methods e.g. void func() {} --\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"WhitespaceAfter\"\u003e"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        UNARY_PLUS\"/\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- No trailing whitespace --\u003e"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"Regexp\"\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"OperatorWrap\"\u003e"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\","
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\","
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 \"\u0026\" when used in a generic upper or lower bounds constraints,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                   e.g. \u003cT extends Foo \u0026 Bar\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 \"::\" when used as a reference to a method or constructor without arguments."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                   e.g. String::compareToIgnoreCase"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            --\u003e"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"OperatorWrap\"\u003e"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\"."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            --\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"Indentation\"\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\"/\u003e"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"ParenPad\"\u003e"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "             a \u003d 1; // Allowed"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "             a  \u003d 1; // Not allowed (more than one space before \u003d)"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Validate whitespace surrounding comments as well."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 a \u003d 1; // Allowed (single space before start of comment)"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 a \u003d 1; /* Allowed (single space before start of comment) */"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 /* Allowed (single space after end of comment) */ a \u003d 1;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 a \u003d 1;  // Not allowed (more than one space before start of comment)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 a \u003d 1;  /* Not allowed (more than one space before start of comment) */"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 /* Not allowed (more than one space after end of comment) */  a \u003d 1;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                 This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            --\u003e"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!--"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        JAVADOC CHECKS"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        --\u003e"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that every class, enumeration and interface have a header comment. --\u003e"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"JavadocType\"\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"JavadocMethod\"\u003e"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks public methods that have more than 1 line of code."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "              Single line of code methods are often due to refactor for readability."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            --\u003e"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowedAnnotations\""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                      value\u003d\"Override, Test, Before, BeforeClass, After, AfterClass, Subscribe\"/\u003e"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowUndeclaredRTE\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowThrowsTagsForSubclasses\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingThrowsTags\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c!-- Checks that every non-trivial private method (excluding getters, setters and constructors) has a header comment. --\u003e"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cmodule name\u003d\"JavadocMethod\"\u003e"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c!-- Checks private methods that have more than 3 lines of code."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "              We define methods that have more than 3 lines of code as non-trivial."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            --\u003e"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"minLineCount\" value\u003d\"3\"/\u003e"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowedAnnotations\""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                      value\u003d\"Override, Test, Before, BeforeClass, After, AfterClass, Subscribe\"/\u003e"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"scope\" value\u003d\"private\"/\u003e"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowUndeclaredRTE\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowThrowsTagsForSubclasses\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingThrowsTags\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003c/module\u003e"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003c/module\u003e"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 425
    }
  },
  {
    "path": "config/checkstyle/suppressions.xml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003c?xml version\u003d\"1.0\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003c!DOCTYPE suppressions PUBLIC"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \"-//Puppy Crawl//DTD Suppressions 1.1//EN\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \"http://checkstyle.sourceforge.net/dtds/suppressions_1_1.dtd\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003csuppressions\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003csuppress checks\u003d\"JavadocType\" files\u003d\".*Test\\.java\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003c/suppressions\u003e"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 9
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "PlanMySem - A CLI (Command Line Interface) scheduling/calendar application that targets NUS students and staff who prefer to use a desktop application for managing their schedule/calendar."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Sean Yap"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::seanieyap.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{empty}[https://github.com/seanieyap[Github]] [\u003c\u003cseanieyap#, Portfolio\u003e\u003e] [https://seanieyap.com[Personal Website]]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Role: Team Lead, Developer +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Responsibilities: Add, Edit, list, Delete Slots"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Marcus Phua"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::marcus-pzj.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{empty}[https://github.com/marcus-pzj[Github]] [\u003c\u003cmarcus-pzj#, Portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Responsibilities: View, Find, Auto-Complete"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Julian Lim"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::julianlim.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{empty}[https://github.com/macchazuki[Github]] [\u003c\u003cmacchazuki#, Portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Responsibilities: Encryption, Import, Export, Generate Summary"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Lim Ding Heng"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::limdingheng.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{empty}[https://github.com/dingheng4448[Github]] [\u003c\u003cdingheng4448#, Portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Responsibilities: Generate Day, Week, Month Views"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 46
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/CS2113-AY1819S2-T08-3/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Email us* : You can also reach us at `seany [at] nus.edu.sg`"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 7
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "﻿\u003d PlanMySem - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ":repoURL: https://github.com/CS2113-AY1819S2-T08-3/main"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "By: `T08-3`      Since: `Jan 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Prerequisites"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". *JDK `9`* or later"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "JDK `10` on Windows will fail to run tests in \u003c\u003cUsingGradle#Running-Tests, headless mode\u003e\u003e due to a https://github.com/javafxports/openjdk-jfx/issues/66[JavaFX bug]."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Windows developers are highly recommended to use JDK `9`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". *IntelliJ* IDE"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "IntelliJ by default has Gradle and JavaFx plugins installed. +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Do not disable them. If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Setting up the project in your computer"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Fork this repo, and clone the fork to your computer"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ". Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Set up the correct JDK version for Gradle"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. Click `New...` and find the directory of the JDK"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Import Project`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ". Locate the `build.gradle` file and select it. Click `OK`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Open as Project`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `OK` to accept the default settings"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ". Run the `planmysem.Main` class (right-click the `Main` class and click `Run Main.main()`) and try executing a few commands"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ". Run all the tests (right-click the `test` folder, and click `Run \u0027All Tests\u0027`) and ensure that they pass"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ". Open the `StorageFile` file and check for any code errors"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Open a console and run the command `gradlew processResources` (Mac/Linux: `./gradlew processResources`). It should finish with the `BUILD SUCCESSFUL` message. +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This will generate all resources required by the application and tests."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Open link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow.java`] and check for any code errors"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ".. Due to an ongoing https://youtrack.jetbrains.com/issue/IDEA-189060[issue] with some of the newer versions of IntelliJ, code errors may be detected even if the project can be built and run successfully"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. To resolve this, place your cursor over any of the code section highlighted in red. Press kbd:[ALT + ENTER], and select `Add \u0027--add-modules\u003d...\u0027 to module compiler options` for each error"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Repeat this for the test folder as well (e.g. check link:{repoURL}/src/test/java/seedu/address/ui/HelpWindowTest.java[`HelpWindowTest.java`] for code errors, and if so, resolve it the same way)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Verifying the setup"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Run the `planmysem.Main` and try a few commands"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". \u003c\u003cTesting,Run the tests\u003e\u003e to ensure they all pass."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Configurations to do before writing code"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Configuring the coding style"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This project follows https://github.com/oss-generic/process/blob/master/docs/CodingStandards.adoc[oss-generic coding standards]. IntelliJ\u0027s default style is mostly compliant with ours but it uses a different import order from ours. To rectify,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Go to `File` \u003e `Settings...` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Select `Editor` \u003e `Code Style` \u003e `Java`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Click on the `Imports` tab to set the order"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* For `Class count to use import with \u0027\\*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* For `Import Layout`: The order is `import static all other imports`, `import java.\\*`, `import javax.*`, `import org.\\*`, `import com.*`, `import all other imports`. Add a `\u003cblank line\u003e` between each `import`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Optionally, you can follow the \u003c\u003cUsingCheckstyle#, UsingCheckstyle.adoc\u003e\u003e document to configure Intellij to check style-compliance as you write code."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Updating documentation to match your fork"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "After forking the repo, the documentation will still have the SE-EDU branding and refer to the `https://github.com/CS2113-AY1819S2-T08-3/main` repo."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "If you plan to develop this fork as a separate product (i.e. instead of contributing to `https://github.com/CS2113-AY1819S2-T08-3/main`), you should do the following:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Configure the \u003c\u003cDocs-SiteWideDocSettings, site-wide documentation settings\u003e\u003e in link:{repoURL}/build.gradle[`build.gradle`], such as the `site-name`, to suit your own project."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Replace the URL in the attribute `repoURL` in link:{repoURL}/docs/DeveloperGuide.adoc[`DeveloperGuide.adoc`] and link:{repoURL}/docs/UserGuide.adoc[`UserGuide.adoc`] with the URL of your fork."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Setting up CI"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Set up Travis to perform Continuous Integration (CI) for your fork. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e to learn how to set it up."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "After setting up Travis, you can optionally set up coverage reporting for your team fork (see \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Coverage reporting could be useful for a team repository that hosts the final version but it is not that useful for your personal fork."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Optionally, you can set up AppVeyor as a second CI (see \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Having both Travis and AppVeyor ensures your App works on both Unix-based platforms and Windows-based platforms (Travis is Unix-based and AppVeyor is Windows-based)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Getting started with coding"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "When you are ready to start coding,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "1. Get some sense of the overall design by reading \u003c\u003cDesign-Architecture\u003e\u003e."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "2. Take a look at \u003c\u003cGetStartedProgramming\u003e\u003e."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::Architecture.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The `.pptx` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder. To update a diagram, modify the diagram in the pptx file, select the objects of the diagram, and choose `Save as picture`."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "`Main` has only one class called link:{repoURL}/src/planmysem/Main.java[`Main`]. It is responsible for,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::LogicClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::SDforDeletePerson.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".Structure of the UI Component"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::UiClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, `BrowserPanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::LogicClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::DeletePersonSdForLogic.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Design-Planner]]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Planner component"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::ModelClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*API* : link:{repoURL}/src/planmysem/data/Planner.java[`Planner.java`]"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The `Planner` component,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* stores a `Planner` object that represents the entire Planner."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* stores the data of the entire application."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* stores the data of the current semester in an unmodifiable `Semester`."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Design-Semester]]"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Semester component"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*API* : link:{repoURL}/src/planmysem/data/semester/Semester.java[`Semester.java`]"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The `Semester` component,"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* stores a `Semester` object that represents the an academic semester."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* stores the data of the entire semester in an unmodifiable `HashMap\u003cLocalDate, Day\u003e`."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Semesters essentially hold \"days\" in which holds slots."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Design-Slot]]"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Slot component"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*API* : link:{repoURL}/src/planmysem/data/slot/Slot.java[`Slot.java`]"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The `Slot` component,"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* stores a `Slot` object that represents a time-slot similar to traditional/conventional calendar/scheduling applications."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** such as outlook or google calendar."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* stores the data of the slot details as well as start time and duration."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Notice how `Slot` does not hold it\u0027s end time but rather it holds the `duration`. This is simply our design choice as it is meaningless to save both variables."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::StorageClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*API* : link:{repoURL}/src/planmysem/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* can save the Address Book data in json format and read it back."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Design-Common]]"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Classes used by multiple components are in the `planmysem.commons` package."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "\u003d\u003d\u003d Initialization of the Planner and it\u0027s Semester"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "The `Planner` and it\u0027s `Semester` has to be initialized for _PlanMySem_ to work as all other features of _PlanMySem_ would"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "interact with this `Semester` object."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "\u003d\u003d\u003d\u003d Current Implementation"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Upon launching _PlanMySem_, the initialization of the `Planner` and it\u0027s `Semester` would be implemented via two steps:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "1. Automatically generate the academic calendar from the current date."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "2. Setup current `Semester` from the academic calendar."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "The academic calendar is dynamically generated by invoking the function `generateSemester` in the `Semester` class."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "The function will first retrieve the current date from the system clock to determine which academic year it is."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "As a new academic year starts from August, it can be determined from the month of the current date."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* If the current date is before August, the current academic year is \"the previous year / current year\". +"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "e.g. If the date is 25/3/2019, the academic year is \"2018 / 2019\"."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* If the current date is after August, the current academic year is \"the current year / next year\". +"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "e.g. If the date is 25/8/2019, the academic year is \"2019 / 2020\"."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "After determining the academic year, the details of the semesters will be generated. Semester 1 will always begin from"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "the first Monday of August. The rest of the weeks can be calculated from the first day of semester 1 since each"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "semester has a fixed amount of weeks."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* Semester 1 has 18 weeks (inclusive of orientation week) and semester 2 has 17 weeks."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* The vacation between semester 1 and 2 has 5 weeks."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* The vacation between academic years will have 12 or 13 weeks depending on the starting week of the next academic year."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Each week of the year will correspond to an academic week and this information will be stored in a `HashMap`. This"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "`HashMap` can be used to determine the academic week given a date (by finding out the week of the year for that date)."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Table 1 shows an example of the relation between academic week and the week of the year for academic year 2018/2019."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ".Weeks in academic year 2018/2019."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "[width\u003d\"100%\",cols\u003d\"5%,5%,\u003c10%\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Academic Week |Example (Week of the year) |Example (Period)"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Orientation Week |32 |6 Aug 2018 (First Monday of Aug 2018) - 12 Aug 2018"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 1 |33 |13 Aug 2018 - 19 Aug 2018"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 2 |34 |20 Aug 2018 - 26 Aug 2018"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 3 |35 |27 Aug 2018 - 2 Sep 2018"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 4 |36 |3 Sep 2018 - 9 Sep 2018"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 5 |37 |10 Sep 2018 - 16 Sep 2018"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 6 |38 |17 Sep 2018 - 23 Sep 2018"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Recess Week|39 |24 Sep 2018 - 30 Sep 2018"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 7 |40 |1 Oct 2018 - 7 Oct 2018"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 8 |41 |8 Oct 2018 - 14 Oct 2018"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 9 |42 |15 Oct 2018 - 21 Oct 2018"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 10 |43 |22 Oct 2018 - 28 Oct 2018"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 11 |44 |29 Oct 2018 - 4 Nov 2018"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 12 |45 |5 Nov 2018 - 11 Nov 2018"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 13 |46 |12 Nov 2018 - 18 Nov 2018"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Reading Week |47 |19 Nov 2018 - 25 Nov 2018"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Examination Week |48 |26 Nov 2018 - 2 Dec 2018"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Examination Week |49 |3 Dec 2018 - 9 Dec 2018"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Vacation |50 |10 Dec 2018 - 16 Dec 2018"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Vacation |51 |17 Dec 2018 - 23 Dec 2018"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Vacation |52 |24 Dec 2018 - 30 Dec 2018"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Vacation |1 |31 Dec 2018 - 6 Jan 2019"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Vacation |2 |7 Jan 2019 - 13 Jan 2019"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 1 |3 |14 Jan 2019 - 20 Jan 2019"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 2 |4 |21 Jan 2019 - 27 Jan 2019"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 3 |5 |28 Jan 2019 - 3 Feb 2019"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 4 |6 |4 Feb 2019 - 10 Feb 2019"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 5 |7 |11 Feb 2019 - 17 Feb 2019"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 6 |8 |18 Feb 2019 - 24 Feb 2019"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Recess Week|9 |25 Feb 2019 - 3 Mar 2019"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 7 |10 |4 Mar 2019 - 10 Mar 2019"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 8 |11 |11 Mar 2019 - 17 Mar 2019"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 9 |12 |18 Mar 2019 - 24 Mar 2019"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 10 |13 |25 Mar 2019 - 31 Mar 2019"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 11 |14 |1 Apr 2019 - 7 Apr 2019"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 12 |15 |8 Apr 2019 - 14 Apr 2019"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Week 13 |16 |15 Apr 2019 - 21 Apr 2019"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Reading Week |17 |22 Apr 2019 - 28 Apr 2019"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Examination Week |18 |29 Apr 2019 - 5 May 2019"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Examination Week |19 |6 May 2019 - 12 May 2019"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|Vacation |20 - 31 |12 weeks duration"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Hence, the information listed below can be determined from the current date."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* Current academic week"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* Current academic semester"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* Current academic year"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* Number of weeks in current academic semester"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* Start date of current academic semester"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* End date of current academic semester"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "These information would be assigned to the `Semester` object upon initialization of the `Planner`."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Generation of academic calendar"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* *Alternative 1 (current choice):* Generate academic calendar by performing calculations from the current date."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "** Pros: Generation of academic calendar is dynamic and will work for future dates."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "** Cons: Computationally expensive as many operations have to be performed."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* *Alternative 2:* Retrieve academic calendar from a pre-generated file."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "** Pros: Generation of academic calendar is efficient and not prone to calculation errors."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "** Cons: Requires the pre-generated file which may be accidentally edited or deleted by the user."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Reinventing the Parser / Command Format and Structure"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Due to the flexibility and huge variation of the envisioned command format and structures, it was decided that it was more appropriate to create a new Parser"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "instead of relying on the existing regex implementation in AB3 for heavy parsing."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The AB3 parser was heavily modified to serve unordered command parameters as well as to allow more flexibility such that mistakes in commands will still be"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "interpreted as valid as long as the \"minimal\" set of parameters are present. Regex is currently only used to retrieve the command keywords and arguments."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Arguments are then parsed via 2 different methods/techniques according to the format and structure of the command keyword."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* User\u0027s time, efficiency and productivity is of focus, such as in a planner/calendar/scheduling application."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Users are error prone when typing long commands."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Users may repeat parameters due to forgetting what was previously typed."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Users get frustrated when forced to retype commands or look for errors that they have made."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Current Implementation"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Ordering of parameters are ignored when possible."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Repeated parameters are ignored. The first parameter of the same \"type\" are taken as valid, the rest are discarded."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Alternate formats of commands are implemented to give freedom of choice and cater to different types of users such as different personalities and comfort levels."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Shortened versions of command keywords are implemented to give ways for users to shortened commands and be more efficient."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Hence, parameters in PlanMySem can be categorised into 2 categories:"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "1. Prepended parameters such as `n/NAME`, `st/START_TIME`, `des/DESCRIPTION`, etc."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "2. Non-prepended parameters, A.K.A. keywords, such as `INDEX`, `TYPE_OF_VIEW`. etc."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Parsing Prepended Parameters"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "To retrieve the set of parameters, the function `private static HashMap\u003cString, Set\u003cString\u003e\u003e getParametersWithArguments(String args)` can be called."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The function returns a `Hashmap` data structure, specifically `HashMap\u003cString, Set\u003cString\u003e\u003e`, to hold parameters, allowing for easy, quick and efficient access to specific parameters."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "However, this means that exceptions have to be manually taken care of, at the stage of parsing, this exception would particularly be `IncorrectCommand`."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The following are cases in which `IncorrectCommand` is invoked:"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* When the returned set is `null`, then the parameter was not keyed in at all."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* When the returned set is not `null` but contains empty `strings` such that `string.isEmpty()`, then the paramter was keyed in but was left empty on purpose."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Parsing Keywords"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Here, keywords are thought of as parameters that are not prepended."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "In PlanMySem, keywords are utilized in command structures when they are to be used alone or when order of parameters are important."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "In such cases, there is no logical need for prepending as the meaning of these parameters can be identified."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The function `private String getStartingArgument(String args)` provides this functionality."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Here, `IncorrectCommand` is invoked due to different circumstances:"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* When the keyword is null, then the parameter was not keyed in."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* When the keyword data type does not match the intended, then the parameter was keyed in wrongly or is mis-ordered."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Additional keywords are purposefully *not* handled to provide ease of use and cater to user mistakes."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Future Implementation"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Though the current implementation has much flexibility, there is more that can be done to elevate user experience to the next level."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "These are some possible enhancements:"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "1. Parse more formats of date and time."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "2. Parse time as a single parameter instead of two."
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "3. Enhance function calls to retrieve prepended parameters and keywords to handle trivial cases that should invoke `IncorrectCommand`."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Semester, Planner, Days and Slots"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Current Implementation"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Semester"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Planner"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Days"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Slots"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Future Implementation"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "\u003d\u003d\u003d Month/Week/Day View feature"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Future Implementation"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "The month/week/day view mechanism is facilitated by `PlannerView`."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "It extends `Planner` with different calendar views, stored internally as `monthView`, `weekView` and `dayView`."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* `PlannerView.displayMonthView()` - Displays the current semester in a monthly calendar view."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* `PlannerView.displayWeekView()` - Displays the current semester in a weekly calendar view."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* `PlannerView.displayDayView()` - Displays the current semester in a daily calendar view."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Given below is an example usage scenario and how the month/week/day view feature behaves at each step."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Step 1. The user launches the application for the first time. The `PlannerView` will be initialized with the contents in the `Planner`. The `Planner` might contain a `Semester` which is empty or a `Semester` populated with slots after reading `PlanMySem.txt`."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Step 2. The user executes `add n/CS2113T Tutorial ...` to add a new slot to the planner. The `add` command would add a new `Slot` to the `Semester` of the `Planner`."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Step 3. The user executes `view month March` command to view the calendar for March. The `view` command calls `PlannerView.displayMonthView()`, which loads the data the updated `Semester` from the `Planner` into `monthView`."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How a type of view is initialised or updated"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* **Alternative 1 (current choice):** Initialised from `Planner` only upon `view` command."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "** Pros: Easy to implement. Less operations performed by the program."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* **Alternative 2:** Updated upon any `add`/`edit`/`delete` slot command."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "** Pros: `PlannerView` is always updated."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Cons: Large amount of additional operations."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Undo/Redo feature"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Current Implementation"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "The undo/redo mechanism is facilitated by `VersionedPlanner`."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "It extends `Planner` with an undo/redo history, stored internally as an `plannerStateList` and `currentStatePointer`."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "* `VersionedPlanner#commit()` -- Saves the current planner state in its history."
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "* `VersionedPlanner#undo()` -- Restores the previous planner state from its history."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "* `VersionedPlanner#redo()` -- Restores a previously undone planner state from its history."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitPlanner()`, `Model#undoPlanner()` and `Model#redoPlanner()` respectively."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedPlanner` will be initialized with the initial planner state, and the `currentStatePointer` pointing to that single planner state."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th slot in the planner. The `delete` command calls `Model#commitPlanner()`, causing the modified state of the planner after the `delete 5` command executes to be saved in the `plannerStateList`, and the `currentStatePointer` is shifted to the newly inserted planner state."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Step 3. The user executes `add n/CS2113T ...` to add a new slot. The `add` command also calls `Model#commitPlanner()`, causing another modified planner state to be saved into the `plannerStateList`."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "If a command fails its execution, it will not call `Model#commitPlanner()`, so the planner state will not be saved into the `plannerStateList`."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Step 4. The user now decides that adding the slot was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoPlanner()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous planner state, and restores the planner to that state."
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "If the `currentStatePointer` is at index 0, pointing to the initial planner state, then there are no previous planner states to restore. The `undo` command uses `Model#canUndoPlanner()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "The `redo` command does the opposite -- it calls `Model#redoPlanner()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the planner to that state."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "If the `currentStatePointer` is at index `plannerStateList.size() - 1`, pointing to the latest planner state, then there are no undone planner states to restore. The `redo` command uses `Model#canRedoPlanner()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the planner, such as `list`, will usually not call `Model#commitPlanner()`, `Model#undoPlanner()` or `Model#redoPlanner()`. Thus, the `plannerStateList` remains unchanged."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitPlanner()`. Since the `currentStatePointer` is not pointing at the end of the `plannerStateList`, all planner states after the `currentStatePointer` will be purged. We designed it this way because it no longer makes sense to redo the `add n/CS2113T ...` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire planner."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Pros: Easy to implement."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself."
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "** Pros: Will use less memory (e.g. for `delete`, just save the slot being deleted)."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "* **Alternative 1 (current choice):** Use a list to store the history of planner states."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Pros: Easy for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `VersionedPlanner`."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* **Alternative 2:** Use `HistoryManager` for undo/redo"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Pros: We do not need to maintain a separate list, and just reuse what is already in the codebase."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d\u003d\u003d Data Encryption"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The storage file \"PlanMySem.txt\" is encrypted to prevent easy access of the user\u0027s calendar."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "We are encrypting and decrypting the data using the Java Cypher class."
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "This feature is implemented through creating a Encryptor that contains encrypt and decrypt methods. The encrypt method takes a String object as an argument and returns a encrypted String object. The decrypt method takes in a String object as an argument and returns the decrypted message as a String object."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "The encryption is done using AES/CBC/PKCS5Padding. The key used for encryption/decryption is generated randomly and stored in a file named \"KeyStorage.jceks\". No password is required from the user to retrieve this key, but a password input can be added in the KeyStorage.java class to improve security. +"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "A initialization vector (IV) is required for the Cipher Block Chain (CBC) mode of encryption. A random IV is generated and appended at the beginning of the data before being stored. The IV is then retrieved from the same file to decrypt the data."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "Encryption of the data is done automatically before the file is saved. In the implmentation, the AdaptedPlanner object is first marshalled into a StringWriter before being encrypted and written into the file. This is to ensure that the data is JAXB formatted and the save algorithm is unaffected."
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "Similarly, decryption of the data is done automatically before it is loaded. In the implementation, the file is read and decrypted and parsed into a StringReader object. The StringReader object is then unmarshalled and loaded. This is to ensure that the file is converted back into a JAXB object before being loaded and the load algorithm is unaffected."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d\u003d\u003d Exporting .ics file"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "The user can export the current planner into a .ics file to use in external calendar applications. The .ics file will contain the names of the slots in the SUMMARY field and the descriptions in the DESCRIPTION field. This command automatically exports into the main directory and names the file “PlanMySem.ics”. Future updates can include user input to allow saving the file in another directory and naming the file."
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We have chosen to use the iCalendar format due to its popularity and it’s use in applications such as Google Calendar, Microsoft Outlook and Nusmods."
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "In our implementation, we have chosen not to export the tags into the .ics file. This is because iCalendar does not have in-built tag fields. This means that other other applications that import .ics will not be able to use the tags."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Exporting tags into .ics file."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* **Alternative 1 (current choice):** Ignore tags when exporting."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "** Pros: Easier to implement as iCalendar does not have in-built tag fields."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "** Cons: Not all the information about the slots will be retained."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "** Reason for choice: We do not have much control over other applications, and importing and exporting .ics within PlanMySem can be done using the storage .txt file."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* **Alternative 2:** Use the notes field and a tag identifier to save the tags."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "** Pros: All the information from the semester will be exported."
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "** Cons: Requires other applications to be coded to read these tag identifiers and also to store and use the tags in their functions."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We use asciidoc for writing documentation."
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting."
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Editing Documentation"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time."
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Publishing Documentation"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis."
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Converting Documentation to PDF format"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Here are the steps to convert the project documentation files to PDF format."
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Go to your generated HTML files in the `build/docs` folder, right click on them and select `Open with` -\u003e `Google Chrome`."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Within Chrome, click on the `Print` option in Chrome\u0027s menu."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format. For best results, use the settings indicated in the screenshot below."
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".Saving documentation as PDF files in Chrome"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::chrome_save_as_pdf.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Docs-SiteWideDocSettings]]"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Site-wide Documentation Settings"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The link:{repoURL}/build.gradle[`build.gradle`] file specifies some project-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how all documentation files within this project are rendered."
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Attributes left unset in the `build.gradle` file will use their *default value*, if any."
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".List of site-wide attributes"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|`site-name`"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|The name of the website."
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "If set, the name will be displayed near the top of the page."
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|`site-githuburl`"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|URL to the site\u0027s repository on https://github.com[GitHub]."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Setting this will add a \"View on GitHub\" link in the navigation bar."
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|`site-seedu`"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|Define this attribute if the project is an official SE-EDU project."
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This will render the SE-EDU navigation bar at the top of the page, and add some SE-EDU-specific navigation items."
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Docs-PerFileDocSettings]]"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Per-file Documentation Settings"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Each `.adoc` file may also specify some file-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how the file is rendered."
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Asciidoctor\u0027s https://asciidoctor.org/docs/user-manual/#builtin-attributes[built-in attributes] may be specified and used as well."
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Attributes left unset in `.adoc` files will use their *default value*, if any."
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".List of per-file attributes, excluding Asciidoctor\u0027s built-in attributes"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|`site-section`"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|Site section that the document belongs to."
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This will cause the associated item in the navigation bar to be highlighted."
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "One of: `UserGuide`, `DeveloperGuide`, ``LearningOutcomes``{asterisk}, `AboutUs`, `ContactUs`"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{asterisk} Official SE-EDU projects only_"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|`no-site-header`"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|Set this attribute to remove the site navigation bar."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Site Template"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The files in link:{repoURL}/docs/stylesheets[`docs/stylesheets`] are the https://developer.mozilla.org/en-US/docs/Web/CSS[CSS stylesheets] of the site."
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "You can modify them to change some properties of the site\u0027s design."
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The files in link:{repoURL}/docs/templates[`docs/templates`] controls the rendering of `.adoc` files into HTML5."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "These template files are written in a mixture of https://www.ruby-lang.org[Ruby] and http://slim-lang.com[Slim]."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Modifying the template files in link:{repoURL}/docs/templates[`docs/templates`] requires some knowledge and experience with Ruby and Asciidoctor\u0027s API."
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "You should only modify them if you need greater control over the site\u0027s layout than what stylesheets can provide."
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The SE-EDU team does not provide support for modified template files."
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Testing]]"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Running Tests"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "There are three ways to run tests."
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The most reliable way to run tests is the 3rd one. The first two methods might fail some GUI tests due to platform/resolution-specific idiosyncrasies."
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Method 1: Using IntelliJ JUnit test runner*"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Method 2: Using Gradle*"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Open a console and run the command `gradlew clean allTests` (Mac/Linux: `./gradlew clean allTests`)"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e for more info on how to run tests using Gradle."
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Method 3: Using Gradle (headless)*"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Thanks to the https://github.com/TestFX/TestFX[TestFX] library we use, our GUI tests can be run in the _headless_ mode. In the headless mode, GUI tests do not show up on the screen. That means the developer can do other things on the Computer while the tests are running."
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "To run tests in headless mode, open a console and run the command `gradlew clean headless allTests` (Mac/Linux: `./gradlew clean headless allTests`)"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Types of tests"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We have two types of tests:"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  *GUI Tests* - These are tests involving the GUI. They include,"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. _System Tests_ that test the entire App by simulating user actions on the GUI. These are in the `systemtests` package."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. _Unit tests_ that test the individual components. These are in `seedu.address.ui` package."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  *Non-GUI Tests* - These are tests not involving the GUI. They include,"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "..  _Unit tests_ targeting the lowest level methods/classes. +"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "e.g. `seedu.address.commons.StringUtilTest`"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "..  _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working). +"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "e.g. `seedu.address.storage.StorageManagerTest`"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "..  Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together. +"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "e.g. `seedu.address.logic.LogicManagerTest`"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Troubleshooting Testing"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Problem: `HelpWindowTest` fails with a `NullPointerException`.**"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Reason: One of its dependencies, `HelpWindow.html` in `src/main/resources/docs` is missing."
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Solution: Execute Gradle task `processResources`."
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Build Automation"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e to learn how to use Gradle for build automation."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Continuous Integration"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We use https://travis-ci.org/[Travis CI] and https://www.appveyor.com/[AppVeyor] to perform _Continuous Integration_ on our projects. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e and \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Coverage Reporting"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We use https://coveralls.io/[Coveralls] to track the code coverage of our projects. See \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Documentation Previews"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "When a pull request has changes to asciidoc files, you can use https://www.netlify.com/[Netlify] to see a preview of how the HTML version of those asciidoc files will look like when the pull request is merged. See \u003c\u003cUsingNetlify#, UsingNetlify.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Making a Release"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Here are the steps to create a new release."
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Update the version number in link:{repoURL}/src/planmysem/Main.java[`Main.java`]."
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Generate a JAR file \u003c\u003cUsingGradle#creating-the-jar-file, using Gradle\u003e\u003e."
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Tag the repo with the version number. e.g. `v0.1`"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  https://help.github.com/articles/creating-releases/[Create a new release using GitHub] and upload the JAR file you created."
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Managing Dependencies"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "A project often depends on third-party libraries. For example, Address Book depends on the https://github.com/FasterXML/jackson[Jackson library] for JSON parsing. Managing these _dependencies_ can be automated using Gradle. For example, Gradle can download the dependencies automatically, which is better than these alternatives:"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[loweralpha]"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Include those libraries in the repo (this bloats the repo size)"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Require developers to download those libraries manually (this creates extra work for developers)"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[GetStartedProgramming]]"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Suggested Programming Tasks to Get Started"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Suggested path for new programmers:"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "1. First, add small local-impact (i.e. the impact of the change does not go beyond the component) enhancements to one component at a time. Some suggestions are given in \u003c\u003cGetStartedProgramming-EachComponent\u003e\u003e."
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "2. Next, add a feature that touches multiple components to learn how to implement an end-to-end feature across all components. \u003c\u003cGetStartedProgramming-RemarkCommand\u003e\u003e explains how to go about adding such a feature."
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[GetStartedProgramming-EachComponent]]"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Improving each component"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Each individual exercise in this section is component-based (i.e. you would not need to modify the other components to get it to work)."
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d `Logic` component"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Scenario:* You are in charge of `logic`. During dog-fooding, your team realize that it is troublesome for the user to type the whole command in order to execute a command. Your team devise some strategies to help cut down the amount of typing necessary, and one of the suggestions was to implement aliases for the command words. Your job is to implement such aliases."
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Do take a look at \u003c\u003cDesign-Logic\u003e\u003e before attempting to modify the `Logic` component."
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add a shorthand equivalent alias for each of the individual commands. For example, besides typing `clear`, the user can also type `c` to remove all persons in the list."
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Just like we store each individual command word constant `COMMAND_WORD` inside `*Command.java` (e.g.  link:{repoURL}/src/main/java/seedu/address/logic/commands/FindCommand.java[`FindCommand#COMMAND_WORD`], link:{repoURL}/src/main/java/seedu/address/logic/commands/DeleteCommand.java[`DeleteCommand#COMMAND_WORD`]), you need a new constant for aliases as well (e.g. `FindCommand#COMMAND_ALIAS`)."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] is responsible for analyzing command words."
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Modify the switch statement in link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser#parseCommand(String)`] such that both the proper command word and alias can be used to execute the same intended command."
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Add new tests for each of the aliases that you have added."
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Update the user guide to document the new aliases."
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/785[PR] for the full solution."
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d `Model` component"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Scenario:* You are in charge of `model`. One day, the `logic`-in-charge approaches you for help. He wants to implement a command such that the user is able to remove a particular tag from everyone in the address book, but the model API does not support such a functionality at the moment. Your job is to implement an API method, so that your teammate can use your API to implement his command."
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Do take a look at \u003c\u003cDesign-Model\u003e\u003e before attempting to modify the `Model` component."
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add a `removeTag(Tag)` method. The specified tag will be removed from everyone in the address book."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** The link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model`] and the link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] API need to be updated."
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Think about how you can use SLAP to design the method. Where should we place the main logic of deleting tags?"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**  Find out which of the existing API methods in  link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] and link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] classes can be used to implement the tag removal logic. link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] allows you to update a person, and link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] allows you to update the tags."
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Implement a `removeTag(Tag)` method in link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`]. Loop through each person, and remove the `tag` from each person."
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Add a new API method `deleteTag(Tag)` in link:{repoURL}/src/main/java/seedu/address/model/ModelManager.java[`ModelManager`]. Your link:{repoURL}/src/main/java/seedu/address/model/ModelManager.java[`ModelManager`] should call `AddressBook#removeTag(Tag)`."
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Add new tests for each of the new public methods that you have added."
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/790[PR] for the full solution."
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d `Ui` component"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Scenario:* You are in charge of `ui`. During a beta testing session, your team is observing how the users use your address book application. You realize that one of the users occasionally tries to delete non-existent tags from a contact, because the tags all look the same visually, and the user got confused. Another user made a typing mistake in his command, but did not realize he had done so because the error message wasn\u0027t prominent enough. A third user keeps scrolling down the list, because he keeps forgetting the index of the last person in the list. Your job is to implement improvements to the UI to solve all these problems."
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Do take a look at \u003c\u003cDesign-Ui\u003e\u003e before attempting to modify the `UI` component."
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Use different colors for different tags inside person cards. For example, `friends` tags can be all in brown, and `colleagues` tags can be all in yellow."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Before**"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::getting-started-ui-tag-before.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**After**"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::getting-started-ui-tag-after.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** The tag labels are created inside link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[the `PersonCard` constructor] (`new Label(tag.tagName)`). https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/Label.html[JavaFX\u0027s `Label` class] allows you to modify the style of each Label, such as changing its color."
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Use the .css attribute `-fx-background-color` to add a color."
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** You may wish to modify link:{repoURL}/src/main/resources/view/DarkTheme.css[`DarkTheme.css`] to include some pre-defined colors using css, especially if you have experience with web-based css."
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** You can modify the existing test methods for `PersonCard` \u0027s to include testing the tag\u0027s color as well."
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/798[PR] for the full solution."
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** The PR uses the hash code of the tag names to generate a color. This is deliberately designed to ensure consistent colors each time the application runs. You may wish to expand on this design to include additional features, such as allowing users to set their own tag colors, and directly saving the colors to storage, so that tags retain their colors even if the hash code algorithm changes."
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] such that link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay`] can show a different style on error (currently it shows the same regardless of errors)."
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Before**"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::getting-started-ui-result-before.png[width\u003d\"200\"]"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**After**"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::getting-started-ui-result-after.png[width\u003d\"200\"]"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] is raised by link:{repoURL}/src/main/java/seedu/address/ui/CommandBox.java[`CommandBox`] which also knows whether the result is a success or failure, and is caught by link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay`] which is where we want to change the style to."
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Refer to link:{repoURL}/src/main/java/seedu/address/ui/CommandBox.java[`CommandBox`] for an example on how to display an error."
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Modify link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] \u0027s constructor so that users of the event can indicate whether an error has occurred."
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Modify link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay#handleNewResultAvailableEvent(NewResultAvailableEvent)`] to react to this event appropriately."
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** You can write two different kinds of tests to ensure that the functionality works:"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** The unit tests for `ResultDisplay` can be modified to include verification of the color."
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** The system tests link:{repoURL}/src/test/java/systemtests/AddressBookSystemTest.java[`AddressBookSystemTest#assertCommandBoxShowsDefaultStyle() and AddressBookSystemTest#assertCommandBoxShowsErrorStyle()`] to include verification for `ResultDisplay` as well."
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/799[PR] for the full solution."
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Do read the commits one at a time if you feel overwhelmed."
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify the link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] to show the total number of people in the address book."
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Before**"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::getting-started-ui-status-before.png[width\u003d\"500\"]"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**After**"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::getting-started-ui-status-after.png[width\u003d\"500\"]"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Hints"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** link:{repoURL}/src/main/resources/view/StatusBarFooter.fxml[`StatusBarFooter.fxml`] will need a new `StatusBar`. Be sure to set the `GridPane.columnIndex` properly for each `StatusBar` to avoid misalignment!"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] needs to initialize the status bar on application start, and to update it accordingly whenever the address book is updated."
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Modify the constructor of link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] to take in the number of persons when the application just started."
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Use link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter#handleAddressBookChangedEvent(AddressBookChangedEvent)`] to update the number of persons whenever there are new changes to the addressbook."
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** For tests, modify link:{repoURL}/src/test/java/guitests/guihandles/StatusBarFooterHandle.java[`StatusBarFooterHandle`] by adding a state-saving functionality for the total number of people status, just like what we did for save location and sync status."
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** For system tests, modify link:{repoURL}/src/test/java/systemtests/AddressBookSystemTest.java[`AddressBookSystemTest`] to also verify the new total number of persons status bar."
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/803[PR] for the full solution."
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d `Storage` component"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Scenario:* You are in charge of `storage`. For your next project milestone, your team plans to implement a new feature of saving the address book to the cloud. However, the current implementation of the application constantly saves the address book after the execution of each command, which is not ideal if the user is working on limited internet connection. Your team decided that the application should instead save the changes to a temporary local backup file first, and only upload to the cloud after the user closes the application. Your job is to implement a backup API for the address book storage."
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Do take a look at \u003c\u003cDesign-Storage\u003e\u003e before attempting to modify the `Storage` component."
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add a new method `backupAddressBook(ReadOnlyAddressBook)`, so that the address book can be saved in a fixed temporary location."
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Hint"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Add the API method in link:{repoURL}/src/main/java/seedu/address/storage/AddressBookStorage.java[`AddressBookStorage`] interface."
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Implement the logic in link:{repoURL}/src/main/java/seedu/address/storage/StorageManager.java[`StorageManager`] and link:{repoURL}/src/main/java/seedu/address/storage/JsonAddressBookStorage.java[`JsonAddressBookStorage`] class."
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Solution"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** See this https://github.com/se-edu/addressbook-level4/pull/594[PR] for the full solution."
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "****"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[GetStartedProgramming-RemarkCommand]]"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Creating a new command: `remark`"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "By creating this command, you will get a chance to learn how to implement a feature end-to-end, touching all major components of the app."
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Scenario:* You are a software maintainer for `addressbook`, as the former developer team has moved on to new projects. The current users of your application have a list of new feature requests that they hope the software will eventually have. The most popular request is to allow adding additional comments/notes about a particular contact, by providing a flexible `remark` field for each contact, rather than relying on tags alone. After designing the specification for the `remark` command, you are convinced that this feature is worth implementing. Your job is to implement the `remark` command."
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Description"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Edits the remark for a person specified in the `INDEX`. +"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `remark INDEX r/[REMARK]`"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `remark 1 r/Likes to drink coffee.` +"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Edits the remark for the first person to `Likes to drink coffee.`"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `remark 1 r/` +"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Removes the remark for the first person."
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Step-by-step Instructions"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 1] Logic: Teach the app to accept \u0027remark\u0027 which does nothing"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Let\u0027s start by teaching the application how to parse a `remark` command. We will add the logic of `remark` later."
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add a `RemarkCommand` that extends link:{repoURL}/src/main/java/seedu/address/logic/commands/Command.java[`Command`]. Upon execution, it should just throw an `Exception`."
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] to accept a `RemarkCommand`."
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add `RemarkCommandTest` that tests that `execute()` throws an Exception."
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add new test method to link:{repoURL}/src/test/java/seedu/address/logic/parser/AddressBookParserTest.java[`AddressBookParserTest`], which tests that typing \"remark\" returns an instance of `RemarkCommand`."
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 2] Logic: Teach the app to accept \u0027remark\u0027 arguments"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Let\u0027s teach the application to parse arguments that our `remark` command will accept. E.g. `1 r/Likes to drink coffee.`"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify `RemarkCommand` to take in an `Index` and `String` and print those two parameters as the error message."
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add `RemarkCommandParser` that knows how to parse two arguments, one index and one with prefix \u0027r/\u0027."
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] to use the newly implemented `RemarkCommandParser`."
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify `RemarkCommandTest` to test the `RemarkCommand#equals()` method."
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add `RemarkCommandParserTest` that tests different boundary values"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "for `RemarkCommandParser`."
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify link:{repoURL}/src/test/java/seedu/address/logic/parser/AddressBookParserTest.java[`AddressBookParserTest`] to test that the correct command is generated according to the user input."
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 3] Ui: Add a placeholder for remark in `PersonCard`"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Let\u0027s add a placeholder on all our link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] s to display a remark for each person later."
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add a `Label` with any random text inside link:{repoURL}/src/main/resources/view/PersonListCard.fxml[`PersonListCard.fxml`]."
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add FXML annotation in link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] to tie the variable to the actual label."
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify link:{repoURL}/src/test/java/guitests/guihandles/PersonCardHandle.java[`PersonCardHandle`] so that future tests can read the contents of the remark label."
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 4] Model: Add `Remark` class"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We have to properly encapsulate the remark in our link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] class. Instead of just using a `String`, let\u0027s follow the conventional class structure that the codebase already uses by adding a `Remark` class."
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add `Remark` to model component (you can copy from link:{repoURL}/src/main/java/seedu/address/model/person/Address.java[`Address`], remove the regex and change the names accordingly)."
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify `RemarkCommand` to now take in a `Remark` instead of a `String`."
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add test for `Remark`, to test the `Remark#equals()` method."
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 5] Model: Modify `Person` to support a `Remark` field"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Now we have the `Remark` class, we need to actually use it inside link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add `getRemark()` in link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". You may assume that the user will not be able to use the `add` and `edit` commands to modify the remarks field (i.e. the person will be created without a remark)."
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/model/util/SampleDataUtil.java/[`SampleDataUtil`] to add remarks for the sample data (delete your `data/addressbook.json` so that the application will load the sample data when you launch it.)"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 6] Storage: Add `Remark` field to `JsonAdaptedPerson` class"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We now have `Remark` s for `Person` s, but they will be gone when we exit the application. Let\u0027s modify link:{repoURL}/src/main/java/seedu/address/storage/JsonAdaptedPerson.java[`JsonAdaptedPerson`] to include a `Remark` field so that it will be saved."
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add a new JSON field for `Remark`."
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Fix `invalidAndValidPersonAddressBook.json`, `typicalPersonsAddressBook.json`, `validAddressBook.json` etc., such that the JSON tests will not fail due to a missing `remark` field."
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 6b] Test: Add withRemark() for `PersonBuilder`"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Since `Person` can now have a `Remark`, we should add a helper method to link:{repoURL}/src/test/java/seedu/address/testutil/PersonBuilder.java[`PersonBuilder`], so that users are able to create remarks when building a link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Add a new method `withRemark()` for link:{repoURL}/src/test/java/seedu/address/testutil/PersonBuilder.java[`PersonBuilder`]. This method will create a new `Remark` for the person that it is currently building."
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Try and use the method on any sample `Person` in link:{repoURL}/src/test/java/seedu/address/testutil/TypicalPersons.java[`TypicalPersons`]."
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 7] Ui: Connect `Remark` field to `PersonCard`"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Our remark label in link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] is still a placeholder. Let\u0027s bring it to life by binding it with the actual `remark` field."
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`]\u0027s constructor to bind the `Remark` field to the `Person` \u0027s remark."
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Modify link:{repoURL}/src/test/java/seedu/address/ui/testutil/GuiTestAssert.java[`GuiTestAssert#assertCardDisplaysPerson(...)`] so that it will compare the now-functioning remark label."
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d [Step 8] Logic: Implement `RemarkCommand#execute()` logic"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "We now have everything set up... but we still can\u0027t modify the remarks. Let\u0027s finish it up by adding in actual logic for our `remark` command."
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Main:**"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Replace the logic in `RemarkCommand#execute()` (that currently just throws an `Exception`), with the actual logic to modify the remarks of a person."
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "**Tests:**"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Update `RemarkCommandTest` to test that the `execute()` logic works."
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d Full Solution"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "See this https://github.com/se-edu/addressbook-level4/pull/599[PR] for the step-by-step solution."
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* NUS students and staff"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* has a need to manage a significant number of categories, activites, timeslots, tags in a calendar"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* prefers having a completely offline calendar"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "*Value proposition*: manage personal planner faster than a typical mouse/GUI driven app and caters to users who prefer an offline solution due to the current technology climate where information privacy/data privacy/data protection has become an uncertainty"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`* * *` |new user |see usage instructions |refer to instructions if I do not know how to use the app"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`* * *` |new user |initialize the calendar by year and semester |align the planner with the school\u0027s academic calendar"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |add a slot |store all my slots in the calendar*"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |delete a slot |remove all slots from my calendar that have been cancelled*"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |edit a slot |edit slots from my calendar that have been postponed/ brought forward/ changed*"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |list all slots |view all slots on the planner which I have activities on*"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |recurse a slot |easily create all the relevant time slots for a module to recur every week*"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |view all slots on a certain day |conveniently view my planner for the day"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |view all slots on a certain week |conveniently view my planner for the week"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |view all slots on a certain month |conveniently view my planner for the month"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |add details to a slot |record information related to the slot"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |undo a command |easily revert my changes and restore a previous state"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* * *` |user |redo a command |easily revert my `undo` command in case I mistakenly undo too far"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* *` |user |view the planner in a graphic calendar format|easily view my schedule for the day/week/month/semester"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* *` |user |view a slot |view the details of a specific activity I am looking for"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`* *` |user |remove tags on a time slot |remove unused/ unnecessary tags from an activity*"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`* *` |user |edit tags |rename tags"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`* *` |user |list all tags |view all existing tags"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`* *` |user |view color coded categories |easily view the different types of categories"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* *` |user |encrypt my planner data |ensure the privacy of my planner"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`* *` |user |decrypt an encrypted planner data|securely transfer the planner data to be operated on another device"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`*` |user |import semester timetable (.ics files) |transfer my existing activities into the new timetable"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`*` |user |export semester timetable (.ics files) |view my timetable on another platform"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`*` |user |receive notifications of upcoming activities |be reminded of important upcoming activities"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`*` |user |view recess week and exam week |view specifically the weeks to rest"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`*` |user |view vacations |plan my schedule on vacation days or special semesters"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`*` |user |favourite an activity |prioritise important activities"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`*` |user |view public holidays |be aware of upcoming public holidays"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`*` |user |compare my timetable with someone else\u0027s |find a common time slot for a meeting"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "|`*` |user |generate summary reports |view how much time I spent attending training / tutorials"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "(For all use cases below, the *System* is `PlanMySem` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "\u003d\u003d\u003d Use case: Initialize Calendar"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* MSS:"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ". User inputs the first day of school as well as which semester, 1 or 2, that the planner is meant for."
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ". System generates a new timetable which is aligned with the academic semester. Weeks 1 to 13 as well as the Recess and Reading Weeks are labelled."
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "+"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d\u003d\u003d Use Case: Add a slot"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* MSS:"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". User inputs add command followed by all the mandatory parameters."
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". System reflects the additions to the planner."
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "+"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "User case ends."
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* Extensions:"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":: 1a. System detects an error in the entered data."
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":::: 1a1. System outputs error message."
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "+"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "User case ends."
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":: 1a. System detects insufficient parameters in the entered data."
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":::: 1a1. System outputs error message."
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "+"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "User case ends."
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d\u003d\u003d Use Case: List slots"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* MSS:"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". User inputs the command to list slots followed by the tag or name of the slot."
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". System displays all slots with the specified name or tag with their indexes."
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "+"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* Extensions:"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":: 1b. Planner is empty."
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":::: 1b1. System outputs error message."
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "+"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":: 1b. Tag or name does not exist in the planner."
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":::: 1b1. System outputs error message."
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "+"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d\u003d\u003d Use Case: Delete a slot"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* MSS:"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". User inputs the delete command followed by the index or tag of the intended slot."
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". System deletes the intended slot from the planner and outputs confirmation message."
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "+"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* Extensions:"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":: 1a. Tag or index does not exist in the planner."
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":::: 1a1. System outputs error message."
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d\u003d\u003d Use Case: Edit a slot"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* MSS:"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". User inputs command to edit a slot along with the tag or index, followed by the parameters to be changed."
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". System changes the specified parameters for the slot."
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". System reflects the slots as well as the perimeters changed."
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "+"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* Extensions:"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":: 1a. Tag or index does not exist in the planner."
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":::: 1a1. System outputs error message."
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "+"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":: 1b. System detects an error in the entered data."
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ":::: 1b1. System outputs error message."
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d\u003d\u003d Use Case: Export planner"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* MSS:"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". User inputs command to export the planner."
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". System converts planner to .ics format."
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". System saves .ics file in the main directory as \"PlanMySem.ics\"."
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". System displays confirmation message."
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d\u003d\u003d Use Case: View all Activities in a Day"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "* MSS:"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". User inputs the command to view all slots along with the time frame."
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". System displays all the slots for that specified time frame."
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//\u003d\u003d\u003d Use Case: Add a Category"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//. User inputs command to add a new category along with the name of the new category."
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//. System reflects the addition made to the list of Categories."
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//+"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//Use case ends."
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//\u003d\u003d\u003d Use Case: Filter by category"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//. User inputs the command to list all categories (so he knows what categories exist)."
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//. User inputs the command to list all activities."
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//. User inputs command to filter all the activities by an existing category."
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//. System displays filtered activities."
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//+"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "//Use case ends."
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": ". Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java 9 or higher installed."
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ". Should be able to hold up a fully packed schedule, three times over, without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ". A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ". The system should respond relatively quickly to user commands so as to not make the user wait around; this is an advantage of using PlanMySem."
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ". The system should take up relatively little space on the local machine so as to cater to all students and OS."
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ". The system should be easy to use, intuitive and simple, such that any student regardless of past experience with calendar/scheduling softwares is able to use it."
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ". The system should be flexible to allow all kinds of schedules that target users might have."
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ". The data should be encrypted to prevent private data from being accessed."
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "////"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Should only include this if we actually make any mention to private planner detail."
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "[[private-planner-detail]] Private planner detail::"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Any data stored on to the planner is not meant to be shared with others, unless the data is willingly exported."
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "////"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Product Survey"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Product Name*"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Author: ..."
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Deleting a person"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Deleting a person while all persons are listed"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. Prerequisites: List all persons using the `list` command. Multiple persons in the list."
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. Test case: `delete 1` +"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "   Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. Test case: `delete 0` +"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "   Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size) _{give more}_ +"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "   Expected: Similar to previous."
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Saving data"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ". Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".. _{explain how to simulate a missing/corrupted file and the expected behavior}_"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{ more test cases ... }_"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 908,
      "marcus-pzj": 37,
      "dingheng4448": 188,
      "-": 67,
      "macchazuki": 101
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d PlanMySem - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":important-caption: :heavy_exclamation_mark:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":caution-caption: :fire:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":repoURL: https://github.com/CS2113-AY1819S2-T08-3/main"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "By: `Team T08-3`      Since: `Jan 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Welcome to _PlanMySem_!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "_PlanMySem_ is a text-based (Command Line Interface) scheduling/calendar application that targets NUS students and staff who prefer to use a desktop application for managing their schedule/calendar."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "_PlanMySem_ automatically creates a planner that is synchronised according to the NUS academic calendar for the current semester and enables easy creation, editing and deleting of items."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Special weeks such as recess week and reading week are taken into account within our unique recursion system."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Items can then be efficiently managed via the intuitive tagging system."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "_PlanMySem_ is optimized for those who prefer to work with a Command Line Interface (CLI) and/or are learning to work more efficiently with CLI tools. Additionally, unlike traditional calendar/scheduling applications, _PlanMySem_ utilizes minimal resources on the user’s machine while still allowing the user to view their schedules swiftly and efficiently."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "\u003d\u003d About this User Guide"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "This user guide provides a quick start guide for you to easily setup and install _PlanMySem_, documentation of all the various features _PlanMySem_ offers, frequently asked questions and a summary of the available commands. To navigate between the different sections, you could use the table of contents above."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "For ease of communication, this document will refer to lessons/activities/events/appointments that you might add into the planner as _slots_."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Additionally, throughout this user guide, there will be various icons used as described below."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This is a tip. Follow these suggested tips to make your life much simpler when using _PlanMySem_!"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This is a note. These are things for you to take note of when using _PlanMySem_."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[IMPORTANT]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This is a sign-post dictating important information. These are information that you will surely need to know to use _PlanMySem_ properly."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This is a sign-post informing caution. Please take note of these items and exercise some care."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This is a rule. Ensure that you follow these rule to make your life using _PlanMySem_ a pleasant one."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "This section guides you through the installation of _PlanMySem_ and provides a few example commands you may try."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Ensure you have Java version `9` or later installed in your Computer."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Download the latest `planmysem.jar` link:{repoURL}/releases[here]."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder for your planner."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ".  Double-click the file to start the app. You should see the GUI appear in a few seconds."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "+"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[#img-startup]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ".[.underline]#GUI screen upon start-up#"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "image::Start_Screen.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "E.g. typing *`help`* and pressing kbd:[Enter] will open the help window."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Some example commands you can try:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "* **`add`**`n/CS2113T d/mon st/08:00 et/09:00 des/Topic: Sequence Diagram t/CS2113T t/Tutorial` : +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Add a _slot_, named \"CS2113T\" on the coming monday, from 0800hrs to 0900hrs with the tags \"CS2113T\" and \"Tutorial\"."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* *`list`*`n/CS2113T` : list all _slots_ named \"CS2113T\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* **`delete`**`3` : delete the 3rd _slot_ shown in the current list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "* *`exit`* : exit the app"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "This section displays the available features of _PlanMySem_ together with examples for you to refer to."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Tagging System*"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Unlike other commercial calendar/scheduling/planner software, _PlanMySem_ makes use of a tagging system to manage _slots_."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Using tags to tag _slots_ will make tasks easier for you in the future. Performing tasks such as viewing, deleting and editing _slots_ will be more efficient."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Recommended uses for tags:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "1. Tag modules. E.g. \"CS2113T\", \"CS2101\"."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "2. Tag type of lesson. E.g. \"Lecture\", \"Tutorial\", \"Lab\"."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "3. Tag type of activities. E.g. \"Sports\", \"Seminar\", \"Talk\"."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "4. Tag difficulty of task. E.g. \"Tough\", \"Simple\", \"Trivial\"."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Recursion System*"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Recursion facilitates quick addition of multiple _slots_, similar to Microsoft Outlook\u0027s series of appointments."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "In NUS, academic semesters are split into weeks of several types. Recursion allows you to add _slots_ to these types of weeks with ease through the use of the `r/`(recursion) parameter."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "*Command Format*"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* Words in UPPER_CASE are the parameters to be supplied by the user. E.g. in `t/TAG`, `TAG` is a parameter which can be used as the name of the tag."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* Items in square brackets are optional. e.g in `add [l/LOCATION]`, `LOCATION` is a parameter that may be omitted."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Items with `…` after them can be used multiple times including zero times. E.g. `[t/TAG]…` can be used 0 times, or as `t/lab`, `t/lecture`, `t/tutorial` etc."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* Parameters can be in any order. E.g. if the command specifies `st/START_TIME et/END_TIME d/DATE`, then both `et/09:00 st/08:00 d/2-13-2019` and `et/09:00 d/2-13-2019 st/08:00` are acceptable."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "You can save time by utilizing the alternate and shortcut commands. E.g. instead of using `delete`, you may also use `del` or simply `d`."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Identifiers and Parameters*"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Identifiers in _PlanMySem_ are designed to be, short and easy to memorise."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Once you are familiarised with them, they should be intuitive to use to add your parameters."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The table of Identifiers and Parameters and their descriptions (Table 1) below is useful for your reference as you jump right into grasping the system."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".Identifiers and their Parameters and descriptions."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[width\u003d\"100%\",cols\u003d\"5%,\u003c10%,\u003c30%,\u003c30%,\u003c25\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|Identifier |Parameter |Description |Format |Example"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".2+|`n/`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    |`NAME` |Name of a _slot_ |Text |`n/CS2113T`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    |`KEYWORD` |Text that are part of the name of a _slot_ |Text |`n/CS`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|`l/` |`LOCATION` |Location of a _slot_ |Text |`l/COM2 04-22`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|`des/` |`DESCRIPTION` |Description of a _slot_ |Text |`des/Topic: Abstraction`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "|`t/` |`TAG` |Tag of a _slot_ |Text |`t/Lab`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".4+|`d/`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .2+|`DATE` .2+|Date"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        |`dd-mm-yyyy` |`d/01-02-2019`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        |`dd-mm` |`d/01-02`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .2+|`DAY` .2+|Day of week"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        |Name of day |`d/Monday`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        |Name of day (short-form) |`d/mon`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".2+|`st/` .2+|`START_TIME` .2+|Start time"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    |Time in 24-Hour format, `hh:mm` |`st/23:00`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    |Time in 12-Hour format, form of `hh:mm+AM\\|PM` |`st/11:00 PM`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".3+|`et/`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .2+|`END_TIME` .2+|End Time"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        |Time in 24-Hour format, `hh:mm` |`et/23:00`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        |Time 12-Hour format, `hh:mm+AM\\|PM` |`et/11:00 PM`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        |`DURATION` |Duration from Start Time |Number of minutes |`et/60`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".5+|`r/` .5+|`RECURRENCE`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    |Recurse _slot_ on normal academic weeks |`normal` |`r/normal`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    |Recurse _slot_ on recess week |`recess` |`r/recess`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    |Recurse _slot_ on reading week |`reading` |`r/reading`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    |Recurse _slot_ on examination weeks |`exam` |`r/exam`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    |Recurse _slot_ on past dates |`past` |`r/past`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "You may order identifiers and parameters in any fashion and you will still be able to achieve what you want!"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "So, do not bother thinking about where to place parameters as ordering does not matter, instead become more efficient and save your time!"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[IMPORTANT]"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Identifiers may be appended with a `n` to dictate \"new\". +"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "E.g. `nt/NEW_TAG` signifies new tags in which you want to replace existing tags with."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "While table 1 shows you all the identifiers and parameters that _PlanMySem_ uses, there are some commands that do not make use of identifiers nor parameters."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The view command is one such exception that make use of keywords that must be typed in a specific order."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//[horizontal]"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//*Parameter*:: *Description*"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`n/`:: *Name of a _slot_.*"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`d/`:: *Date / Day of week.* +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    Format: +"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * Dates: `01-01`, `2019-01-02`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * Day of Week: `Monday`, `mon`, `1`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`st/`:: *Start Time.* +"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    Format: +"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * 24-Hour in the form of “hh:mm”. E.g. `23:00`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * 12-Hour in the form of `hh:mm+AM|PM`. E.g. `12:30 AM`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`et/`:: *End Time / duration.* +"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    Format: +"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * 24-Hour in the form of “hh:mm”. E.g. `23:00`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * 12-Hour in the form of `hh:mm+AM|PM`. E.g. `12:30 AM`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * Duration of the event in minutes. E.g. `60` represents 60 minutes"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`r/`:: *Specify recurrence of a _slot_.* +"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    Format: +"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * Select normal weeks: `normal`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * Select recess week: `recess`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * Select reading week: `reading`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * Select examination weeks: `exam`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    * Select past dates: `past`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`l/`:: *Location.*"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`des/`:: *Description.*"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`t/`:: *Tag.*"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`nn/`:: *New name of a _slot_.*"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`nd/`:: *New Date.*"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`nst/`:: *New Start Time.*"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`net/`:: *New End Time.*"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`nl/`:: *New Location.*"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//`ndes/`:: *New Description.*"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//Table 1. Parameters and their descriptions"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[help]]"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Viewing help : `help`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Displays all the available commands with the syntax and examples. +"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[#img-help]"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ".[.underline]#Output after entering `help`#"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "image::Help_Command_Output.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[add]]"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Adding Slots : `add` / `a`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "Add _slot(s)_ to the planner. +"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `add n/NAME d/DATE_OR_DAY_OF_WEEK st/START_TIME et/END_TIME_OR_DURATION +"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[l/LOCATION] [des/DESCRIPTION] [r/normal] [r/recess] [r/reading] [r/exam] [r/past] [t/TAG]...`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `add n/CS2113T Tutorial d/mon st/08:00 et/09:00 des/Topic: Sequence Diagram t/CS2113T t/Tutorial` +"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Add a _slot_, named \"CS2113T Tutorial\" on the coming monday, from 0800hrs to 0900hrs with the tags \"CS2113T\" and \"Tutorial\"."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[#img-add]"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ".[.underline]#Output after entering `add n/CS2113T Tutorial d/mon st/08:00 et/09:00 des/Topic: Sequence Diagram t/CS2113T t/Tutorial`#"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "image::Add_Command_Output_1.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `add n/CS2113T Tutorial d/mon st/08:00 et/09:00 des/Topic: Sequence Diagram t/CS2113T t/Tutorial r/recess r/reading` +"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Do the same but additionally, recurse the _slot_ on recess and reading week."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `add n/CS2113T Tutorial d/mon st/08:00 et/09:00 des/Topic: Sequence Diagram t/CS2113T t/Tutorial r/normal` +"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Do the same but recurse the _slot_ on \"normal\", instructional, weeks."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "You may add single _slots_ by omitting the `r/` identifiers and its parameters."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[edit]]"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Editing Slots: `edit` / `e`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "Edit _slot(s)_."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "1. Edit _slot(s)_ which contains certain _tag_(s). +"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `edit t/TAG... [nn/NEW_NAME] [nst/NEW_START_TIME] [net/NEW_END_TIME|DURATION] [nl/NEW_LOCATION] [nd/NEW_DESCRIPTION] [nt/NEW_TAG]...`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "2. Edit specific _slot_ via the `list` command. +"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `edit INDEX [nn/NEW_NAME] [nd/NEW_DATE] [nst/NEW_START_TIME] [net/NEW_END_TIME|DURATION] [nl/NEW_LOCATION] [nd/NEW_DESCRIPTION] [nt/NEW_TAG]...`"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "You will not be able to edit a _slot_\u0027s date when editing via _tags_. +"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "To edit a _slot_\u0027s date, you may use the `list` or `find` command and edit specific _slot(s)_ via index."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `edit t/CS2113T t/Tutorial nl/COM2 04-01` +"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Edit _slots_ that contain tags \"CS2113T\" and \"Tutorial\", set these _slot\u0027s_ location to \"COM2 04-01\"."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[#img-edit]"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ".[.underline]#Output after entering `edit t/CS2113T t/Tutorial nl/COM2 04-01`#"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "image::Edit_Command_Output_1.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `edit 1 des/Topic: Sequence Diagram` +"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Edit the first item from the previous result of the `list` or `find` command."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[delete]]"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Delete Slots: `delete` / `del` / `d`"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "1. Delete _slot(s)_ which contains certain _tag_(s). +"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `delete t/TAG...`"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "2. Delete _slot_ via the `list` command. +"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "You may delete a specific _slot_ by using the `list` or `find` command and select the specific _slot_ via index."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* `delete t/CS2113T t/Tutorial` +"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Delete _slots_ that contain tags \"CS2113T\" and \"Tutorial\"."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[#img-delete]"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ".[.underline]#Output after entering `delete t/CS2113T t/Tutorial`#"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "image::Delete_Command_Output.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* `delete 2` +"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Delete the second _slot_ shown via the `list` command."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[list]]"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Listing Slots: `list` / `l`"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Lists all _slots_ whose name directly matches the specified keyword (not case-sensitive). +"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Format: `list n/NAME`"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "* `list n/CS2113T` +"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "List all _slots_ that is named `CS2113T` in the planner."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[#img-list]"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ".[.underline]#Output after entering `list n/CS2113T`#"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "image::List_Command_Output_1.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[find]]"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Locating Slots: `find` / `f`"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Find all _slots_ whose part of their name contains the specified keyword and displays them as a list. +"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Format: `find n/KEYWORD`"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "* `find n/CS` +"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Find all _slots_ whose name contains `CS` (eg. CS2101, CS2113T, SOCSMeet)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[#img-find]"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ".[.underline]#Output after entering `find n/CS`#"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "image::Find_Command_Output_1.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[view]]"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "\u003d\u003d\u003d View the Planner : `view` / `v`"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "View the planner in a month/week/day view."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "1. View the monthly calendar view of the current academic semester. +"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Format: `view month [MONTH]`"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "2. View the weekly calendar view of the current academic week. +"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Format: `view week [WEEK]`"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "3. View the day view of a particular day in the academic semester. +"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Format: `view day [DATE]`"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "4. View all the details in the planner. +"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Format: `view all`"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "You may omit `[MONTH]`/`[WEEK]`/`[DATE]` to view the format chosen in respect to the current day! +"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "E.g. `view month` will allow you to view the current month and `view day` will allow you to view the current day!"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* `view day` +"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "View planner for the current date."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* `view day 01/03/2019` +"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "View planner for the first of March."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* `view week 7` +"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "View planner for week 7 of the academic calendar."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* `view week recess` +"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "View planner for recess week of the academic calendar."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* `view month` +"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "View planner for the months of the current academic semester."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[#img-view]"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ".[.underline]#Output after entering `view month`#"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "* `view all` +"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "View all the details in the planner."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[history]]"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "\u003d\u003d\u003d Listing previous input commands : `history` `[coming in v2.0]`"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Lists all the commands that you have entered in reverse chronological order. +"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Format: `history`"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[undo]]"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "\u003d\u003d\u003d Undoing previous command : `undo` `[coming in v2.0]`"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "Restores the planner to the state before the previous command was executed. +"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `undo`"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "The `clear` command cannot be undone."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[redo]]"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "\u003d\u003d\u003d Redoing the previously undone command : `redo` `[coming in v2.0]`"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Reverses the most recent `undo` command. +"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `redo`"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[encrypt]]"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Encrypting/decrypting data files"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Planner data is automatically encrypted before saving and decrypted before loading. You do not need to encrypt or decrypt he data manually."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[import]]"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Importing .ics formatted files `[coming in v2.0]`"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "You can import an .ics file into the planner."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `import FILENAME`"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[export]]"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Exporting .ics formatted files: `export`"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "You can export the planner as a .ics file."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[#img-export]"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".[.underline]#Output after entering `export`#"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::Export_Command_Output_1.png[width\u003d\"420\"]"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The exported file is named \"PlanMySem.ics\" and is saved in the main directory."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "The .ics file can be imported into other calendar apps that support .ics files such as Google Calendar. +"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[#img-exportFile]"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".[.underline]#Location of PlanMySem.ics file#"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "image::Export_Command_Directory_1.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "A file with the ICS file extension is an iCalendar file."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "These are plain text files that include calendar event details like a description, beginning and ending times, location, etc."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[clear]]"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "\u003d\u003d\u003d Clear all data : `clear`"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Clear all data stored on the planner. +"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "[#img-find]"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ".[.underline]#Output after entering `clear`#"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "image::Clear_Command_Output_1.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "The `clear` command cannot be undone! Your data will be permanently removed once `clear` is executed."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[exit]]"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Exiting the program : `exit`"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Exits the program. +"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[[save]]"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Saving the data"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "Planner data is saved in the hard disk automatically after any command that changes the data is executed. +"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*Q*: How do I transfer my data to another Computer? +"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*A*: In order to transfer your data to another Computer, you should:"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "1. Install the app on the other computer +"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "2. Copy _PlanMySem.txt_ from your old _PlanMySem_ folder and paste it into the new _PlanMySem_ folder. +"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "This will overwrite the empty data file it creates with the file that contains the data of your previous _PlanMySem_ folder."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Command Summary"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *Add Slot* : `add n/NAME d/DATE_OR_DAY_OF_WEEK st/START_TIME et/END_TIME_OR_DURATION [l/LOCATION] [des/DESCRIPTION] [r/normal] [r/recess] [r/reading] [r/exam] [r/past] [t/TAG]…​` +"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//E.g. `add n/CS2113T Tutorial d/mon st/08:00 et/09:00 des/Topic: Sequence Diagram t/CS2113T t/Tutorial` +"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *List Slot(s)* : `list n/NAME` +"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//eg. `list n/CS2113T`"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *Edit Slot* : `edit` +"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//1. Via tags: `edit t/TAG... [nn/NEW_NAME] [nst/NEW_START_TIME] [net/NEW_END_TIME|DURATION] [nl/NEW_LOCATION] [nd/NEW_DESCRIPTION] [nt/NEW_TAG]...` +"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//E.g. `edit t/CS2113T t/Tutorial nl/COM2 04-01`"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//2. Via `list` command: `edit INDEX [nn/NEW_NAME] [nd/NEW_DATE] [nst/NEW_START_TIME] [net/NEW_END_TIME|DURATION] [nl/NEW_LOCATION] [nd/NEW_DESCRIPTION] [nt/NEW_TAG]...` +"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//E.g. `edit 1 des/Topic: Sequence Diagram`"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *Delete Slot* : `delete` +"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//1. Via tags: `delete t/TAG…​` +"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//eg. `delete t/CS2113T t/Tutorial`"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//2. Via `list` command: `delete INDEX` +"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//eg. `delete 2`"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *Find Slots* : `find [KEYWORD]…​` +"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//E.g. `find CS`"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *View planner* : `view day [DATE] | view week [WEEK] | view month [MONTH]` +"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//E.g.`view month`"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *View all details* : `view all`"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *Clear all data* : `clear`"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *Exit the program* : `exit`"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *Export .ics  file* : `export`"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//* *Import .ics  file* : `import FILENAME`"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d General Commands"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "General commands that you might find useful in helping you to navigate and configure _PlanMySem_:"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[width\u003d\"100%\",cols\u003d\"20%,\u003c30%,\u003c20%,\u003c30\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|Task |Purpose |Command |Example"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003chelp, Help\u003e\u003e_ |Shows you the user guide |`help` | `help`"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003chistory, History\u003e\u003e_ |Shows you a history of all commands used |`history` | `history`"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003cundo, Undo\u003e\u003e_ |Undo your previous command |`undo` | `undo`"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003credo, Redo\u003e\u003e_ |Redo your undo | `redo` | `redo`"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003cclear, Clear\u003e\u003e_ |Clear your planner | `clear` | `clear`"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003cexit, Exit\u003e\u003e_ |Exit the _PlanMySem_ | `exit` | `exit`"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Manipulating the Planner"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Commands to manage _slots_:"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[width\u003d\"100%\",cols\u003d\"20%,\u003c30%,\u003c20%,\u003c30\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|Task |Purpose |Command |Example"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003cadd, Add slot(s)\u003e\u003e_ |Add _slot(s)_ into the planner"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|`add` | `add n/CS2113T Tutorial d/mon st/08:00 et/09:00 t/CS2113T`"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003cedit, Edit slot(s)\u003e\u003e_ |Edit _slot(s)_"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|`edit` | `edit t/CS2113T nl/COM2 04-01`"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003cdelete, Delete slot(s)\u003e\u003e_ |Delete _slot(s)_"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|`delete` | `delete t/CS2113T`"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Viewing the Planner"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Commands to view _slots_:"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[width\u003d\"100%\",cols\u003d\"20%,\u003c30%,\u003c20%,\u003c30\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|Task |Purpose |Command |Example"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003cview, View the planner\u003e\u003e_ |view the planner in a chosen format/layout |"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "`view` | `view month`"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003clist, List slot(s)\u003e\u003e_ |list _slot(s)_ of a certain name |"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "`list` | `list n/CS2113T`"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003cfind, Find slot(s)\u003e\u003e_ |find _slot(s)_ containing certain keywords |"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "`find` | `find CS`"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d\u003d Import/Exporting the Planner"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "Commands to view _slots_:"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[width\u003d\"100%\",cols\u003d\"20%,\u003c30%,\u003c20%,\u003c30\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|Task |Purpose |Command |Example"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003cexport, Export your planner\u003e\u003e_ |Export all your slots into a .ics file|"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "`export` | `export`"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_\u003c\u003cimport, Import into your planner\u003e\u003e_ |Import into your planner from a .ics file |"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "`import` | `import`"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "{zwsp}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 344,
      "marcus-pzj": 109,
      "dingheng4448": 57,
      "-": 69,
      "macchazuki": 8
    }
  },
  {
    "path": "docs/stylesheets/asciidoctor.css",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/* Asciidoctor default stylesheet | MIT License | http://asciidoctor.org */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/* Remove comment around @import statement below when using as a custom stylesheet */"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/*@import \"https://fonts.googleapis.com/css?family\u003dOpen+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700\";*/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: block"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "audio, canvas, video {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: inline-block"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "audio:not([controls]) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    height: 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "[hidden], template {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "script {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none !important"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "html {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: sans-serif;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -ms-text-size-adjust: 100%;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-text-size-adjust: 100%"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "body {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "a {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: transparent"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "a:focus {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    outline: thin dotted"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "a:active, a:hover {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    outline: 0"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h1 {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 2em;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: .67em 0"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "abbr[title] {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-bottom: 1px dotted"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "b, strong {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "dfn {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: italic"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "hr {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -moz-box-sizing: content-box;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    box-sizing: content-box;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    height: 0"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "mark {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #ff0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #000"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "code, kbd, pre, samp {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: monospace;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1em"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "pre {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    white-space: pre-wrap"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "q {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    quotes: \"\\201C\" \"\\201D\" \"\\2018\" \"\\2019\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "small {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 80%"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "sub, sup {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 75%;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 0;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: relative;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    vertical-align: baseline"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "sup {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    top: -.5em"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "sub {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    bottom: -.25em"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "img {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 0"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "svg:not(:root) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    overflow: hidden"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "figure {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "fieldset {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 1px solid silver;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0 2px;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: .35em .625em .75em"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "legend {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 0;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "button, input, select, textarea {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: inherit;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 100%;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "button, input {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: normal"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "button, select {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-transform: none"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "button, html input[type\u003d\"button\"], input[type\u003d\"reset\"], input[type\u003d\"submit\"] {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-appearance: button;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    cursor: pointer"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "button[disabled], html input[disabled] {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    cursor: default"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "input[type\u003d\"checkbox\"], input[type\u003d\"radio\"] {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    box-sizing: border-box;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "input[type\u003d\"search\"] {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-appearance: textfield;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -moz-box-sizing: content-box;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-box-sizing: content-box;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    box-sizing: content-box"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "input[type\u003d\"search\"]::-webkit-search-cancel-button, input[type\u003d\"search\"]::-webkit-search-decoration {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-appearance: none"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "button::-moz-focus-inner, input::-moz-focus-inner {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 0;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "textarea {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    overflow: auto;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    vertical-align: top"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-collapse: collapse;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-spacing: 0"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*, *:before, *:after {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -moz-box-sizing: border-box;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-box-sizing: border-box;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    box-sizing: border-box"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "html, body {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 100%"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "body {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #fff;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .8);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: \"Noto Serif\", \"DejaVu Serif\", serif;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 400;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: normal;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: relative;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    cursor: auto"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "a:hover {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    cursor: pointer"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "img, object, embed {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    max-width: 100%;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    height: auto"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "object, embed {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    height: 100%"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "img {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -ms-interpolation-mode: bicubic"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".left {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    float: left !important"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".right {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    float: right !important"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".text-left {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: left !important"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".text-right {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: right !important"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".text-center {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: center !important"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".text-justify {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: justify !important"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".hide {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "body {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-font-smoothing: antialiased"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "img, object, svg {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: inline-block;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    vertical-align: middle"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "textarea {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    height: auto;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    min-height: 50px"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "select {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 100%"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".center {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: auto;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-right: auto"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".spread {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 100%"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "p.lead, .paragraph.lead \u003e p, #preamble \u003e .sectionbody \u003e .paragraph:first-of-type p {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1.21875em;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.6"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".subheader, .admonitionblock td.content \u003e .title, .audioblock \u003e .title, .exampleblock \u003e .title, .imageblock \u003e .title, .listingblock \u003e .title, .literalblock \u003e .title, .stemblock \u003e .title, .openblock \u003e .title, .paragraph \u003e .title, .quoteblock \u003e .title, table.tableblock \u003e .title, .verseblock \u003e .title, .videoblock \u003e .title, .dlist \u003e .title, .olist \u003e .title, .ulist \u003e .title, .qlist \u003e .title, .hdlist \u003e .title {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.45;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #7a2518;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 400;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 0;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: .25em"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "div, dl, dt, dd, ul, ol, li, h1, h2, h3, #toctitle, .sidebarblock \u003e .content \u003e .title, h4, h5, h6, pre, form, p, blockquote, th, td {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    direction: ltr"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "a {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #2156a5;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: underline;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: inherit"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "a:hover, a:focus {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #1d4b8f"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "a img {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: none"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "p {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: inherit;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 400;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1em;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.6;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 1.25em;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-rendering: optimizeLegibility"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "p aside {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .875em;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.35;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: italic"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h1, h2, h3, #toctitle, .sidebarblock \u003e .content \u003e .title, h4, h5, h6 {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 300;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: normal;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #ba3925;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-rendering: optimizeLegibility;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 1em;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: .5em;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.0125em"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h1 small, h2 small, h3 small, #toctitle small, .sidebarblock \u003e .content \u003e .title small, h4 small, h5 small, h6 small {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 60%;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #e99b8f;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 0"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h1 {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 2.125em"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h2 {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1.6875em"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h3, #toctitle, .sidebarblock \u003e .content \u003e .title {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1.375em"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h4, h5 {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1.125em"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h6 {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1em"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "hr {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: solid #ddddd8;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 1px 0 0;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    clear: both;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 1.25em 0 1.1875em;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    height: 0"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "em, i {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: italic;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: inherit"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "strong, b {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: inherit"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "small {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 60%;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: inherit"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "code {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: \"Droid Sans Mono\", \"DejaVu Sans Mono\", monospace;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 400;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .9)"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul, ol, dl {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1em;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.6;"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 1.25em;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-position: outside;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: inherit"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul, ol, ul.no-bullet, ol.no-bullet {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: 1.5em"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul li ul, ul li ol {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: 1.25em;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0;"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1em"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.square li ul, ul.circle li ul, ul.disc li ul {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style: inherit"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.square {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: square"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.circle {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: circle"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.disc {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: disc"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.no-bullet {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style: none"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ol li ul, ol li ol {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: 1.25em;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "dl dt {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: .3125em;"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "dl dd {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 1.25em"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "abbr, acronym {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-transform: uppercase;"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 90%;"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .8);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-bottom: 1px dotted #ddd;"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    cursor: help"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "abbr {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-transform: none"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "blockquote {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0 0 1.25em;"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: .5625em 1.25em 0 1.1875em;"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-left: 1px solid #ddd"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "blockquote cite {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: block;"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .9375em;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .6)"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "blockquote cite:before {"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\2014 \\0020\""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "blockquote cite a, blockquote cite a:visited {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .6)"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "blockquote, blockquote p {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.6;"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .85)"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "@media only screen and (min-width: 768px) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    h1, h2, h3, #toctitle, .sidebarblock \u003e .content \u003e .title, h4, h5, h6 {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        line-height: 1.2"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    h1 {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: 2.75em"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    h2 {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: 2.3125em"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    h3, #toctitle, .sidebarblock \u003e .content \u003e .title {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: 1.6875em"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    h4 {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: 1.4375em"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #fff;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 1.25em;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: solid 1px #dedede"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table thead, table tfoot {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #f7f8f7;"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table thead tr th, table thead tr td, table tfoot tr th, table tfoot tr td {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: .5em .625em .625em;"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: inherit;"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .8);"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: left"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table tr th, table tr td {"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: .5625em .625em;"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: inherit;"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .8)"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table tr.even, table tr.alt, table tr:nth-of-type(even) {"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #f8f8f7"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table thead tr th, table tfoot tr th, table tbody tr td, table tr td, table tfoot tr td {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: table-cell;"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.6"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "body {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    tab-size: 4"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h1, h2, h3, #toctitle, .sidebarblock \u003e .content \u003e .title, h4, h5, h6 {"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.2;"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    word-spacing: -.05em"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h1 strong, h2 strong, h3 strong, #toctitle strong, .sidebarblock \u003e .content \u003e .title strong, h4 strong, h5 strong, h6 strong {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 400"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".clearfix:before, .clearfix:after, .float-group:before, .float-group:after {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \" \";"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: table"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".clearfix:after, .float-group:after {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    clear: both"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*:not(pre) \u003e code {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .9375em;"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: normal !important;"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    letter-spacing: 0;"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: .1em .5ex;"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    word-spacing: -.15em;"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #f7f7f8;"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-border-radius: 4px;"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-radius: 4px;"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.45;"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-rendering: optimizeSpeed"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "pre, pre \u003e code {"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.45;"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .9);"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: \"Droid Sans Mono\", \"DejaVu Sans Mono\", monospace;"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 400;"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-rendering: optimizeSpeed"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".keyseq {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(51, 51, 51, .8)"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "kbd {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: \"Droid Sans Mono\", \"DejaVu Sans Mono\", monospace;"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: inline-block;"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .8);"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .65em;"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.45;"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #f7f7f7;"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 1px solid #ccc;"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-border-radius: 3px;"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-radius: 3px;"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-box-shadow: 0 1px 0 rgba(0, 0, 0, .2), 0 0 0 .1em white inset;"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    box-shadow: 0 1px 0 rgba(0, 0, 0, .2), 0 0 0 .1em #fff inset;"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0 .15em;"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: .2em .5em;"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    vertical-align: middle;"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: relative;"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    top: -.1em;"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    white-space: nowrap"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".keyseq kbd:first-child {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: 0"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".keyseq kbd:last-child {"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-right: 0"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".menuseq, .menu {"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .8)"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "b.button:before, b.button:after {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: relative;"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    top: -1px;"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 400"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "b.button:before {"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"[\";"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0 3px 0 2px"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "b.button:after {"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"]\";"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0 2px 0 3px"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "p a \u003e code:hover {"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .9)"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header, #content, #footnotes, #footer {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 100%;"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: auto;"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-right: auto;"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 0;"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0;"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    max-width: 62.5em;"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    *zoom: 1;"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: relative;"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-left: .9375em;"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-right: .9375em"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header:before, #header:after, #content:before, #content:after, #footnotes:before, #footnotes:after, #footer:before, #footer:after {"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \" \";"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: table"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header:after, #content:after, #footnotes:after, #footer:after {"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    clear: both"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content {"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 1.25em"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content:before {"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: none"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header \u003e h1:first-child {"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .85);"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 2.25rem;"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header \u003e h1:first-child + #toc {"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 8px;"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-top: 1px solid #ddddd8"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header \u003e h1:only-child, body.toc2 #header \u003e h1:nth-last-child(2) {"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-bottom: 1px solid #ddddd8;"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-bottom: 8px"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header .details {"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-bottom: 1px solid #ddddd8;"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.45;"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-top: .25em;"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-bottom: .25em;"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-left: .25em;"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .6);"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: -ms-flexbox;"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: -webkit-flex;"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -ms-flex-flow: row wrap;"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-flex-flow: row wrap;"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    flex-flow: row wrap"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header .details span:first-child {"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: -.125em"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header .details span.email a {"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .85)"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header .details br {"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header .details br + span:before {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\00a0\\2013\\00a0\""
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header .details br + span.author:before {"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\00a0\\22c5\\00a0\";"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .85)"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header .details br + span#revremark:before {"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\00a0|\\00a0\""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header #revnumber {"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-transform: capitalize"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#header #revnumber:after {"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\00a0\""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content \u003e h1:first-child:not([class]) {"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .85);"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-bottom: 1px solid #ddddd8;"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-bottom: 8px;"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 0;"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-top: 1rem;"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 1.25rem"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#toc {"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-bottom: 1px solid #efefed;"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-bottom: .5em"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#toc \u003e ul {"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: .125em"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#toc ul.sectlevel0 \u003e li \u003e a {"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: italic"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#toc ul.sectlevel0 ul.sectlevel1 {"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: .5em 0"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#toc ul {"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: none"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#toc li {"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.3334;"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: .3334em"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#toc a {"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: none"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#toc a:active {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: underline"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#toctitle {"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #7a2518;"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1.2em"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "@media only screen and (min-width: 768px) {"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toctitle {"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: 1.375em"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.toc2 {"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-left: 15em;"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-right: 0"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc.toc2 {"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin-top: 0 !important;"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        background-color: #f8f8f7;"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        position: fixed;"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        width: 15em;"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        left: 0;"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        top: 0;"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        border-right: 1px solid #efefed;"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        border-top-width: 0 !important;"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        border-bottom-width: 0 !important;"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        z-index: 1000;"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding: 1.25em 1em;"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        height: 100%;"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        overflow: auto"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc.toc2 #toctitle {"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin-top: 0;"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin-bottom: .8rem;"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: 1.2em"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc.toc2 \u003e ul {"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: .9em;"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin-bottom: 0"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc.toc2 ul ul {"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin-left: 0;"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-left: 1em"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc.toc2 ul.sectlevel0 ul.sectlevel1 {"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-left: 0;"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin-top: .5em;"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin-bottom: .5em"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.toc2.toc-right {"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-left: 0;"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-right: 15em"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.toc2.toc-right #toc.toc2 {"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        border-right-width: 0;"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        border-left: 1px solid #efefed;"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        left: auto;"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        right: 0"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "@media only screen and (min-width: 1280px) {"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.toc2 {"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-left: 20em;"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-right: 0"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc.toc2 {"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        width: 20em"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc.toc2 #toctitle {"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: 1.375em"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc.toc2 \u003e ul {"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: .95em"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc.toc2 ul ul {"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-left: 1.25em"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.toc2.toc-right {"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-left: 0;"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-right: 20em"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content #toc {"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-style: solid;"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 1px;"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-color: #e0e0dc;"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 1.25em;"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 1.25em;"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #f8f8f7;"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-border-radius: 4px;"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-radius: 4px"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content #toc \u003e :first-child {"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 0"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content #toc \u003e :last-child {"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#footer {"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    max-width: 100%;"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: rgba(0, 0, 0, .8);"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 1.25em"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#footer-text {"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(255, 255, 255, .8);"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.44"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".sect1 {"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-bottom: .625em"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "@media only screen and (min-width: 768px) {"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .sect1 {"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-bottom: 1.25em"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".sect1 + .sect1 {"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-top: 1px solid #efefed"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content h1 \u003e a.anchor, h2 \u003e a.anchor, h3 \u003e a.anchor, #toctitle \u003e a.anchor, .sidebarblock \u003e .content \u003e .title \u003e a.anchor, h4 \u003e a.anchor, h5 \u003e a.anchor, h6 \u003e a.anchor {"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: absolute;"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    z-index: 1001;"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 1.5ex;"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: -1.5ex;"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: block;"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: none !important;"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    visibility: hidden;"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: center;"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 400"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content h1 \u003e a.anchor:before, h2 \u003e a.anchor:before, h3 \u003e a.anchor:before, #toctitle \u003e a.anchor:before, .sidebarblock \u003e .content \u003e .title \u003e a.anchor:before, h4 \u003e a.anchor:before, h5 \u003e a.anchor:before, h6 \u003e a.anchor:before {"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\00A7\";"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .85em;"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: block;"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-top: .1em"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content h1:hover \u003e a.anchor, #content h1 \u003e a.anchor:hover, h2:hover \u003e a.anchor, h2 \u003e a.anchor:hover, h3:hover \u003e a.anchor, #toctitle:hover \u003e a.anchor, .sidebarblock \u003e .content \u003e .title:hover \u003e a.anchor, h3 \u003e a.anchor:hover, #toctitle \u003e a.anchor:hover, .sidebarblock \u003e .content \u003e .title \u003e a.anchor:hover, h4:hover \u003e a.anchor, h4 \u003e a.anchor:hover, h5:hover \u003e a.anchor, h5 \u003e a.anchor:hover, h6:hover \u003e a.anchor, h6 \u003e a.anchor:hover {"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    visibility: visible"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content h1 \u003e a.link, h2 \u003e a.link, h3 \u003e a.link, #toctitle \u003e a.link, .sidebarblock \u003e .content \u003e .title \u003e a.link, h4 \u003e a.link, h5 \u003e a.link, h6 \u003e a.link {"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #ba3925;"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: none"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content h1 \u003e a.link:hover, h2 \u003e a.link:hover, h3 \u003e a.link:hover, #toctitle \u003e a.link:hover, .sidebarblock \u003e .content \u003e .title \u003e a.link:hover, h4 \u003e a.link:hover, h5 \u003e a.link:hover, h6 \u003e a.link:hover {"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #a53221"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".audioblock, .imageblock, .literalblock, .listingblock, .stemblock, .videoblock {"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 1.25em"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock td.content \u003e .title, .audioblock \u003e .title, .exampleblock \u003e .title, .imageblock \u003e .title, .listingblock \u003e .title, .literalblock \u003e .title, .stemblock \u003e .title, .openblock \u003e .title, .paragraph \u003e .title, .quoteblock \u003e .title, table.tableblock \u003e .title, .verseblock \u003e .title, .videoblock \u003e .title, .dlist \u003e .title, .olist \u003e .title, .ulist \u003e .title, .qlist \u003e .title, .hdlist \u003e .title {"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-rendering: optimizeLegibility;"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: left;"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: \"Noto Serif\", \"DejaVu Serif\", serif;"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1rem;"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: italic"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.tableblock \u003e caption.title {"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    white-space: nowrap;"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    overflow: visible;"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    max-width: 0"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".paragraph.lead \u003e p, #preamble \u003e .sectionbody \u003e .paragraph:first-of-type p {"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .85)"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.tableblock #preamble \u003e .sectionbody \u003e .paragraph:first-of-type p {"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: inherit"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock \u003e table {"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-collapse: separate;"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 0;"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: none;"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 100%"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock \u003e table td.icon {"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: center;"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 80px"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock \u003e table td.icon img {"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    max-width: none"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock \u003e table td.icon .title {"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold;"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-transform: uppercase"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock \u003e table td.content {"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-left: 1.125em;"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-right: 1.25em;"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-left: 1px solid #ddddd8;"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .6)"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock \u003e table td.content \u003e :last-child \u003e :last-child {"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".exampleblock \u003e .content {"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-style: solid;"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 1px;"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-color: #e6e6e6;"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 1.25em;"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 1.25em;"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #fff;"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-border-radius: 4px;"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-radius: 4px"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".exampleblock \u003e .content \u003e :first-child {"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 0"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".exampleblock \u003e .content \u003e :last-child {"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".sidebarblock {"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-style: solid;"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 1px;"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-color: #e0e0dc;"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 1.25em;"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 1.25em;"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #f8f8f7;"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-border-radius: 4px;"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-radius: 4px"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".sidebarblock \u003e :first-child {"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 0"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".sidebarblock \u003e :last-child {"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".sidebarblock \u003e .content \u003e .title {"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #7a2518;"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 0;"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: center"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".exampleblock \u003e .content \u003e :last-child \u003e :last-child, .exampleblock \u003e .content .olist \u003e ol \u003e li:last-child \u003e :last-child, .exampleblock \u003e .content .ulist \u003e ul \u003e li:last-child \u003e :last-child, .exampleblock \u003e .content .qlist \u003e ol \u003e li:last-child \u003e :last-child, .sidebarblock \u003e .content \u003e :last-child \u003e :last-child, .sidebarblock \u003e .content .olist \u003e ol \u003e li:last-child \u003e :last-child, .sidebarblock \u003e .content .ulist \u003e ul \u003e li:last-child \u003e :last-child, .sidebarblock \u003e .content .qlist \u003e ol \u003e li:last-child \u003e :last-child {"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".literalblock pre, .listingblock pre:not(.highlight), .listingblock pre[class\u003d\"highlight\"], .listingblock pre[class^\u003d\"highlight \"], .listingblock pre.CodeRay, .listingblock pre.prettyprint {"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #f7f7f8"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".sidebarblock .literalblock pre, .sidebarblock .listingblock pre:not(.highlight), .sidebarblock .listingblock pre[class\u003d\"highlight\"], .sidebarblock .listingblock pre[class^\u003d\"highlight \"], .sidebarblock .listingblock pre.CodeRay, .sidebarblock .listingblock pre.prettyprint {"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #f2f1f1"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".literalblock pre, .literalblock pre[class], .listingblock pre, .listingblock pre[class] {"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-border-radius: 4px;"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-radius: 4px;"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    word-wrap: break-word;"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 1em;"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .8125em"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".literalblock pre.nowrap, .literalblock pre[class].nowrap, .listingblock pre.nowrap, .listingblock pre[class].nowrap {"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    overflow-x: auto;"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    white-space: pre;"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    word-wrap: normal"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "@media only screen and (min-width: 768px) {"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .literalblock pre, .literalblock pre[class], .listingblock pre, .listingblock pre[class] {"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: .90625em"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "@media only screen and (min-width: 1280px) {"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .literalblock pre, .literalblock pre[class], .listingblock pre, .listingblock pre[class] {"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: 1em"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".literalblock.output pre {"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #f7f7f8;"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: rgba(0, 0, 0, .9)"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".listingblock pre.highlightjs {"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".listingblock pre.highlightjs \u003e code {"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 1em;"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-border-radius: 4px;"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-radius: 4px"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".listingblock pre.prettyprint {"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 0"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".listingblock \u003e .content {"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: relative"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".listingblock code[data-lang]:before {"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none;"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: attr(data-lang);"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: absolute;"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .75em;"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    top: .425rem;"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    right: .5rem;"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1;"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-transform: uppercase;"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #999"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".listingblock:hover code[data-lang]:before {"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: block"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".listingblock.terminal pre .command:before {"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: attr(data-prompt);"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-right: .5em;"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #999"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".listingblock.terminal pre .command:not([data-prompt]):before {"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"$\""
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.pyhltable {"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-collapse: separate;"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 0;"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0;"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: none"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.pyhltable td {"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    vertical-align: top;"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-top: 0;"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-bottom: 0;"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.45"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.pyhltable td.code {"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-left: .75em;"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-right: 0"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "pre.pygments .lineno, table.pyhltable td:not(.code) {"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #999;"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-left: 0;"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-right: .5em;"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-right: 1px solid #ddddd8"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "pre.pygments .lineno {"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: inline-block;"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-right: .25em"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.pyhltable .linenodiv {"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: none !important;"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-right: 0 !important"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock {"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0 1em 1.25em 1.5em;"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: table"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock \u003e .title {"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: -1.5em;"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: .75em"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock blockquote, .quoteblock blockquote p {"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .85);"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1.15rem;"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.75;"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    word-spacing: .1em;"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    letter-spacing: 0;"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: italic;"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: justify"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock blockquote {"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0;"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0;"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 0"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock blockquote:before {"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\201c\";"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    float: left;"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 2.75em;"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold;"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: .6em;"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: -.6em;"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #7a2518;"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-shadow: 0 1px 2px rgba(0, 0, 0, .1)"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock blockquote \u003e .paragraph:last-child p {"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock .attribution {"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: .5em;"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-right: .5ex;"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: right"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock .quoteblock {"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: 0;"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-right: 0;"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: .5em 0;"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-left: 3px solid rgba(0, 0, 0, .6)"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock .quoteblock blockquote {"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0 0 0 .75em"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock .quoteblock blockquote:before {"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".verseblock {"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0 1em 1.25em 1em"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".verseblock pre {"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: \"Open Sans\", \"DejaVu Sans\", sans;"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1.15rem;"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .85);"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 300;"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-rendering: optimizeLegibility"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".verseblock pre strong {"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 400"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".verseblock .attribution {"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: 1.25rem;"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: .5ex"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock .attribution, .verseblock .attribution {"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .9375em;"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.45;"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: italic"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock .attribution br, .verseblock .attribution br {"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock .attribution cite, .verseblock .attribution cite {"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: block;"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    letter-spacing: -.025em;"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .6)"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock.abstract {"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0 0 1.25em 0;"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: block"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock.abstract blockquote, .quoteblock.abstract blockquote p {"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: left;"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    word-spacing: 0"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".quoteblock.abstract blockquote:before, .quoteblock.abstract blockquote p:first-of-type:before {"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.tableblock {"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    max-width: 100%;"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-collapse: separate"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.tableblock td \u003e .paragraph:last-child p \u003e p:last-child, table.tableblock th \u003e p:last-child, table.tableblock td \u003e p:last-child {"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.tableblock, th.tableblock, td.tableblock {"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 0 solid #dedede"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.grid-all th.tableblock, table.grid-all td.tableblock {"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 0 1px 1px 0"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.grid-all tfoot \u003e tr \u003e th.tableblock, table.grid-all tfoot \u003e tr \u003e td.tableblock {"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 1px 1px 0 0"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.grid-cols th.tableblock, table.grid-cols td.tableblock {"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 0 1px 0 0"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.grid-all * \u003e tr \u003e .tableblock:last-child, table.grid-cols * \u003e tr \u003e .tableblock:last-child {"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-right-width: 0"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.grid-rows th.tableblock, table.grid-rows td.tableblock {"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 0 0 1px 0"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.grid-all tbody \u003e tr:last-child \u003e th.tableblock, table.grid-all tbody \u003e tr:last-child \u003e td.tableblock, table.grid-all thead:last-child \u003e tr \u003e th.tableblock, table.grid-rows tbody \u003e tr:last-child \u003e th.tableblock, table.grid-rows tbody \u003e tr:last-child \u003e td.tableblock, table.grid-rows thead:last-child \u003e tr \u003e th.tableblock {"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-bottom-width: 0"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.grid-rows tfoot \u003e tr \u003e th.tableblock, table.grid-rows tfoot \u003e tr \u003e td.tableblock {"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 1px 0 0 0"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.frame-all {"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 1px"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.frame-sides {"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 0 1px"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table.frame-topbot {"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 1px 0"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "th.halign-left, td.halign-left {"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: left"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "th.halign-right, td.halign-right {"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: right"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "th.halign-center, td.halign-center {"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: center"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "th.valign-top, td.valign-top {"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    vertical-align: top"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "th.valign-bottom, td.valign-bottom {"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    vertical-align: bottom"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "th.valign-middle, td.valign-middle {"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    vertical-align: middle"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "table thead th, table tfoot th {"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "tbody tr th {"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: table-cell;"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.6;"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #f7f8f7"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "tbody tr th, tbody tr th p, tfoot tr th, tfoot tr th p {"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: rgba(0, 0, 0, .8);"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "p.tableblock \u003e code:only-child {"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: none;"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "p.tableblock {"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1em"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "td \u003e div.verse {"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    white-space: pre"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ol {"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: 1.75em"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul li ol {"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: 1.5em"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "dl dd {"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: 1.125em"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "dl dd:last-child, dl dd:last-child \u003e :last-child {"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ol \u003e li p, ul \u003e li p, ul dd, ol dd, .olist .olist, .ulist .ulist, .ulist .olist, .olist .ulist {"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: .625em"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.unstyled, ol.unnumbered, ul.checklist, ul.none {"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: none"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.unstyled, ol.unnumbered, ul.checklist {"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: .625em"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.checklist li \u003e p:first-child \u003e .fa-square-o:first-child, ul.checklist li \u003e p:first-child \u003e .fa-check-square-o:first-child {"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 1em;"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .85em"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.checklist li \u003e p:first-child \u003e input[type\u003d\"checkbox\"]:first-child {"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 1em;"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: relative;"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    top: 1px"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.inline {"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: 0 auto .625em auto;"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: -1.375em;"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-right: 0;"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0;"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style: none;"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    overflow: hidden"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.inline \u003e li {"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style: none;"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    float: left;"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: 1.375em;"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: block"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ul.inline \u003e li \u003e * {"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: block"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".unstyled dl dt {"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: 400;"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: normal"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ol.arabic {"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: decimal"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ol.decimal {"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: decimal-leading-zero"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ol.loweralpha {"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: lower-alpha"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ol.upperalpha {"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: upper-alpha"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ol.lowerroman {"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: lower-roman"
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ol.upperroman {"
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: upper-roman"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "ol.lowergreek {"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    list-style-type: lower-greek"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".hdlist \u003e table, .colist \u003e table {"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 0;"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: none"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".hdlist \u003e table \u003e tbody \u003e tr, .colist \u003e table \u003e tbody \u003e tr {"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: none"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "td.hdlist1, td.hdlist2 {"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    vertical-align: top;"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0 .625em"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "td.hdlist1 {"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold;"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-bottom: 1.25em"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".literalblock + .colist, .listingblock + .colist {"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: -.5em"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".colist \u003e table tr \u003e td:first-of-type {"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0 .75em;"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".colist \u003e table tr \u003e td:last-of-type {"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: .25em 0"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".thumb, .th {"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 0;"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: inline-block;"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: solid 4px #fff;"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-box-shadow: 0 0 0 1px #ddd;"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    box-shadow: 0 0 0 1px #ddd"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".imageblock.left, .imageblock[style*\u003d\"float: left\"] {"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: .25em .625em 1.25em 0"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".imageblock.right, .imageblock[style*\u003d\"float: right\"] {"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: .25em 0 1.25em .625em"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".imageblock \u003e .title {"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".imageblock.thumb, .imageblock.th {"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 6px"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".imageblock.thumb \u003e .title, .imageblock.th \u003e .title {"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0 .125em"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".image.left, .image.right {"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: .25em;"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: .25em;"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: inline-block;"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 0"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".image.left {"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-right: .625em"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".image.right {"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: .625em"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "a.image {"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: none;"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: inline-block"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "a.image object {"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    pointer-events: none"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "sup.footnote, sup.footnoteref {"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .875em;"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: static;"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    vertical-align: super"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "sup.footnote a, sup.footnoteref a {"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: none"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "sup.footnote a:active, sup.footnoteref a:active {"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: underline"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#footnotes {"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-top: .75em;"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding-bottom: .75em;"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: .625em"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#footnotes hr {"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 20%;"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    min-width: 6.25em;"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin: -.25em 0 .75em 0;"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-width: 1px 0 0 0"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#footnotes .footnote {"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: 0 .375em 0 .225em;"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.3334;"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .875em;"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-left: 1.2em;"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-indent: -1.05em;"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: .2em"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#footnotes .footnote a:first-of-type {"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold;"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: none"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#footnotes .footnote:last-of-type {"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "#content #footnotes {"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-top: -.625em;"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0;"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    padding: .75em 0"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".gist .file-data \u003e table {"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border: 0;"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background: #fff;"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 100%;"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 0"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".gist .file-data \u003e table td.line-data {"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 99%"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "div.unbreakable {"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    page-break-inside: avoid"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".big {"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: larger"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".small {"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: smaller"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".underline {"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: underline"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".overline {"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: overline"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".line-through {"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-decoration: line-through"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".aqua {"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #00bfbf"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".aqua-background {"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #00fafa"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".black {"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #000"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".black-background {"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #000"
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".blue {"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #0000bf"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".blue-background {"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #0000fa"
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".fuchsia {"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #bf00bf"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".fuchsia-background {"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #fa00fa"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".gray {"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #606060"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".gray-background {"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #7d7d7d"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".green {"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #006000"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".green-background {"
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #007d00"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".lime {"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #00bf00"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".lime-background {"
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #00fa00"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".maroon {"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #600000"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".maroon-background {"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #7d0000"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".navy {"
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #000060"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".navy-background {"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #00007d"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".olive {"
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #606000"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".olive-background {"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #7d7d00"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".purple {"
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #600060"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".purple-background {"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #7d007d"
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".red {"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #bf0000"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".red-background {"
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #fa0000"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".silver {"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #909090"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".silver-background {"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #bcbcbc"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".teal {"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #006060"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".teal-background {"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #007d7d"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".white {"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #bfbfbf"
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".white-background {"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #fafafa"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".yellow {"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #bfbf00"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".yellow-background {"
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #fafa00"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "span.icon \u003e .fa {"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    cursor: default"
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock td.icon [class^\u003d\"fa icon-\"] {"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 2.5em;"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-shadow: 1px 1px 2px rgba(0, 0, 0, .5);"
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    cursor: default"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock td.icon .icon-note:before {"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\f05a\";"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #19407c"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock td.icon .icon-tip:before {"
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\f0eb\";"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-shadow: 1px 1px 2px rgba(155, 155, 0, .8);"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #111"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock td.icon .icon-warning:before {"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\f071\";"
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #bf6900"
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock td.icon .icon-caution:before {"
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\f06d\";"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #bf3400"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".admonitionblock td.icon .icon-important:before {"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: \"\\f06a\";"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #bf0000"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".conum[data-value] {"
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: inline-block;"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #fff !important;"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: rgba(0, 0, 0, .8);"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-border-radius: 100px;"
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-radius: 100px;"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-align: center;"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: .75em;"
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    width: 1.67em;"
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    height: 1.67em;"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    line-height: 1.67em;"
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-style: normal;"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-weight: bold"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".conum[data-value] * {"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: #fff !important"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".conum[data-value] + b {"
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none"
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".conum[data-value]:after {"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    content: attr(data-value)"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "pre .conum[data-value] {"
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    position: relative;"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    top: -.125em"
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "b.conum * {"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    color: inherit !important"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".conum:not([data-value]):empty {"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none"
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "dt, th.tableblock, td.content, div.footnote {"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    text-rendering: optimizeLegibility"
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "h1, h2, p, td.content, span.alt {"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    letter-spacing: -.01em"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "p strong, td.content strong, div.footnote strong {"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    letter-spacing: -.005em"
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "p, blockquote, dt, td.content, span.alt {"
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1.0625rem"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "p {"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    margin-bottom: 1.25rem"
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".sidebarblock p, .sidebarblock dt, .sidebarblock td.content, p.tableblock {"
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    font-size: 1em"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".exampleblock \u003e .content {"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    background-color: #fffef7;"
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    border-color: #e0e0dc;"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    -webkit-box-shadow: 0 1px 4px #e0e0dc;"
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    box-shadow: 0 1px 4px #e0e0dc"
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ".print-only {"
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    display: none !important"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "@media print {"
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @page {"
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin: 1.25cm .75cm"
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    * {"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        -webkit-box-shadow: none !important;"
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        box-shadow: none !important;"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        text-shadow: none !important"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    a {"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        color: inherit !important;"
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        text-decoration: underline !important"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    a.bare, a[href^\u003d\"#\"], a[href^\u003d\"mailto:\"] {"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        text-decoration: none !important"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    a[href^\u003d\"http:\"]:not(.bare):after, a[href^\u003d\"https:\"]:not(.bare):after {"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        content: \"(\" attr(href) \")\";"
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display: inline-block;"
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: .875em;"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-left: .25em"
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    abbr[title]:after {"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        content: \" (\" attr(title) \")\""
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    pre, blockquote, tr, img, object, svg {"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        page-break-inside: avoid"
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    thead {"
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display: table-header-group"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    svg {"
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        max-width: 100%"
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    p, blockquote, dt, td.content {"
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: 1em;"
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        orphans: 3;"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        widows: 3"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    h2, h3, #toctitle, .sidebarblock \u003e .content \u003e .title {"
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        page-break-after: avoid"
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc, .sidebarblock, .exampleblock \u003e .content {"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        background: none !important"
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #toc {"
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        border-bottom: 1px solid #ddddd8 !important;"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-bottom: 0 !important"
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .sect1 {"
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding-bottom: 0 !important"
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .sect1 + .sect1 {"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        border: 0 !important"
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #header \u003e h1:first-child {"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin-top: 1.25rem"
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.book #header {"
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        text-align: center"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.book #header \u003e h1:first-child {"
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        border: 0 !important;"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin: 2.5em 0 1em 0"
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.book #header .details {"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        border: 0 !important;"
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display: block;"
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding: 0 !important"
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.book #header .details span:first-child {"
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin-left: 0 !important"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.book #header .details br {"
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display: block"
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.book #header .details br + span:before {"
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        content: none !important"
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.book #toc {"
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        border: 0 !important;"
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        text-align: left !important;"
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding: 0 !important;"
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        margin: 0 !important"
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    body.book #toc, body.book #preamble, body.book h1.sect0, body.book .sect1 \u003e h2 {"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        page-break-before: always"
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .listingblock code[data-lang]:before {"
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display: block"
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #footer {"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        background: none !important;"
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        padding: 0 .9375em"
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    #footer-text {"
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        color: rgba(0, 0, 0, .6) !important;"
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        font-size: .9em"
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .hide-on-print {"
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display: none !important"
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .print-only {"
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display: block !important"
      },
      {
        "lineNumber": 2022,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2023,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2024,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .hide-for-print {"
      },
      {
        "lineNumber": 2025,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display: none !important"
      },
      {
        "lineNumber": 2026,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2027,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2028,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    .show-for-print {"
      },
      {
        "lineNumber": 2029,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display: inherit !important"
      },
      {
        "lineNumber": 2030,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2031,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 2028,
      "-": 3
    }
  },
  {
    "path": "docs/team/dingheng4448.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d Lim Ding Heng - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d PROJECT: PlanMySem"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "AddressBook - Level 4 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Major enhancement*: added *the ability to undo/redo previous commands*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Minor enhancement*: added a history command that allows the user to navigate to previous commands using up/down keys."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Code contributed*: [https://github.com[Functional code]] [https://github.com[Test code]] _{give links to collated code files}_"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Other contributions*:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Project management:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Enhancements to existing features:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Updated the GUI color scheme (Pull requests https://github.com[#33], https://github.com[#34])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests https://github.com[#36], https://github.com[#38])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Documentation:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Did cosmetic tweaks to existing contents of the User Guide: https://github.com[#14]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Community:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** PRs reviewed (with non-trivial review comments): https://github.com[#12], https://github.com[#32], https://github.com[#19], https://github.com[#42]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Contributed to forum discussions (examples:  https://github.com[1], https://github.com[2], https://github.com[3], https://github.com[4])"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Reported bugs and suggestions for other teams in the class (examples:  https://github.com[1], https://github.com[2], https://github.com[3])"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Some parts of the history feature I added was adopted by several other class mates (https://github.com[1], https://github.com[2])"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Tools:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Integrated a third party library (Natty) to the project (https://github.com[#42])"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Integrated a new Github plugin (CircleCI) to the team repo"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{you can add/remove categories in the list above}_"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../UserGuide.adoc[tag\u003dimportICS]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../UserGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dimportICS]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d PROJECT: PowerPointLabs"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "---"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{Optionally, you may include other projects in your portfolio.}_"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 72
    }
  },
  {
    "path": "docs/team/macchazuki.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d Julian Lim - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d PROJECT: PlanMySem"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "AddressBook - Level 4 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Major enhancement*: added *the ability to undo/redo previous commands*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Minor enhancement*: added a history command that allows the user to navigate to previous commands using up/down keys."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Code contributed*: [https://github.com[Functional code]] [https://github.com[Test code]] _{give links to collated code files}_"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Other contributions*:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Project management:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Enhancements to existing features:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Updated the GUI color scheme (Pull requests https://github.com[#33], https://github.com[#34])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests https://github.com[#36], https://github.com[#38])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Documentation:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Did cosmetic tweaks to existing contents of the User Guide: https://github.com[#14]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Community:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** PRs reviewed (with non-trivial review comments): https://github.com[#12], https://github.com[#32], https://github.com[#19], https://github.com[#42]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Contributed to forum discussions (examples:  https://github.com[1], https://github.com[2], https://github.com[3], https://github.com[4])"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Reported bugs and suggestions for other teams in the class (examples:  https://github.com[1], https://github.com[2], https://github.com[3])"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Some parts of the history feature I added was adopted by several other class mates (https://github.com[1], https://github.com[2])"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Tools:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Integrated a third party library (Natty) to the project (https://github.com[#42])"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Integrated a new Github plugin (CircleCI) to the team repo"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{you can add/remove categories in the list above}_"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../UserGuide.adoc[tag\u003dimportICS]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../UserGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dimportICS]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d PROJECT: PowerPointLabs"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "---"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{Optionally, you may include other projects in your portfolio.}_"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 72
    }
  },
  {
    "path": "docs/team/marcus-pzj.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d Marcus Phua - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d PROJECT: PlanMySem"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "AddressBook - Level 4 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Major enhancement*: added *the ability to undo/redo previous commands*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Minor enhancement*: added a history command that allows the user to navigate to previous commands using up/down keys."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Code contributed*: [https://github.com[Functional code]] [https://github.com[Test code]] _{give links to collated code files}_"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Other contributions*:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Project management:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Enhancements to existing features:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Updated the GUI color scheme (Pull requests https://github.com[#33], https://github.com[#34])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests https://github.com[#36], https://github.com[#38])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Documentation:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Did cosmetic tweaks to existing contents of the User Guide: https://github.com[#14]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Community:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** PRs reviewed (with non-trivial review comments): https://github.com[#12], https://github.com[#32], https://github.com[#19], https://github.com[#42]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Contributed to forum discussions (examples:  https://github.com[1], https://github.com[2], https://github.com[3], https://github.com[4])"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Reported bugs and suggestions for other teams in the class (examples:  https://github.com[1], https://github.com[2], https://github.com[3])"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Some parts of the history feature I added was adopted by several other class mates (https://github.com[1], https://github.com[2])"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Tools:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Integrated a third party library (Natty) to the project (https://github.com[#42])"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Integrated a new Github plugin (CircleCI) to the team repo"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{you can add/remove categories in the list above}_"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../UserGuide.adoc[tag\u003dimportICS]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../UserGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dimportICS]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d PROJECT: PowerPointLabs"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "---"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{Optionally, you may include other projects in your portfolio.}_"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 72
    }
  },
  {
    "path": "docs/team/seanieyap.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d Sean Yap - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d PROJECT: PlanMySem"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "AddressBook - Level 4 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Major enhancement*: added *the ability to undo/redo previous commands*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Minor enhancement*: added a history command that allows the user to navigate to previous commands using up/down keys."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Code contributed*: [https://github.com[Functional code]] [https://github.com[Test code]] _{give links to collated code files}_"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "* *Other contributions*:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Project management:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Enhancements to existing features:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Updated the GUI color scheme (Pull requests https://github.com[#33], https://github.com[#34])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests https://github.com[#36], https://github.com[#38])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Documentation:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Did cosmetic tweaks to existing contents of the User Guide: https://github.com[#14]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Community:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** PRs reviewed (with non-trivial review comments): https://github.com[#12], https://github.com[#32], https://github.com[#19], https://github.com[#42]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Contributed to forum discussions (examples:  https://github.com[1], https://github.com[2], https://github.com[3], https://github.com[4])"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Reported bugs and suggestions for other teams in the class (examples:  https://github.com[1], https://github.com[2], https://github.com[3])"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Some parts of the history feature I added was adopted by several other class mates (https://github.com[1], https://github.com[2])"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "** Tools:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Integrated a third party library (Natty) to the project (https://github.com[#42])"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "*** Integrated a new Github plugin (CircleCI) to the team repo"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{you can add/remove categories in the list above}_"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../UserGuide.adoc[tag\u003dimportICS]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../UserGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dimportICS]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003d\u003d PROJECT: PowerPointLabs"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "---"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "_{Optionally, you may include other projects in your portfolio.}_"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 72
    }
  },
  {
    "path": "src/planmysem/Main.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.logic.Logic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.ui.Gui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.ui.Stoppable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Main entry point to the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application implements Stoppable {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Version info of the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String VERSION \u003d \"PlanMySem - Version 1.2\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        launch(args);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) throws Exception {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Gui gui \u003d new Gui(new Logic(), VERSION);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        gui.start(primaryStage, this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void stop() throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        super.stop();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "seanieyap": 13,
      "-": 24
    }
  },
  {
    "path": "src/planmysem/commands/AddCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Utils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.recurrence.Recurrence;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Semester;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Location;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Adds a person to the planner."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String COMMAND_WORD_SHORT \u003d \"a\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add single or multiple slots to the Planner.\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tParameters: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\t\\tMandatory: n/NAME d/DATE_OR_DAY_OF_WEEK st/START_TIME et/END_TIME_OR_DURATION\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\t\\tOptional: [l/LOCATION] [des/DESCRIPTION] [r/normal] [r/recess] [r/reading] [r/exam]\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"[r/past] [t/TAG]...\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tExample: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \" n/CS2113T Tutorial d/mon st/08:00 et/09:00 des/Topic: Sequence Diagram t/CS2113T \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"t/Tutorial r/normal\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"%1$s Slots added.\\n\\n%2$s\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_FAIL_OUT_OF_BOUNDS \u003d \"Date specified is out of bounds.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Slot slot;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Recurrence recurrence;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convenience constructor using raw values."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if any of the raw values are invalid"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AddCommand(LocalDate date, String name, String location, String description, LocalTime startTime,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                      int duration, Set\u003cString\u003e tags, Set\u003cString\u003e recurrences) throws IllegalValueException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        slot \u003d new Slot(new Name(name), new Location(location), new Description(description),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                startTime, duration, Utils.parseTags(tags));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        recurrence \u003d new Recurrence(recurrences, date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Convenience constructor using raw values."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if any of the raw values are invalid"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AddCommand(int day, String name, String location, String description, LocalTime startTime,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                      int duration, Set\u003cString\u003e tags, Set\u003cString\u003e recurrences) throws IllegalValueException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        slot \u003d new Slot(new Name(name), new Location(location), new Description(description),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                startTime, duration, Utils.parseTags(tags));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        recurrence \u003d new Recurrence(recurrences, day);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cLocalDate\u003e dates \u003d recurrence.generateDates(planner.getSemester());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDate, Day\u003e days \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (LocalDate date : dates) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                days.put(date, planner.addSlot(date, slot));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } catch (Semester.DateNotFoundException dnfe) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new CommandResult(MESSAGE_FAIL_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, dates.size(),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                craftSuccessMessage(days, slot)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Craft success message."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static String craftSuccessMessage(Map\u003cLocalDate, Day\u003e days, Slot slot) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"On dates:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Day\u003e day : days.entrySet()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(count);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\".\\t\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(day.getValue().getType());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\", \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(day.getKey().toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\", \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(day.getKey().getDayOfWeek().toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"\\n\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(slot.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 81,
      "-": 25
    }
  },
  {
    "path": "src/planmysem/commands/ClearCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Clears the planner."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears the planner permanently.\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tExample: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"The Planner has been cleared!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        planner.clearSlots();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 6,
      "-": 13
    }
  },
  {
    "path": "src/planmysem/commands/Command.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.ui.Gui.DISPLAYED_INDEX_OFFSET;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Messages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.Planner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    protected Planner planner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    protected Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e relevantSlots;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private int targetIndex \u003d -1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @param slots last visible listing index of the target person"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public Command(List\u003cPair\u003cLocalDate, ? extends ReadOnlySlot\u003e\u003e slots) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        this.relevantSlots \u003d slots;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param targetIndex last visible listing index of the target person"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command(int targetIndex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public abstract CommandResult execute();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Constructs a feedback message to summarise an operation that displayed a listing of persons."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @param slots used to generate summary"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @return summary message for persons displayed"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static String getMessageForSlotsListShownSummary(Map\u003cLocalDate,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e slots) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, slots.size());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Supplies the data the command will operate on."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void setData(Planner planner, Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e slots) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.planner \u003d planner;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.relevantSlots \u003d slots;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public int getTargetIndex() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return targetIndex;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void setTargetIndex(int targetIndex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Extracts the the target Day in the last shown list from the given arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IndexOutOfBoundsException if the target index is out of bounds of the last viewed listing"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    protected Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e getTargetSlots() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        return relevantSlots;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    protected Pair\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e getTargetSlot() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (relevantSlots \u003d\u003d null || relevantSlots.size() \u003c targetIndex) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e entry : relevantSlots.entrySet()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (count \u003d\u003d targetIndex - DISPLAYED_INDEX_OFFSET) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new Pair(entry.getKey(), entry.getValue());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 59,
      "-": 37
    }
  },
  {
    "path": "src/planmysem/commands/CommandResult.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * The feedback message to be shown to the user. Contains a description of the execution result"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * The list of Slots that was produced by the command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e slots;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        slots \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public CommandResult(String feedbackToUser, Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e slots) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.slots \u003d slots;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns list of Slots relevant to the command command result, if any."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Optional\u003cMap\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e\u003e getRelevantSlots() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return Optional.ofNullable(slots);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 20,
      "-": 23
    }
  },
  {
    "path": "src/planmysem/commands/DeleteCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Messages;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Utils;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Adds a person to the address book."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String COMMAND_WORD_ALT \u003d \"del\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String COMMAND_WORD_SHORT \u003d \"d\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Delete single or multiple slots in the Planner.\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tParameters: \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\t\\tMandatory: t/TAG... or INDEX\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tExample 1: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \" t/CS2113T t/Tutorial\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tExample 2: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \" 2\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_SUCCESS_NO_CHANGE \u003d \"No Slots were deleted.\\n\\n%1$s\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"%1$s Slots deleted.\\n\\n%2$s\\n%3$s\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Convenience constructor using raw values."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if any of the raw values are invalid"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public DeleteCommand(Set\u003cString\u003e tags) throws IllegalValueException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.tags.addAll(Utils.parseTags(tags));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Convenience constructor using raw values."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (getTargetIndex() \u003d\u003d -1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            selectedSlots.putAll(planner.getSlots(tags));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (selectedSlots.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS_NO_CHANGE,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        Messages.craftSelectedMessage(tags)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                final Pair\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e target \u003d getTargetSlot();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                selectedSlots.put(target.getKey(), target.getValue());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new CommandResult(Messages.MESSAGE_INVALID_SLOT_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // perform deletion of slots from the planner"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e entry: selectedSlots.entrySet()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            planner.removeSlot(entry.getKey(), entry.getValue().getValue());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, selectedSlots.size(),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                Messages.craftSelectedMessage(tags), Messages.craftSelectedMessage(\"Deleted Slots:\", selectedSlots)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 64,
      "-": 19
    }
  },
  {
    "path": "src/planmysem/commands/EditCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Messages;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Utils;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Adds a person to the address book."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String COMMAND_WORD_SHORT \u003d \"e\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edit single or multiple slots in the Planner.\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tParameters: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\t\\tMandatory: t/TAG... or INDEX\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\t\\tOptional Parameters: [nst/NEW_START_TIME] [net/NEW_END_TIME|DURATION] \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"[nl/NEW_LOCATION] [nd/NEW_DESCRIPTION]\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tExample 1: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \" t/CS2113T t/Tutorial nl/COM2 04-01\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tExample 2: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \" 2 nl/COM2 04-01\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_SUCCESS_NO_CHANGE \u003d \"No Slots were edited.\\n\\n%1$s\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"%1$s Slots edited.\\n\\n%2$s\\n%3$s\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_FAIL_ILLEGAL_VALUE \u003d MESSAGE_SUCCESS"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        + \" Illegal characters were detected.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final LocalTime startTime;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final int duration;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final String location;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Convenience constructor using raw values."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if any of the raw values are invalid"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public EditCommand(String name, LocalTime startTime, int duration, String location, String description,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                       Set\u003cString\u003e tags, Set\u003cString\u003e newTags) throws IllegalValueException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (tags !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            this.tags.addAll(Utils.parseTags(tags));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (newTags !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            this.newTags.addAll(Utils.parseTags(newTags));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Convenience constructor using raw values."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public EditCommand(int index, String name, LocalDate date, LocalTime startTime, int duration,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                       String location, String description, Set\u003cString\u003e newTags)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throws IllegalValueException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (newTags !\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            this.newTags.addAll(Utils.parseTags(newTags));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (getTargetIndex() \u003d\u003d -1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            selectedSlots.putAll(planner.getSlots(tags));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (selectedSlots.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS_NO_CHANGE,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        Messages.craftSelectedMessage(tags)));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                final Pair\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e target \u003d getTargetSlot();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                selectedSlots.put(target.getKey(), target.getValue());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new CommandResult(Messages.MESSAGE_INVALID_SLOT_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // Need to craft success message earlier to get original instead of edited Slots"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String successMessage \u003d craftSuccessMessage(selectedSlots);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e entry : selectedSlots.entrySet()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                planner.editSlot(entry.getKey(), entry.getValue().getValue(), date,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        startTime, duration, name, location, description, newTags);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new CommandResult(MESSAGE_FAIL_ILLEGAL_VALUE);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, selectedSlots.size(),"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                Messages.craftSelectedMessage(tags), successMessage));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Craft success message."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String craftSuccessMessage(Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"Details Edited: \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (name !\u003d null) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\nName: \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\\"\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (\"\".equals(name)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                sb.append(\"null\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                sb.append(name);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\\"\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (startTime !\u003d null) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\nStart Time: \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\\"\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(startTime.toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\\"\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (duration !\u003d -1) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\nDuration: \");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\\"\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(duration);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\\"\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (location !\u003d null) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\nLocation: \");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\\"\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (\"\".equals(location)) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                sb.append(\"null\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                sb.append(location);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\\"\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (description !\u003d null) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\nDescription: \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\\"\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (\"\".equals(description)) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                sb.append(\"null\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                sb.append(description);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\\"\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (newTags.size() \u003e 0) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\nTags: \");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            StringJoiner sj \u003d new StringJoiner(\", \");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            for (Tag tag : newTags) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                StringBuilder sb2 \u003d new StringBuilder();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                sb2.append(\"\\\"\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                sb2.append(tag);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                sb2.append(\"\\\"\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                sj.add(sb2.toString());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(sj.toString());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"\\n\\n\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(Messages.craftSelectedMessage(\"Edited Slots:\", selectedSlots));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 197
    }
  },
  {
    "path": "src/planmysem/commands/ExitCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\" + \"Exits the program.\\n\\t\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWEDGEMENT \u003d \"Exiting PlanMySem as requested ...\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWEDGEMENT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 2,
      "-": 17
    }
  },
  {
    "path": "src/planmysem/commands/ExportCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import planmysem.data.semester.AdaptedSemester;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "macchazuki"
        },
        "content": " * Exports the calendar into a .ics file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "macchazuki"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class ExportCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"export\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Delete single or multiple slots in the Planner.\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            + \"\\n\\tExample: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    public static final String MESSAGE_EXPORT_ACKNOWEDGEMENT \u003d \"Calendar exported\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        AdaptedSemester semester \u003d new AdaptedSemester(planner.getSemester());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"PlanMySem.ics\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            writer.write(semester.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new CommandResult(MESSAGE_EXPORT_ACKNOWEDGEMENT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 3,
      "macchazuki": 30
    }
  },
  {
    "path": "src/planmysem/commands/FindCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Messages;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": " * Finds all slots in planner whose name contains the argument keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Keyword matching is case sensitive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public static final String COMMAND_WORD_SHORT \u003d \"f\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"%1$s Slots listed.\\n%2$s\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String MESSAGE_SUCCESS_NONE \u003d \"0 Slots listed.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\" + \"Finds all slots whose name \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            + \"contains the specified keywords (case-sensitive).\\n\\t\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\\t\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \"n/CS\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    private final boolean isFindByName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public FindCommand(String name, String tag) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        this.keyword \u003d (name \u003d\u003d null) ? tag.trim() : name.trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        this.isFindByName \u003d (name !\u003d null);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Day\u003e entry : planner.getAllDays().entrySet()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            for (Slot slot : entry.getValue().getSlots()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                if (isFindByName) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    if (Pattern.matches(\".*\" + keyword + \".*\", slot.getName().value)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        selectedSlots.put(entry.getKey(), new Pair\u003c\u003e(entry.getValue(), slot));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    Set\u003cTag\u003e tagSet \u003d slot.getTags();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                    for (Tag tag : tagSet) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                        if (Pattern.matches(\".*\" + keyword + \".*\", tag.value)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                            selectedSlots.put(entry.getKey(), new Pair\u003c\u003e(entry.getValue(), slot));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (selectedSlots.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            return new CommandResult(MESSAGE_SUCCESS_NONE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        setData(planner, selectedSlots);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, selectedSlots.size(),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                Messages.craftSelectedMessage(selectedSlots)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 21,
      "marcus-pzj": 29,
      "-": 20
    }
  },
  {
    "path": "src/planmysem/commands/HelpCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * Shows help instructions."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\" + \"Shows program usage instructions.\\n\\t\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_ALL_USAGES \u003d AddCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\n\" + EditCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\n\" + DeleteCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\n\" + ListCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\n\" + FindCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            //            + \"\\n\\n\" + ViewCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            //            + \"\\n\\n\" + ViewAllCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\n\" + ClearCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\n\" + HelpCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\n\" + ExitCommand.MESSAGE_USAGE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_ALL_USAGES);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 10,
      "-": 19
    }
  },
  {
    "path": "src/planmysem/commands/HistoryCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import planmysem.parser.CommandHistory;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": " * Lists all the commands entered by user from the start of app launch."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class HistoryCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"history\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Entered commands (from most recent to earliest):\\n%1$s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public static final String MESSAGE_NO_HISTORY \u003d \"You have not yet entered any commands.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final CommandHistory commandHistory;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * TODO: java doc"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public HistoryCommand(CommandHistory commandHistory) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.commandHistory \u003d commandHistory;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * TODO: description"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @return CommandResult with a list of previousCommands"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        requireNonNull(commandHistory);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        ArrayList\u003cString\u003e previousCommands \u003d new ArrayList\u003c\u003e(commandHistory.getHistory());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        if (previousCommands.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new CommandResult(MESSAGE_NO_HISTORY);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        Collections.reverse(previousCommands);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, String.join(\"\\n\", previousCommands)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "seanieyap": 17,
      "marcus-pzj": 28
    }
  },
  {
    "path": "src/planmysem/commands/IncorrectCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an incorrect command. Upon execution, produces some feedback to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public IncorrectCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(feedbackToUser);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 1,
      "-": 17
    }
  },
  {
    "path": "src/planmysem/commands/ListCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Messages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Day;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": " * Displays a list of all slots in the planner whose name matches the argument keyword."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Keyword matching is case sensitive."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String COMMAND_WORD_SHORT \u003d \"l\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"%1$s Slots listed.\\n%2$s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_SUCCESS_NONE \u003d \"0 Slots listed.\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all slots whose name \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            + \"directly matches the specified keyword (case-sensitive).\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            //+ \"\\n\\tOptional Parameters: [past] [next] [all]\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            //+ \"\\n\\tDefault: list all\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            + \"\\n\\tExample: \" + COMMAND_WORD + \" n/CS1010\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    private final boolean isListByName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public ListCommand(String name, String tag) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        this.keyword \u003d (name \u003d\u003d null) ? tag.trim() : name.trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        this.isListByName \u003d (name !\u003d null);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Day\u003e entry : planner.getAllDays().entrySet()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            for (Slot slot : entry.getValue().getSlots()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                if (isListByName) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    if (slot.getName().value.equalsIgnoreCase(keyword)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        selectedSlots.put(entry.getKey(), new Pair\u003c\u003e(entry.getValue(), slot));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    Set\u003cTag\u003e tagSet \u003d slot.getTags();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                    for (Tag tag : tagSet) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        //                        if (slot.getTags().contains(keyword))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                        if (tag.value.equalsIgnoreCase(keyword)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                            selectedSlots.put(entry.getKey(), new Pair\u003c\u003e(entry.getValue(), slot));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (selectedSlots.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new CommandResult(MESSAGE_SUCCESS_NONE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        setData(this.planner, relevantSlots);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, selectedSlots.size(),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                Messages.craftListMessage(selectedSlots)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "seanieyap": 39,
      "marcus-pzj": 21,
      "-": 13
    }
  },
  {
    "path": "src/planmysem/commands/ViewCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "package planmysem.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import planmysem.data.semester.Day;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import planmysem.data.semester.Semester;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": " * Adds a person to the address book."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    public static final String COMMAND_WORD_SHORT \u003d \"v\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": View month/week/day view or all details of planner.\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \"\\n\\tParameters: \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \"\\n\\t\\tMandatory: [viewType] [specifier]\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \"\\n\\tExample 1: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \" month\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \"\\n\\tExample 2: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \" week 7\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \"\\n\\tExample 3: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \" week recess\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \"\\n\\tExample 4: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \" day 01/03/2019\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \"\\n\\tExample 5: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            + \" all\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    private final String viewArgs;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    public ViewCommand(String viewArgs) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        this.viewArgs \u003d viewArgs;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String viewType;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        //String viewSpecifier;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        final Semester currentSemester \u003d planner.getSemester();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String output \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        if (\"all\".equals(viewArgs)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            //TODO: print all planner details"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            output \u003d \"all\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        } else if (\"month\".equals(viewArgs)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            output \u003d displayMonthView(currentSemester);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            viewType \u003d viewArgs.split(\" \")[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            //viewSpecifier \u003d viewArgs.split(\" \")[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            switch (viewType) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            case \"month\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                //TODO: month view"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            case \"week\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                //TODO: week view"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            case \"day\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                //TODO: day view"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        return new CommandResult(output);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * Display all months for the semester."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    private String displayMonthView(Semester currentSemester) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        HashMap\u003cLocalDate, Day\u003e allDays \u003d currentSemester.getDays();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate semesterStartDate \u003d currentSemester.getStartDate();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate semesterEndDate \u003d currentSemester.getEndDate();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int year \u003d semesterStartDate.getYear();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate firstDayOfMonth \u003d semesterStartDate.withDayOfMonth(1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int spaces \u003d firstDayOfMonth.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int lastMonthOfSem \u003d semesterEndDate.getMonthValue();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String[] months \u003d {\"\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int[] days \u003d {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        for (int m \u003d 1; m \u003c\u003d lastMonthOfSem; m++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            // Set number of days in February to 29 if it is a leap year."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            if ((((year % 4 \u003d\u003d 0) \u0026\u0026 (year % 100 !\u003d 0)) || (year % 400 \u003d\u003d 0)) \u0026\u0026 m \u003d\u003d 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                days[m] \u003d 29;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            // Print calendar header."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            sb.append(\"          \" + months[m] + \" \" + year + \"\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            sb.append(\"_____________________________________\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            sb.append(\"   Sun  Mon Tue   Wed Thu   Fri  Sat\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            // Print spaces required for the start of a month."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            spaces \u003d (days[m - 1] + spaces) % 7;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            for (int i \u003d 0; i \u003c spaces; i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                sb.append(\"     \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            // Print the days in the month."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d days[m]; i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                sb.append(String.format(\"  %3d\", i));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                if (((i + spaces) % 7 \u003d\u003d 0)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    Day tempDay \u003d allDays.get(LocalDate.of(year, m, i));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    String weekType \u003d \"\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    if (tempDay !\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                        weekType \u003d tempDay.getType();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    sb.append(\"   | \" + weekType + \"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                if (i \u003d\u003d days[m]) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    LocalDate tempDate \u003d LocalDate.of(year, m, i);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    Day tempDay \u003d allDays.get(tempDate);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    String weekType \u003d \"\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    int extraSpaces \u003d 6 - (tempDate.getDayOfWeek().getValue() % 7);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    for (int j \u003d 0; j \u003c extraSpaces; j++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                        sb.append(\"     \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    if (tempDay !\u003d null) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                        weekType \u003d tempDay.getType();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    sb.append(\"   | \" + weekType + \"\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingheng4448": 137
    }
  },
  {
    "path": "src/planmysem/common/Messages.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT_ADDITIONAL \u003d \"Invalid command format! \\n%1$s\\n\\n%2$s\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public static final String MESSAGE_INVALID_MULTIPLE_PARAMS \u003d \"Either search by NAME or by TAG only, not both.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_INVALID_SLOT_DISPLAYED_INDEX \u003d \"The slot index provided is invalid\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_PERSON_NOT_IN_ADDRESSBOOK \u003d \"Person could not be found in address book\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_SLOT_NOT_IN_PLANNER \u003d \"Slot could not be found in Planner\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_SLOTS_LISTED_OVERVIEW \u003d \"%1$d slots listed!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE \u003d \"Launch command format: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"java Main [STORAGE_FILE_PATH]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Welcome to PlanMySem!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USING_STORAGE_FILE \u003d \"Using storage file : %1$s\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE \u003d \"Date have to be in either these two formats:\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tIn the form of \\\"dd-mm\\\". e.g. \\\"01-01\\\"\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tIn the form of \\\"dd-mm-yyyy\\\". e.g. \\\"01-01-2019\\\"\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tOr perhaps target the next day of week. e.g. \\\"Monday\\\", \\\"mon\\\", \\\"1\\\"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String MESSAGE_INVALID_TIME \u003d \"Time have to be in either these two formats:\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\t24-Hour in the form of “hh:mm”. e.g. \\\"23:00\\\"\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\t12-Hour in the form of `hh:mm+AM|PM`. e.g. \\\"12:30am\\\"\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            + \"\\n\\tOr perhaps type a duration in minutes. e.g. \\\"60\\\" to represent 60 minutes\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Craft selected message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static String craftSelectedMessage(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"Selected Slots containing tags: \\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Tag tag : tags) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(count);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\".\\t\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(tag.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Craft selected message with header."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static String craftSelectedMessage(String header,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                                              Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(header);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return sb.toString() + getSelectedMessage(selectedSlots);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Craft selected message without header."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static String craftSelectedMessage(Map\u003cLocalDate,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return getSelectedMessage(selectedSlots);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Craft list message."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static String craftListMessage(Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e entry : selectedSlots.entrySet()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(count + \".\\t\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"Name: \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(entry.getValue().getValue().getName().toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\",\\n\\t\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"Date: \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(entry.getKey().toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\",\\n\\t\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"Start Time: \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(entry.getValue().getValue().getStartTime());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\n\\t\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"Tags: \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(entry.getValue().getValue().getTags());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Craft selected message."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static String getSelectedMessage(Map\u003cLocalDate,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e entry : selectedSlots.entrySet()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(count);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\".\\t\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(entry.getValue().getValue().getName());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\", \");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(entry.getKey());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\" \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(entry.getValue().getValue().getStartTime());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\", \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(entry.getValue().getKey().getType());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\", \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(entry.getKey().getDayOfWeek().toString());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 121,
      "marcus-pzj": 1,
      "-": 12
    }
  },
  {
    "path": "src/planmysem/common/Utils.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static java.time.temporal.ChronoUnit.MINUTES;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.Year;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.temporal.TemporalAdjusters;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Utility methods"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class Utils {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final Pattern DATE_FORMAT \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Pattern.compile(\"(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)\\\\d\\\\d)\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final Pattern DATE_FORMAT_NO_YEAR \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Pattern.compile(\"(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final Pattern TWELVE_HOUR_FORMAT \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Pattern.compile(\"(1[012]|[1-9]):[0-5][0-9](\\\\s)?(AM|PM)\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final Pattern TWENTY_FOUR_HOUR_FORMAT \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Pattern.compile(\"([01]?[0-9]|2[0-3]):[0-5][0-9]\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final Pattern INTEGER_FORMAT \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Pattern.compile(\"\\\\d+\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether any of the given items are null."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isAnyNull(Object... items) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Object item : items) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item \u003d\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if every element in a collection are unique by {@link Object#equals(Object)}."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean elementsAreUnique(Collection\u003c?\u003e items) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        final Set\u003cObject\u003e testSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Object item : items) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            final boolean itemAlreadyExists \u003d !testSet.add(item); // see Set documentation"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            if (itemAlreadyExists) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Check if String represents an actual date or day."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns 0 if string does not represent a DayOfWeek, else returns int corresponding to the day."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static int parseDay(String unknown) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (unknown.trim().isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String day \u003d unknown.trim().toLowerCase();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int result \u003d -1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        switch (day) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"monday\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"mon\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"tuesday\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"tues\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d 2;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"wednesday\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"wed\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d 3;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"thursday\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"thurs\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"4\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d 4;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"friday\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"fri\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"5\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d 5;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"saturday\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"sat\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"6\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d 6;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"sunday\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"sun\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case \"7\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d 7;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d -1;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Parse String to LocalDate."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static LocalDate parseDate(String date) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (DATE_FORMAT.matcher(date).matches()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d-MM-yyyy\"));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else if (DATE_FORMAT_NO_YEAR.matcher(date).matches()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return LocalDate.parse(date + \"-\" + Year.now().getValue(), DateTimeFormatter.ofPattern(\"d-MM-yyyy\"));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Parse LocalDate to String."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static String parseDate(LocalDate date) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"d-MM-yyyy\"));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Parse String to 12 hour or 24 hour time format."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static LocalTime parseTime(String time) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalTime result \u003d null;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (time !\u003d null \u0026\u0026 TWELVE_HOUR_FORMAT.matcher(time).matches()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"h[h]:mm a\"));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else if (TWENTY_FOUR_HOUR_FORMAT.matcher(time).matches()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"H[H]:mm\"));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Parse string into integer."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static int parseInteger(String value) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (value !\u003d null \u0026\u0026 INTEGER_FORMAT.matcher(value).matches()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return Integer.parseInt(value);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Convert set of strings into set of tags."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if any of the raw values are invalid"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static Set\u003cTag\u003e parseTags(Set\u003cString\u003e tags) throws IllegalValueException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (tags \u003d\u003d null) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (String tag : tags) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            tagSet.add(new Tag(tag));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return tagSet;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Get the time difference between two LocalTimes in minutes."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static int getDuration(LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return (int) MINUTES.between(startTime, endTime);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Get the end time of a time after a duration."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static LocalTime getEndTime(LocalTime time, int duration) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return time.plusMinutes(duration);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Get the nearest date to a type of day from today."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static LocalDate getNearestDayOfWeek(LocalDate date, int day) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return date.with(TemporalAdjusters.next(DayOfWeek.of(day)));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 174,
      "-": 36
    }
  },
  {
    "path": "src/planmysem/data/Planner.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Semester;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents the entire Planner. Contains the data of the Planner."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class Planner {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Semester semester;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Creates an empty planner."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Planner() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        semester \u003d Semester.generateSemester(LocalDate.now());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * Constructs a Planner with the given data."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * @param semester external changes to this will not affect this Planner"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    public Planner(Semester semester) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        this.semester \u003d new Semester(semester);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Adds a day to the Planner."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws Semester.DuplicateDayException if a date is not found in the semester."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void addDay(LocalDate date, Day day) throws Semester.DuplicateDayException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        semester.addDay(date, day);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Adds a slot to the Planner."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Day addSlot(LocalDate date, Slot slot) throws Semester.DateNotFoundException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return semester.addSlot(date, slot);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Removes a Slot in the Planner."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void removeSlot(LocalDate date, ReadOnlySlot slot) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        semester.removeSlot(date, slot);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Edit specific slot within the planner."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if a targetDate is not found in the semester."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void editSlot(LocalDate targetDate, ReadOnlySlot targetSlot, LocalDate date,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                         LocalTime startTime, int duration, String name, String location,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                         String description, Set\u003cTag\u003e tags) throws IllegalValueException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        semester.editSlot(targetDate, targetSlot, date, startTime, duration, name, location, description, tags);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Checks if an slot exists in planner."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean containsSlot(LocalDate date, ReadOnlySlot slot) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return semester.contains(date, slot);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Checks if an equivalent Day exists in the Planner."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean containsDay(ReadOnlyDay day) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return semester.contains(day);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Checks if an equivalent Day exists in the Planner."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean containsDay(LocalDate date) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return semester.contains(date);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Removes the equivalent day from the Planner."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws Semester.DateNotFoundException if no such Day could be found."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void removeDay(ReadOnlyDay day) throws Semester.DateNotFoundException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        semester.remove(day);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Removes the equivalent day from the Planner."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws Semester.DateNotFoundException if no such Day could be found."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void removeDay(LocalDate date) throws Semester.DateNotFoundException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        semester.remove(date);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Clears all days from the Planner."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void clearDays() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        semester.clearDays();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Clears all slots from the Planner."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void clearSlots() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        semester.clearSlots();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Defensively copy the Semester in the Planner at the time of the call."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Semester getSemester() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return semester;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * gets all days in the Planner."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public HashMap\u003cLocalDate, Day\u003e getAllDays() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return semester.getDays();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * gets specific day in the Planner."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Day getDay(LocalDate date) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return getAllDays().get(date);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * gets all slots in the Planner containing all specified tags."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e getSlots(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Day\u003e entry : getAllDays().entrySet()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            for (Slot slot : entry.getValue().getSlots()) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                if (slot.getTags().containsAll(tags)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    selectedSlots.put(entry.getKey(), new Pair\u003c\u003e(entry.getValue(), slot));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return selectedSlots;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (other instanceof Planner // instanceof handles nulls"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.semester.equals(((Planner) other).semester));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return semester.hashCode();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 127,
      "dingheng4448": 14,
      "-": 38
    }
  },
  {
    "path": "src/planmysem/data/exception/DuplicateDataException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Signals an error caused by duplicate data where there should be none."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class DuplicateDataException extends IllegalValueException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public DuplicateDataException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 1,
      "-": 9
    }
  },
  {
    "path": "src/planmysem/data/exception/IllegalValueException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Signals that some given data does not fulfill some constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class IllegalValueException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message should contain relevant information on the failed constraint(s)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public IllegalValueException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 1,
      "-": 12
    }
  },
  {
    "path": "src/planmysem/data/recurrence/Recurrence.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.recurrence;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Utils.getNearestDayOfWeek;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.TreeSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Semester;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents a Recurrence Value of a slot in the Planner."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class Recurrence {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final boolean normal; // Represents whether to recurse"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final boolean recess; // Represents recess week"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final boolean reading; // Represents reading week"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final boolean exam; // Represents exam weeks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final boolean past; // Represents past academic weeks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final DayOfWeek day;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Generate Recurrence values from a set that recurse over a day."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Recurrence(Set\u003cString\u003e recurrences, int day) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.day \u003d DayOfWeek.of(day);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        date \u003d getNearestDayOfWeek(LocalDate.now(), day);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (recurrences \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            normal \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            recess \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            reading \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            exam \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            past \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        normal \u003d recurrences.contains(\"normal\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        recess \u003d recurrences.contains(\"recess\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        reading \u003d recurrences.contains(\"reading\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        exam \u003d recurrences.contains(\"exam\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        past \u003d recurrences.contains(\"past\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Generate Recurrence values from a set that recurse over a date."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Recurrence(Set\u003cString\u003e recurrences, LocalDate date) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        day \u003d date.getDayOfWeek();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (recurrences \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            normal \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            recess \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            reading \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            past \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            exam \u003d false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        normal \u003d recurrences.contains(\"normal\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        recess \u003d recurrences.contains(\"recess\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        reading \u003d recurrences.contains(\"reading\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        exam \u003d recurrences.contains(\"exam\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        past \u003d recurrences.contains(\"past\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Generate dates to place slots in the semester."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Set\u003cLocalDate\u003e generateDates(Semester semester) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Set\u003cLocalDate\u003e result \u003d new TreeSet\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (!normal \u0026\u0026 !recess \u0026\u0026 !reading \u0026\u0026 !exam) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result.add(date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (past) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            // recurse over normal days"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (normal) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.addAll(getDates(semester.getNormalDays()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            // recurse over recess days"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (recess) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.addAll(getDates(semester.getRecessDays()));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            // recurse over reading days"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (reading) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.addAll(getDates(semester.getReadingDays()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            // recurse over exam days"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (exam) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.addAll(getDates(semester.getExamDays()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            LocalDate dateStart \u003d LocalDate.now();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            // recurse over normal days"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (normal) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.addAll(getDates(semester.getNormalDays(), dateStart));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            // recurse over recess days"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (recess) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.addAll(getDates(semester.getRecessDays(), dateStart));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            // recurse over reading days"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (reading) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.addAll(getDates(semester.getReadingDays(), dateStart));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            // recurse over examination days"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (exam) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.addAll(getDates(semester.getExamDays(), dateStart));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Get set of dates where it is a specific DayOfWeek and is after a start date."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Set\u003cLocalDate\u003e getDates(Set\u003cLocalDate\u003e dates) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Set\u003cLocalDate\u003e result \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (LocalDate d : dates) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (d.getDayOfWeek() \u003d\u003d day) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.add(d);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Get set of dates where it is a specific DayOfWeek and is after a start date."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Set\u003cLocalDate\u003e getDates(Set\u003cLocalDate\u003e dates, LocalDate dateStart) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Set\u003cLocalDate\u003e result \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (LocalDate d : dates) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (d.getDayOfWeek() \u003d\u003d day \u0026\u0026 (d.isAfter(dateStart) || d.isEqual(dateStart))) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.add(d);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Get date."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (other instanceof Recurrence // instanceof handles nulls"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.recess \u003d\u003d ((Recurrence) other).recess"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.reading \u003d\u003d ((Recurrence) other).reading"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.normal \u003d\u003d ((Recurrence) other).normal"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.exam \u003d\u003d ((Recurrence) other).exam"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.past \u003d\u003d ((Recurrence) other).past); // state check"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int hashCode \u003d 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (recess) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            hashCode +\u003d 1; // 0001"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (reading) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            hashCode +\u003d 2; // 0010"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (normal) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            hashCode +\u003d 4; // 0100"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (exam) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            hashCode +\u003d 8; // 1000"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (past) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            hashCode +\u003d 16; // 1 0000"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return hashCode + day.hashCode() + date.hashCode();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 193
    }
  },
  {
    "path": "src/planmysem/data/semester/AdaptedSemester.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "package planmysem.data.semester;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "macchazuki"
        },
        "content": " * JAXB-friendly adapted address book data holder class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "macchazuki"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "public class AdaptedSemester {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    private String icsCalendar;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * Converts a given Slot into this class for .ics use."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * @param source Slot object to be converted into .ics format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    public AdaptedSemester(Semester source) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyyMMdd\u0027T\u0027HHmmss\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        this.icsCalendar \u003d \"BEGIN:VCALENDAR\\r\\nVERSION:2.0\\r\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        for (LocalDate date : source.getDays().keySet()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            for (Slot slots : source.getDays().get(date).getSlots()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                this.icsCalendar \u003d this.icsCalendar.concat(\"BEGIN:VEVENT\\r\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                LocalDateTime startDateTime \u003d date.atTime(slots.getStartTime());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                this.icsCalendar \u003d this.icsCalendar.concat(\"DTSTART:\" + dateFormat.format(startDateTime) + \"\\r\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                LocalDateTime endDateTime \u003d startDateTime.plusMinutes(slots.getDuration());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                this.icsCalendar \u003d this.icsCalendar.concat(\"DTEND:\" + dateFormat.format(endDateTime) + \"\\r\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                this.icsCalendar \u003d this.icsCalendar.concat(\"SUMMARY:\" + slots.getName() + \"\\r\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                if (slots.getLocation().toString() !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                    this.icsCalendar \u003d this.icsCalendar.concat(\"LOCATION:\" + slots.getLocation() + \"\\r\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                this.icsCalendar \u003d this.icsCalendar.concat(\"DESCRIPTION:\" + slots.getDescription() + \"\\r\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                this.icsCalendar \u003d this.icsCalendar.concat(\"END:VEVENT\\r\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        this.icsCalendar \u003d this.icsCalendar.concat(\"END:VCALENDAR\\r\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        return icsCalendar;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "macchazuki": 46
    }
  },
  {
    "path": "src/planmysem/data/semester/Day.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.semester;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents a Day in the planner."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Guarantees: details are present and not null, field values are validated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class Day implements ReadOnlyDay {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final DayOfWeek dayOfWeek;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final ArrayList\u003cSlot\u003e slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Assumption: Every field must be present and not null."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Day(DayOfWeek dayOfWeek, String weekType) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.dayOfWeek \u003d dayOfWeek;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        this.type \u003d weekType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Day(DayOfWeek dayOfWeek, String weekType, ArrayList\u003cSlot\u003e slots) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.dayOfWeek \u003d dayOfWeek;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        this.type \u003d weekType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            this.slots.add(slot);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Add a slot to the day."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void addSlot(Slot slot) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        slots.add(slot);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Edit a slot in the day."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void editSlot(ReadOnlySlot targetSlot, LocalTime startTime, int duration,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                         String name, String location, String description) throws IllegalValueException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (slot.equals(targetSlot)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                if (startTime !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    slot.setStartTime(startTime);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                if (duration !\u003d -1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    slot.setDuration(duration);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                slot.setName(name);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                slot.setLocation(location);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                slot.setDescription(description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Removes the equivalent slot from the day."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void removeSlot(ReadOnlySlot slot) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        slots.remove(slot);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Removes all slots from the day."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        slots.clear();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean contains(ReadOnlySlot slot) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return slots.contains(slot);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public DayOfWeek getDayOfWeek() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return dayOfWeek;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return dayOfWeek.toString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public ArrayList\u003cSlot\u003e getSlots() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return slots;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (other instanceof ReadOnlyDay // instanceof handles nulls"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.isSameStateAs((ReadOnlyDay) other));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return Objects.hash(dayOfWeek, type, slots);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Signals that an operation targeting a specified slot in the list would fail because"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * there is no such matching slot in the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static class SlotNotFoundException extends Exception {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 123,
      "dingheng4448": 2
    }
  },
  {
    "path": "src/planmysem/data/semester/ReadOnlyDay.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.semester;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents a Day in the planner."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Guarantees: details are present and not null, field values are validated."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public interface ReadOnlyDay {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    DayOfWeek getDayOfWeek();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    String getDay();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    String getType();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    ArrayList\u003cSlot\u003e getSlots();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true if the values inside this object is same as those of the other"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * (Note: interfaces cannot override .equals)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    default boolean isSameStateAs(ReadOnlyDay other) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (other !\u003d null // this is first to avoid NPE below"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 other.getDayOfWeek().equals(this.getDayOfWeek()) // state checks here onwards"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 other.getDay().equals(this.getDay())"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 other.getType().equals(this.getType())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 other.getSlots().equals(this.getSlots()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 33
    }
  },
  {
    "path": "src/planmysem/data/semester/ReadOnlySemester.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.semester;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents a Semester in the planner."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Guarantees: details are present and not null, field values are validated."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public interface ReadOnlySemester {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    String getName();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    String getAcademicYear();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    HashMap\u003cLocalDate, Day\u003e getDays();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    LocalDate getStartDate();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    LocalDate getEndDate();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    int getNoOfWeeks();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    // These variables aid in making searches more effective"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    Set\u003cLocalDate\u003e getRecessDays();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    Set\u003cLocalDate\u003e getReadingDays();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    Set\u003cLocalDate\u003e getNormalDays();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    Set\u003cLocalDate\u003e getExamDays();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 24
    }
  },
  {
    "path": "src/planmysem/data/semester/Semester.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.semester;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.time.temporal.TemporalAdjusters;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.time.temporal.WeekFields;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.DuplicateDataException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * A list of days. Does not allow null elements or duplicates."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * @see Day#equals(Object)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class Semester implements ReadOnlySemester {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final String academicYear;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final HashMap\u003cLocalDate, Day\u003e days \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final LocalDate startDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final LocalDate endDate;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final int noOfWeeks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    // These variables aid in making searches more effective"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Set\u003cLocalDate\u003e recessDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Set\u003cLocalDate\u003e readingDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Set\u003cLocalDate\u003e normalDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Set\u003cLocalDate\u003e examDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Constructs empty semester."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Semester() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.name \u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.academicYear \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.startDate \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.endDate \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.noOfWeeks \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Constructs a semester with the given Days."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Semester(String name, String academicYear, HashMap\u003cLocalDate, Day\u003e days, LocalDate startDate,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    LocalDate endDate, int noOfWeeks, Set\u003cLocalDate\u003e recessDays, Set\u003cLocalDate\u003e readingDays,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    Set\u003cLocalDate\u003e normalDays, Set\u003cLocalDate\u003e examDays) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.academicYear \u003d academicYear;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.days.putAll(days);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.noOfWeeks \u003d noOfWeeks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.recessDays.addAll(recessDays);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.readingDays.addAll(readingDays);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.normalDays.addAll(normalDays);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.examDays.addAll(examDays);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Constructs a shallow copy of the Semester."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Semester(Semester source) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.name \u003d source.getName();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.academicYear \u003d source.getAcademicYear();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.days.putAll(source.days);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.startDate \u003d source.startDate;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.endDate \u003d source.endDate;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.noOfWeeks \u003d source.noOfWeeks;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.recessDays.addAll(source.recessDays);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.readingDays.addAll(source.readingDays);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.normalDays.addAll(source.normalDays);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.examDays.addAll(source.examDays);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * Generates current semester based on current date."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * As long as the current date falls within a semester, the generated semester is always the same."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * @param currentDate the current date when the program is run"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * @return the current semester object"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    public static Semester generateSemester(LocalDate currentDate) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String acadSem;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String acadYear;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String[] semesterDetails;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int noOfWeeks;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate startDate;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate endDate;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        List\u003cLocalDate\u003e datesList;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        HashMap\u003cInteger, String\u003e acadCalMap;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        HashMap\u003cLocalDate, Day\u003e days \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        Set\u003cLocalDate\u003e recessDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        Set\u003cLocalDate\u003e readingDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        Set\u003cLocalDate\u003e normalDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        Set\u003cLocalDate\u003e examDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadCalMap \u003d generateAcadCalMap(currentDate);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        semesterDetails \u003d getSemesterDetails(currentDate, acadCalMap);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadSem \u003d semesterDetails[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadYear \u003d semesterDetails[2];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        noOfWeeks \u003d Integer.parseInt(semesterDetails[3]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        startDate \u003d LocalDate.parse(semesterDetails[4]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        endDate \u003d LocalDate.parse(semesterDetails[5]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Initialise HashMap and Sets of all days in current semester"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        datesList \u003d startDate.datesUntil(endDate).collect(Collectors.toList());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        for (LocalDate date: datesList) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            int weekOfYear \u003d date.get(WeekFields.ISO.weekOfWeekBasedYear());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            String weekType \u003d acadCalMap.get(weekOfYear).split(\"_\")[0];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            days.put(date, new Day(date.getDayOfWeek(), weekType));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            switch (weekType) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            case \"Recess Week\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                recessDays.add(date);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            case \"Reading Week\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                readingDays.add(date);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            case \"Examination Week\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                examDays.add(date);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                normalDays.add(date);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        return new Semester(acadSem, acadYear, days, startDate, endDate, noOfWeeks,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                recessDays, readingDays, normalDays, examDays);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * Generates academic calendar for a given date."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * @param date used to determine academic year"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * @return details of academic calendar"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    private static HashMap\u003cInteger, String\u003e generateAcadCalMap(LocalDate date) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        HashMap\u003cInteger, String\u003e acadCalMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate semOneStartDate \u003d date;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate semTwoEndDate \u003d date;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int currentMonth \u003d date.getMonthValue();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int currentYear \u003d date.getYear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int semOneStartWeek;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int semTwoStartWeek;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int semTwoEndWeek;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int acadWeekNo;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int noOfWeeksInYear;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int vacationWeekNo;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        if (currentMonth \u003c 8) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            // Academic Year beginning from August of previous year"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            semOneStartDate \u003d semOneStartDate.withYear(currentYear - 1).withMonth(8)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    .with(TemporalAdjusters.firstInMonth(DayOfWeek.MONDAY));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            semOneStartWeek \u003d semOneStartDate.get(WeekFields.ISO.weekOfWeekBasedYear());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            semTwoEndDate \u003d semTwoEndDate.withYear(currentYear).withMonth(8)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    .with(TemporalAdjusters.firstInMonth(DayOfWeek.MONDAY)).minusDays(1);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            semTwoEndWeek \u003d semTwoEndDate.get(WeekFields.ISO.weekOfWeekBasedYear());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            // Academic Year beginning from August of current year"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            semOneStartDate \u003d semOneStartDate.withYear(currentYear).withMonth(8)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    .with(TemporalAdjusters.firstInMonth(DayOfWeek.MONDAY));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            semOneStartWeek \u003d semOneStartDate.get(WeekFields.ISO.weekOfWeekBasedYear());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            semTwoEndDate \u003d semTwoEndDate.withYear(currentYear + 1).withMonth(8)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    .with(TemporalAdjusters.firstInMonth(DayOfWeek.MONDAY)).minusDays(1);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            semTwoEndWeek \u003d semTwoEndDate.get(WeekFields.ISO.weekOfWeekBasedYear());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 1 - Orientation Week"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadCalMap.put(semOneStartWeek, \"Orientation Week_Sem 1\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 1 - Week 1 to 6"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadWeekNo \u003d 1;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        for (int i \u003d semOneStartWeek + 1; i \u003c semOneStartWeek + 7; i++) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadCalMap.put(i, \"Week \" + acadWeekNo + \"_Sem 1\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadWeekNo++;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 1 - Recess Week"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadCalMap.put(semOneStartWeek + 7, \"Recess Week_Sem 1\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 1 - Week 7 to 13"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadWeekNo \u003d 7;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        for (int i \u003d semOneStartWeek + 8; i \u003c semOneStartWeek + 15; i++) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadCalMap.put(i, \"Week \" + acadWeekNo + \"_Sem 1\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadWeekNo++;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 1 - Reading \u0026 Examination Weeks"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadCalMap.put(semOneStartWeek + 15, \"Reading Week_Sem 1\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadCalMap.put(semOneStartWeek + 16, \"Examination Week_Sem 1\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadCalMap.put(semOneStartWeek + 17, \"Examination Week_Sem 1\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 1 - Vacation"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        noOfWeeksInYear \u003d (int) semOneStartDate.range(WeekFields.ISO.weekOfWeekBasedYear()).getMaximum();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        vacationWeekNo \u003d semOneStartWeek + 18;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        semTwoStartWeek \u003d 1;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i++) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            if ((vacationWeekNo + i) \u003c\u003d noOfWeeksInYear) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                acadCalMap.put(vacationWeekNo + i, \"Vacation_Sem 1\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                acadCalMap.put(semTwoStartWeek++, \"Vacation_Sem 1\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 2 - Week 1 to 6"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadWeekNo \u003d 1;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        for (int i \u003d semTwoStartWeek; i \u003c semTwoStartWeek + 6; i++) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadCalMap.put(i, \"Week \" + acadWeekNo + \"_Sem 2\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadWeekNo++;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 2 - Recess Week"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadCalMap.put(semTwoStartWeek + 6, \"Recess Week_Sem 2\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 2 - Week 7 to 13"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadWeekNo \u003d 7;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        for (int i \u003d semTwoStartWeek + 7; i \u003c semTwoStartWeek + 14; i++) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadCalMap.put(i, \"Week \" + acadWeekNo + \"_Sem 2\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadWeekNo++;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 2 - Reading \u0026 Examination Weeks"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadCalMap.put(semTwoStartWeek + 14, \"Reading Week_Sem 2\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadCalMap.put(semTwoStartWeek + 15, \"Examination Week_Sem 2\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadCalMap.put(semTwoStartWeek + 16, \"Examination Week_Sem 2\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Sem 2 - Vacation"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        vacationWeekNo \u003d semTwoStartWeek + 17;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        while (vacationWeekNo \u003c\u003d semTwoEndWeek) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadCalMap.put(vacationWeekNo++, \"Vacation_Sem 2\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        return acadCalMap;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * Initialises current semester\u0027s details."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     *"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * @param date the current date when the program is run"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * @param acadCalMap used to determine current academic week"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * @return an array of Strings of the current semester\u0027s details"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    private static String[] getSemesterDetails(LocalDate date, HashMap\u003cInteger, String\u003e acadCalMap) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String acadWeek;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String acadSem;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String acadYear \u003d null;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String noOfWeeks \u003d null;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String[] acadWeekDetails;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate startDate \u003d date;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate endDate \u003d date;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int currentYear \u003d date.getYear();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int currentWeekOfYear \u003d date.get(WeekFields.ISO.weekOfWeekBasedYear());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Initialise week numbers for certain weeks."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int firstWeekSemOne \u003d 0;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int firstWeekSemOneHol \u003d 0;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int lastWeekSemOneHol \u003d 0;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int firstWeekSemTwo \u003d 0;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        int firstWeekSemTwoHol \u003d 0;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        for (Map.Entry\u003cInteger, String\u003e entry: acadCalMap.entrySet()) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            if (\"Orientation Week_Sem 1\".equals(entry.getValue())) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                firstWeekSemOne \u003d entry.getKey();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            } else if (\"Examination Week_Sem 1\".equals(entry.getValue())) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                firstWeekSemOneHol \u003d entry.getKey() + 1;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            } else if (\"Week 1_Sem 2\".equals(entry.getValue())) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                lastWeekSemOneHol \u003d entry.getKey() - 1;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                firstWeekSemTwo \u003d entry.getKey();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            } else if (\"Examination Week_Sem 2\".equals(entry.getValue())) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                firstWeekSemTwoHol \u003d entry.getKey() + 1;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Set semester details."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadWeekDetails \u003d acadCalMap.get(currentWeekOfYear).split(\"_\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadWeek \u003d acadWeekDetails[0];"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        acadSem \u003d acadWeekDetails[1];"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        if (\"Vacation\".equals(acadWeek) \u0026\u0026 \"Sem 1\".equals(acadSem)) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            noOfWeeks \u003d \"5\";"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            if (currentWeekOfYear \u003c 4) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                acadYear \u003d \"AY\" + (currentYear - 1) + \"/\" + currentYear;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                startDate \u003d startDate.withYear(currentYear - 1);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                acadYear \u003d \"AY\" + currentYear + \"/\" + (currentYear + 1);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                endDate \u003d endDate.withYear(currentYear + 1);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            startDate \u003d startDate.with(WeekFields.ISO.weekOfWeekBasedYear(), firstWeekSemOneHol);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            startDate \u003d startDate.with(WeekFields.ISO.dayOfWeek(), 1);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            endDate \u003d endDate.with(WeekFields.ISO.weekOfWeekBasedYear(), lastWeekSemOneHol);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            endDate \u003d endDate.with(WeekFields.ISO.dayOfWeek(), 7);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        } else if (\"Vacation\".equals(acadWeek) \u0026\u0026 \"Sem 2\".equals(acadSem)) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            noOfWeeks \u003d \"12\";"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadYear \u003d \"AY\" + (currentYear - 1) + \"/\" + currentYear;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            startDate \u003d startDate.with(WeekFields.ISO.weekOfWeekBasedYear(), firstWeekSemTwoHol);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            startDate \u003d startDate.with(WeekFields.ISO.dayOfWeek(), 1);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            endDate \u003d endDate.with(WeekFields.ISO.weekOfWeekBasedYear(), firstWeekSemTwoHol + 11);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            endDate \u003d endDate.with(WeekFields.ISO.dayOfWeek(), 7);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        } else if (\"Sem 1\".equals(acadSem)) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            noOfWeeks \u003d \"18\";"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadYear \u003d \"AY\" + currentYear + \"/\" + (currentYear + 1);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            startDate \u003d startDate.with(WeekFields.ISO.weekOfWeekBasedYear(), firstWeekSemOne);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            startDate \u003d startDate.with(WeekFields.ISO.dayOfWeek(), 1);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            endDate \u003d endDate.with(WeekFields.ISO.weekOfWeekBasedYear(), firstWeekSemOne + 17);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            endDate \u003d endDate.with(WeekFields.ISO.dayOfWeek(), 7);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        } else if (\"Sem 2\".equals(acadSem)) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            noOfWeeks \u003d \"17\";"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            acadYear \u003d \"AY\" + (currentYear - 1) + \"/\" + currentYear;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            startDate \u003d startDate.with(WeekFields.ISO.weekOfWeekBasedYear(), firstWeekSemTwo);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            startDate \u003d startDate.with(WeekFields.ISO.dayOfWeek(), 1);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            endDate \u003d endDate.with(WeekFields.ISO.weekOfWeekBasedYear(), firstWeekSemTwo + 16);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            endDate \u003d endDate.with(WeekFields.ISO.dayOfWeek(), 7);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        return new String[] {acadWeek, acadSem, acadYear, noOfWeeks, startDate.toString(), endDate.toString()};"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Adds a Day to the list."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws DuplicateDayException if the Day to addDay is a duplicate of an existing Day in the list."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void addDay(LocalDate date, Day day) throws DuplicateDayException {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (contains(day)) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new DuplicateDayException();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        days.put(date, day);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Get set of slots which contain all specified tags."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Map\u003cLocalDateTime, ReadOnlySlot\u003e getSlots(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDateTime, ReadOnlySlot\u003e selectedSlots \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Day\u003e day : days.entrySet()) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            for (Slot slot : day.getValue().getSlots()) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                if (slot.getTags().containsAll(tags)) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    selectedSlots.put(LocalDateTime.of(day.getKey(), slot.getStartTime()), slot);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return selectedSlots;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Adds a Slot to the Semester."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws DateNotFoundException if a date is not found in the semester."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Day addSlot(LocalDate date, Slot slot) throws DateNotFoundException {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (date \u003d\u003d null || (date.isBefore(startDate) || date.isAfter(endDate))) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new DateNotFoundException();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        days.get(date).addSlot(slot);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return days.get(date);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Removes a Slot to the Semester."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void removeSlot(LocalDate date, ReadOnlySlot slot) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        days.get(date).removeSlot(slot);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Edits a Slot in the Semester."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws DateNotFoundException if a targetDate is not found in the semester."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if a targetDate is not found in the semester."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void editSlot(LocalDate targetDate, ReadOnlySlot targetSlot, LocalDate date, LocalTime startTime,"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                         int duration, String name, String location, String description, Set\u003cTag\u003e tags)"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throws IllegalValueException {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Slot editingSlot \u003d days.get(targetDate).getSlots().stream()"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            .filter(s -\u003e s.equals(targetSlot)).findAny().orElse(null);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Slot savedSlot \u003d new Slot(editingSlot);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            days.get(date).addSlot(savedSlot);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            days.get(targetDate).removeSlot(editingSlot);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            editingSlot \u003d savedSlot;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (startTime !\u003d null) {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            editingSlot.setStartTime(startTime);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (duration !\u003d -1) {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            editingSlot.setDuration(duration);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        editingSlot.setName(name);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        editingSlot.setLocation(location);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        editingSlot.setDescription(description);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (tags.size() \u003e 0) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            editingSlot.setTags(tags);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Removes the equivalent Day from the list."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws DateNotFoundException if no such Day could be found in the list."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void remove(ReadOnlyDay day) throws DateNotFoundException {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (!contains(day)) {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new DateNotFoundException();"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        days.remove(day);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Removes the equivalent Day from the list."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws DateNotFoundException if no such Day could be found in the list."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void remove(LocalDate date) throws DateNotFoundException {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (!contains(date)) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new DateNotFoundException();"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        days.remove(date);"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Clears all Days from the address book."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void clearDays() {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        days.clear();"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Clears all Days from the address book."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void clearSlots() {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Day\u003e day : days.entrySet()) {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            day.getValue().clear();"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Checks if the list contains an equivalent slot as the given argument."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean contains(LocalDate date, ReadOnlySlot slot) {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return days.get(date).contains(slot);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Checks if the list contains an equivalent Day as the given argument."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean contains(ReadOnlyDay day) {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return days.containsValue(day);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Checks if the list contains an equivalent date as the given argument."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean contains(LocalDate date) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return days.containsKey(date);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String getAcademicYear() {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return academicYear;"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public HashMap\u003cLocalDate, Day\u003e getDays() {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return days;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public LocalDate getStartDate() {"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public LocalDate getEndDate() {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public int getNoOfWeeks() {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return noOfWeeks;"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Set\u003cLocalDate\u003e getRecessDays() {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return recessDays;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Set\u003cLocalDate\u003e getReadingDays() {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return readingDays;"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Set\u003cLocalDate\u003e getNormalDays() {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return normalDays;"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Set\u003cLocalDate\u003e getExamDays() {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return examDays;"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (other instanceof Semester // instanceof handles nulls"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.name.equals(((Semester) other).name)"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.academicYear.equals(((Semester) other).academicYear)"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.days.equals(((Semester) other).days)"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.startDate.equals(((Semester) other).startDate)"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.endDate.equals(((Semester) other).endDate)"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.noOfWeeks \u003d\u003d (((Semester) other).noOfWeeks)"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.recessDays.equals(((Semester) other).recessDays)"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.readingDays.equals(((Semester) other).readingDays)"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.normalDays.equals(((Semester) other).normalDays)"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.examDays.equals(((Semester) other).examDays));"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return Objects.hash(name, academicYear, days, startDate, endDate, noOfWeeks,"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                recessDays, readingDays, normalDays, examDays);"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Signals that an operation would have violated the \u0027no duplicates\u0027 property."
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static class DuplicateDayException extends DuplicateDataException {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        protected DuplicateDayException() {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            super(\"Operation would result in duplicate days\");"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Signals that an operation targeting a specified Day in the list would fail because"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * there is no such matching Day in the list."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static class DateNotFoundException extends Exception {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 316,
      "dingheng4448": 245
    }
  },
  {
    "path": "src/planmysem/data/slot/Description.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents a Slot\u0027s description in the address book."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValid(String)}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class Description {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \"Slot\u0027s description should be spaces or alphanumeric characters\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String VALIDATION_REGEX \u003d \".+\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Validates given value."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if given value string is invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Description(String value) throws IllegalValueException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (value !\u003d null \u0026\u0026 !isValid(value)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new IllegalValueException(MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true if a given string is a valid Slot description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static boolean isValid(String value) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return \"\".equals(value) || value.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (other instanceof Description // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.value.equals(((Description) other).value)); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 52
    }
  },
  {
    "path": "src/planmysem/data/slot/Location.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents a Slot\u0027s location in the address book."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValid(String)}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class Location {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \"Slot\u0027s location should be spaces or alphanumeric characters\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String VALIDATION_REGEX \u003d \".+\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final String value;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Validates given value."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if given value string is invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Location(String value) throws IllegalValueException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (value !\u003d null \u0026\u0026 !isValid(value)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new IllegalValueException(MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true if a given string is a valid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static boolean isValid(String value) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return \"\".equals(value) || value.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (other instanceof Location // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.value.equals(((Location) other).value)); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 52
    }
  },
  {
    "path": "src/planmysem/data/slot/Name.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents a Slot\u0027s name in the Planner."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValid(String)}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String MESSAGE_CONSTRAINTS \u003d \"Slot names should be spaces or alphanumeric characters\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String VALIDATION_REGEX \u003d \".+\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Validates given value."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if given name string is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Name(String value) throws IllegalValueException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (!isValid(value)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new IllegalValueException(MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true if a given string is a valid slot name."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Retrieves a listing of every word in the name, in order."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public List\u003cString\u003e getWordsInValue() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        return Arrays.asList(value.split(\"\\\\s+\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (other instanceof Name // instanceof handles nulls"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.value.equals(((Name) other).value)); // state check"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 58
    }
  },
  {
    "path": "src/planmysem/data/slot/ReadOnlySlot.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Utils;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * A read-only immutable interface for a Slot in the Planner."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Implementations should guarantee: details are present and not null, field values are validated."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public interface ReadOnlySlot {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    Name getName();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    Location getLocation();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    Description getDescription();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    int getDuration();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    LocalTime getStartTime();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * The returned {@code Set} is a deep copy of the internal {@code Set},"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * changes on the returned list will not affect the slot\u0027s internal tags."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    Set\u003cTag\u003e getTags();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true if the values inside this object is same as"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * those of the other (Note: interfaces cannot override .equals)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    default boolean isSameStateAs(ReadOnlySlot other) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (other !\u003d null // this is first to avoid NPE below"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 other.getName().equals(this.getName()) // state checks here onwards"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 other.getLocation().equals(this.getLocation())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 other.getDescription().equals(this.getDescription())"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 other.getStartTime().equals(this.getStartTime())"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 other.getDuration() \u003d\u003d this.getDuration()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 other.getTags().equals(this.getTags()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * Formats the slot as text, showing all slot details."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    default String getAsTextShowAll() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"Slot Details:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"\\nName: \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(getName());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"\\nLocation: \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(getLocation());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"\\nDescription: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(getDescription());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"\\nTime: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(getStartTime());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\" to \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(Utils.getEndTime(getStartTime(), getDuration()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"\\nDuration: \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(getDuration());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        sb.append(\"\\nTags: \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Tag tag : getTags()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\"\\t\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(count);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(\".\\t\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(tag.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 78,
      "macchazuki": 2
    }
  },
  {
    "path": "src/planmysem/data/slot/Slot.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Utils;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "macchazuki"
        },
        "content": " * Represents a slot in the planner."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Guarantees: details are present and not null, field values are validated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class Slot implements ReadOnlySlot {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Location location;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Description description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private int duration;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Assumption: Every field must be present and not null."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Slot(Name name, Location location, Description description,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                LocalTime startTime, LocalTime endTime, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.duration \u003d Utils.getDuration(startTime, endTime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (tags !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            this.tags.addAll(tags);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Assumption: Every field must be present and not null."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Slot(Name name, Location location, Description description,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                LocalTime startTime, int duration, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (tags !\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            this.tags.addAll(tags);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Copy constructor."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if value is invalid"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Slot(ReadOnlySlot source) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this(source.getName(), source.getLocation(), source.getDescription(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                source.getStartTime(), source.getDuration(), source.getTags());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Set name."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if value is invalid"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void setName(String value) throws IllegalValueException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (value \u003d\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        name \u003d new Name(value);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Set location."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if value is invalid"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void setLocation(String value) throws IllegalValueException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (value \u003d\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (\"\".equals(value)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            location \u003d new Location(null);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            location \u003d new Location(value);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Set description."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if value is invalid"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void setDescription(String value) throws IllegalValueException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (value \u003d\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (\"\".equals(value)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            description \u003d new Description(null);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            description \u003d new Description(value);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Set start time."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void setStartTime(LocalTime value) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        startTime \u003d value;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Set duration."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void setDuration(int value) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        duration \u003d value;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Location getLocation() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return location;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Description getDescription() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public int getDuration() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Replaces this slot\u0027s tags with the tags in {@code replacement}."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.tags.clear();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.tags.addAll(tags);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (other instanceof ReadOnlySlot // instanceof handles nulls"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.isSameStateAs((ReadOnlySlot) other));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return Objects.hash(name, location, description, startTime, duration, tags);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return getAsTextShowAll();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 173,
      "macchazuki": 1
    }
  },
  {
    "path": "src/planmysem/data/tag/Tag.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.data.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents a Tag in the Planner."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String VALIDATION_REGEX \u003d \".+\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Validates given value."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if the given tag name string is invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Tag(String name) throws IllegalValueException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String value \u003d name.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (!isValidTagName(value)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new IllegalValueException(MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true if a given value is a valid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static boolean isValidTagName(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof Tag // instanceof handles nulls"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u0026\u0026 this.value.equals(((Tag) other).value)); // state check"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 17,
      "-": 36
    }
  },
  {
    "path": "src/planmysem/logic/Logic.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javax.xml.bind.JAXBException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.Planner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.parser.Parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.storage.StorageFile;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents the main Logic of the Planner."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Logic {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private StorageFile storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Planner planner;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * The list of Slots shown to the user most recently."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e lastShownSlots;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public Logic() throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        setStorage(initializeStorage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        setPlanner(storage.load());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Logic(StorageFile storageFile, Planner planner) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        setStorage(storageFile);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        setPlanner(planner);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void setStorage(StorageFile storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void setPlanner(Planner planner) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        this.planner \u003d planner;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the StorageFile object based on the user specified path (if any) or the default storage path."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws StorageFile.InvalidStorageFilePathException if the target file path is incorrect."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private StorageFile initializeStorage() throws JAXBException, StorageFile.InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return new StorageFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStorageFilePath() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return storage.getPath();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * Unmodifiable view of the current last shown list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e getLastShownSlots() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return lastShownSlots;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    protected void setLastShownSlots(Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e slots) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        lastShownSlots \u003d slots;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the user command, executes it, and returns the result."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws Exception if there was any problem during command execution."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String userCommandText) throws Exception {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        Command command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult result \u003d execute(command);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        recordResult(result);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, updates storage, and returns the result."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param command user command"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return result of the command"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws Exception if there was any problem during command execution."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandResult execute(Command command) throws Exception {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        command.setData(planner, lastShownSlots);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult result \u003d command.execute();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        storage.save(planner);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Updates the {@link #lastShownSlots} if the result contains a list of Days."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    private void recordResult(CommandResult result) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Optional\u003cMap\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e\u003e slots \u003d result.getRelevantSlots();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (slots.isPresent()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            lastShownSlots \u003d slots.get();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 41,
      "-": 66
    }
  },
  {
    "path": "src/planmysem/parser/CommandHistory.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "package planmysem.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": " * Stores the history of commands executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "public class CommandHistory {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    private final ObservableList\u003cString\u003e userInputHistory \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    private final ObservableList\u003cString\u003e unmodifiableUserInputHistory \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            FXCollections.unmodifiableObservableList(userInputHistory);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public CommandHistory() {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public CommandHistory(CommandHistory commandHistory) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        userInputHistory.addAll(commandHistory.userInputHistory);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "     * Appends {@code userInput} to the list of user input entered."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public void add(String userInput) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        requireNonNull(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        userInputHistory.add(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "     * Returns an unmodifiable view of {@code userInputHistory}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public ObservableList\u003cString\u003e getHistory() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        return unmodifiableUserInputHistory;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        if (!(obj instanceof CommandHistory)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        CommandHistory other \u003d (CommandHistory) obj;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        return userInputHistory.equals(other.userInputHistory);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        return userInputHistory.hashCode();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marcus-pzj": 58
    }
  },
  {
    "path": "src/planmysem/parser/Parser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT_ADDITIONAL;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_DATE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_MULTIPLE_PARAMS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_TIME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.AddCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.ClearCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.Command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.DeleteCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.EditCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.ExitCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import planmysem.commands.ExportCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.FindCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.HelpCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.ListCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import planmysem.commands.ViewCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Utils;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Pattern KEYWORDS_ARGS_FORMAT \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            Pattern.compile(\"(?\u003ckeywords\u003e\\\\S+(?:\\\\s+\\\\S+)*)\"); // one or more keywords separated by whitespace"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_NAME \u003d \"n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_DATE_OR_DAY \u003d \"d\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_START_TIME \u003d \"st\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_END_TIME \u003d \"et\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_RECURRENCE \u003d \"r\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_LOCATION \u003d \"l\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_DESCRIPTION \u003d \"des\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_TAG \u003d \"t\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_NEW_NAME \u003d \"nn\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_NEW_DATE \u003d \"nd\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_NEW_START_TIME \u003d \"nst\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_NEW_END_TIME \u003d \"net\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_NEW_LOCATION \u003d \"nl\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_NEW_DESCRIPTION \u003d \"ndes\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final String PARAMETER_NEW_TAG \u003d \"nt\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case AddCommand.COMMAND_WORD_SHORT:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareAdd(arguments);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case EditCommand.COMMAND_WORD_SHORT:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return prepareEdit(arguments);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case DeleteCommand.COMMAND_WORD_ALT:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case DeleteCommand.COMMAND_WORD_SHORT:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareDelete(arguments);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        case FindCommand.COMMAND_WORD_SHORT:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            return prepareFind(arguments);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case ListCommand.COMMAND_WORD_SHORT:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return prepareList(arguments);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        case ViewCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        case ViewCommand.COMMAND_WORD_SHORT:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            return prepareView(arguments);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        case ExportCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            return new ExportCommand();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_WORD: // Fallthrough"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Parses arguments in the context of the add command."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private Command prepareAdd(String args) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        HashMap\u003cString, Set\u003cString\u003e\u003e arguments \u003d getParametersWithArguments(args);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // Name is mandatory"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String name \u003d getFirstInSet(arguments.get(PARAMETER_NAME));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if ((arguments \u003d\u003d null || arguments.isEmpty())"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || (name \u003d\u003d null || name.isEmpty())"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || arguments.get(PARAMETER_DATE_OR_DAY) \u003d\u003d null"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || arguments.get(PARAMETER_START_TIME) \u003d\u003d null"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                || arguments.get(PARAMETER_END_TIME) \u003d\u003d null) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // Either date or day must be present"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String dateOrDay \u003d getFirstInSet(arguments.get(PARAMETER_DATE_OR_DAY));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int day \u003d -1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalDate date \u003d Utils.parseDate(dateOrDay);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            day \u003d Utils.parseDay(dateOrDay);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (day \u003d\u003d -1 \u0026\u0026 date \u003d\u003d null) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT_ADDITIONAL,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    AddCommand.MESSAGE_USAGE, MESSAGE_INVALID_DATE));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // Start time is mandatory"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String stringStartTime \u003d getFirstInSet(arguments.get(PARAMETER_START_TIME));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalTime startTime \u003d Utils.parseTime(stringStartTime);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (startTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT_ADDITIONAL,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    AddCommand.MESSAGE_USAGE, MESSAGE_INVALID_TIME));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // determine if \"end time\" is a duration or time"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String stringEndTime \u003d getFirstInSet(arguments.get(PARAMETER_END_TIME));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int duration \u003d Utils.parseInteger(stringEndTime);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (duration \u003d\u003d -1) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            LocalTime endTime \u003d Utils.parseTime(stringEndTime);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (endTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT_ADDITIONAL,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        AddCommand.MESSAGE_USAGE, MESSAGE_INVALID_TIME));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            duration \u003d Utils.getDuration(startTime, endTime);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // Description is not mandatory and can be null"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String description \u003d getFirstInSet(arguments.get(PARAMETER_DESCRIPTION));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // Location is not mandatory and can be null"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String location \u003d getFirstInSet(arguments.get(PARAMETER_LOCATION));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // Tags is not mandatory"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cString\u003e tags \u003d arguments.get(PARAMETER_TAG);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (tags !\u003d null) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            for (String tag : tags) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                if (tag.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                            AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // Recurrences is not mandatory"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cString\u003e recurrences \u003d arguments.get(PARAMETER_RECURRENCE);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (day !\u003d -1) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new AddCommand("
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        day,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        name,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        location,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        description,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        startTime,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        duration,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        tags,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        recurrences"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                );"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new AddCommand("
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        date,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        name,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        location,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        description,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        startTime,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        duration,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        tags,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        recurrences"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                );"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            return new IncorrectCommand(ive.getMessage());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Parses arguments in the context of the edit command."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Command prepareEdit(String args) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        HashMap\u003cString, Set\u003cString\u003e\u003e arguments \u003d getParametersWithArguments(args);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String stringIndex \u003d getStartingArgument(args);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int index \u003d Utils.parseInteger(stringIndex);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cString\u003e tags \u003d arguments.get(PARAMETER_TAG);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if ((index \u003d\u003d -1 \u0026\u0026 tags \u003d\u003d null) || (index !\u003d -1 \u0026\u0026 tags !\u003d null)) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String nst \u003d getFirstInSet(arguments.get(PARAMETER_NEW_START_TIME));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalTime startTime \u003d null;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (nst !\u003d null) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            startTime \u003d Utils.parseTime(nst);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (startTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // determine if \"end time\" is a duration or time"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String net \u003d getFirstInSet(arguments.get(PARAMETER_NEW_END_TIME));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int duration \u003d -1;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (net !\u003d null) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            duration \u003d Utils.parseInteger(net);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (duration \u003d\u003d -1) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                LocalTime endTime \u003d Utils.parseTime(net);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                if (endTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    return new IncorrectCommand(String.format("
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                            MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    duration \u003d Utils.getDuration(startTime, endTime);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String name \u003d getFirstInSet(arguments.get(PARAMETER_NEW_NAME));"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String location \u003d getFirstInSet(arguments.get(PARAMETER_NEW_LOCATION));"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String description \u003d getFirstInSet(arguments.get(PARAMETER_NEW_DESCRIPTION));"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cString\u003e newTags \u003d arguments.get(PARAMETER_NEW_TAG);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new EditCommand(name, startTime, duration, location, description, tags, newTags);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new IncorrectCommand(ive.getMessage());"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            String nd \u003d getFirstInSet(arguments.get(PARAMETER_NEW_DATE));"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            LocalDate date \u003d Utils.parseDate(nd);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new EditCommand(index, name, date, startTime, duration, location, description, newTags);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new IncorrectCommand(ive.getMessage());"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Parses arguments in the context of the delete command."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Command prepareDelete(String args) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        HashMap\u003cString, Set\u003cString\u003e\u003e arguments \u003d getParametersWithArguments(args);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String stringIndex \u003d getStartingArgument(args);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int index \u003d Utils.parseInteger(stringIndex);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cString\u003e tags \u003d arguments.get(PARAMETER_TAG);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if ((index \u003d\u003d -1 \u0026\u0026 tags \u003d\u003d null) || (index !\u003d -1 \u0026\u0026 tags !\u003d null)) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new DeleteCommand(tags);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return new IncorrectCommand(ive.getMessage());"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "     * Parses arguments in the context of the find person command."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "     * @param args partial args string"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "     * @return the arguments sorted by its relevant options"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    private Command prepareFind(String args) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        HashMap\u003cString, Set\u003cString\u003e\u003e arguments \u003d getParametersWithArguments(args);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        String name \u003d getFirstInSet(arguments.get(PARAMETER_NAME));"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        String tag \u003d getFirstInSet(arguments.get(PARAMETER_TAG));"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        if (name \u003d\u003d null \u0026\u0026 tag \u003d\u003d null) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        } else if (name !\u003d null \u0026\u0026 tag !\u003d null) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_MULTIPLE_PARAMS, FindCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        return new FindCommand(name, tag);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Parses arguments in the context of the list command."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Command prepareList(String args) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        HashMap\u003cString, Set\u003cString\u003e\u003e arguments \u003d getParametersWithArguments(args);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String name \u003d getFirstInSet(arguments.get(PARAMETER_NAME));"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        String tag \u003d getFirstInSet(arguments.get(PARAMETER_TAG));"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        if (name \u003d\u003d null \u0026\u0026 tag \u003d\u003d null) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        } else if (name !\u003d null \u0026\u0026 tag !\u003d null) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_MULTIPLE_PARAMS, ListCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        return new ListCommand(name, tag);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Parses arguments in the context of the view command."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    private Command prepareView(String args) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        if (args \u003d\u003d null || args.trim().isEmpty()) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        String[] viewArgs \u003d args.split(\" \");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        if (\"all\".equals(viewArgs[1]) \u0026\u0026 viewArgs.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            return new ViewCommand(viewArgs[1]);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        } else if (\"month\".equals(viewArgs[1]) \u0026\u0026 viewArgs.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            return new ViewCommand(viewArgs[1]);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        } else if (\"month\".equals(viewArgs[1]) \u0026\u0026 viewArgs.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            //TODO: ensure month arguments"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            return new ViewCommand(viewArgs[1] + \" \" + viewArgs[2]);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        } else if (\"week\".equals(viewArgs[1]) \u0026\u0026 viewArgs.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            //TODO: ensure week arguments"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            return new ViewCommand(viewArgs[1] + \" \" + viewArgs[2]);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        } else if (\"day\".equals(viewArgs[1]) \u0026\u0026 viewArgs.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            //TODO: ensure day arguments"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            return new ViewCommand(viewArgs[1] + \" \" + viewArgs[2]);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Parses arguments in the context of the add slots command."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @return hashmap of parameter command with set of parameters."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private static HashMap\u003cString, Set\u003cString\u003e\u003e getParametersWithArguments(String args) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String parameters \u003d args.trim();"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String parameter;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String option;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int buf;"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        HashMap\u003cString, Set\u003cString\u003e\u003e result \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            buf \u003d parameters.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (buf \u003d\u003d -1) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            option \u003d parameters.substring(0, buf).trim();"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (option.contains(\" \")) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                parameters \u003d parameters.substring(option.lastIndexOf(\" \"));"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            parameters \u003d parameters.substring(buf + 1);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (parameters.indexOf(\u0027/\u0027) !\u003d -1) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                parameter \u003d parameters.substring(0, parameters.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                if (parameter.indexOf(\u0027 \u0027) !\u003d -1) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    parameter \u003d parameter.substring(0, parameter.lastIndexOf(\" \"));"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                parameter \u003d parameters;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (result.get(option) \u003d\u003d null) {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.put(option, new HashSet\u003c\u003e(Collections.singletonList(parameter.trim())));"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                Set\u003cString\u003e ss \u003d result.get(option);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                ss.add(parameter.trim());"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                result.replace(option, ss);"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (parameters.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            parameters \u003d parameters.substring(parameter.length());"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Get the first argument."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String getStartingArgument(String args) {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String result \u003d args;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // test if firstArgument is present"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (result.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else if (result.indexOf(\u0027/\u0027) !\u003d -1) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            result \u003d result.substring(0, result.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return result.substring(0, result.lastIndexOf(\" \")).trim();"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return result.trim();"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Get the first string in a set."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String getFirstInSet(Set\u003cString\u003e set) {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (set \u003d\u003d null || set.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return set.stream().findFirst().get();"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Signals that the user input could not be parsed."
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static class ParseException extends Exception {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        ParseException(String message) {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 308,
      "marcus-pzj": 29,
      "dingheng4448": 27,
      "-": 99,
      "macchazuki": 4
    }
  },
  {
    "path": "src/planmysem/storage/Encryptor.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "package planmysem.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.security.SecureRandom;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import javax.crypto.Cipher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import javax.crypto.SecretKey;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import javax.crypto.spec.IvParameterSpec;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import javax.crypto.spec.SecretKeySpec;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import javax.xml.bind.DatatypeConverter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "macchazuki"
        },
        "content": " * Encrypts and decrypts a string using AES"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "macchazuki"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "public class Encryptor {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    private static int ivSize \u003d 16;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * Encrypts string using the AES algorithm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * @param toEncrypt string to be encrypted"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * @return encrypted string"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    public static String encrypt(String toEncrypt) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            //Load key from KeyStore."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            SecretKey key \u003d KeyStorage.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            SecretKeySpec skeySpec \u003d new SecretKeySpec(key.getEncoded(), \"AES\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            // Generating IV."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            byte[] iv \u003d new byte[ivSize];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            SecureRandom random \u003d new SecureRandom();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            random.nextBytes(iv);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            IvParameterSpec ivParameterSpec \u003d new IvParameterSpec(iv);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            Cipher cipher \u003d Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            cipher.init(Cipher.ENCRYPT_MODE, skeySpec, ivParameterSpec);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            byte[] encrypted \u003d cipher.doFinal(toEncrypt.getBytes());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            // Combine IV and encrypted part."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            byte[] encryptedIvAndText \u003d new byte[ivSize + encrypted.length];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            System.arraycopy(iv, 0, encryptedIvAndText, 0, ivSize);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            System.arraycopy(encrypted, 0, encryptedIvAndText, ivSize, encrypted.length);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            return DatatypeConverter.printBase64Binary(encryptedIvAndText);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * Decrypts a string using the AES algorithm"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * @param toDecrypt string to be decrypted"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * @return decrypted string"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    public static String decrypt(String toDecrypt) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            //Load key from KeyStore."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            SecretKey key \u003d KeyStorage.load();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            SecretKeySpec skeySpec \u003d new SecretKeySpec(key.getEncoded(), \"AES\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            //Decode to bytes."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            byte[] decodedData \u003d DatatypeConverter.parseBase64Binary(toDecrypt);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            // Extract IV."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            byte[] iv \u003d new byte[ivSize];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            System.arraycopy(decodedData, 0, iv, 0, iv.length);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            IvParameterSpec ivParameterSpec \u003d new IvParameterSpec(iv);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            // Extract encrypted part."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            int encryptedSize \u003d decodedData.length - ivSize;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            byte[] encryptedBytes \u003d new byte[encryptedSize];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            System.arraycopy(decodedData, ivSize, encryptedBytes, 0, encryptedSize);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            Cipher cipher \u003d Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            cipher.init(Cipher.DECRYPT_MODE, skeySpec, ivParameterSpec);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            byte[] decryptedData \u003d cipher.doFinal(encryptedBytes);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            return new String(decryptedData);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "macchazuki": 92
    }
  },
  {
    "path": "src/planmysem/storage/KeyStorage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "package planmysem.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.security.KeyStore;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import javax.crypto.KeyGenerator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import javax.crypto.SecretKey;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "macchazuki"
        },
        "content": " * Manages key storage and load."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "macchazuki"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "public class KeyStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     * Loads the secret key from the key store."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    public static SecretKey load () throws Exception {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        char[] password \u003d \"password\".toCharArray();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        //Initialize keystore."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        KeyStore ks \u003d KeyStore.getInstance(\"JCEKS\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        SecretKey secretKey;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            ks.load(new FileInputStream(\"KeyStorage.jceks\"), password);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            secretKey \u003d (SecretKey) ks.getKey(\"secret-key\", password);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            //Generates key."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            KeyGenerator keyGen \u003d KeyGenerator.getInstance(\"AES\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            keyGen.init(256);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            secretKey \u003d keyGen.generateKey();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            //Save key."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            KeyStore.SecretKeyEntry secret \u003d new KeyStore.SecretKeyEntry(secretKey);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            KeyStore.ProtectionParameter passwordParam \u003d new KeyStore.PasswordProtection(password);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            ks.load(null, null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            ks.setEntry(\"secret-key\", secret, passwordParam);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(\"KeyStorage.jceks\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            ks.store(fos, password);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        return secretKey;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "macchazuki": 53
    }
  },
  {
    "path": "src/planmysem/storage/StorageFile.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.io.StringReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.xml.bind.JAXBContext;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.xml.bind.JAXBException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.xml.bind.Marshaller;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.xml.bind.Unmarshaller;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.Planner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.storage.jaxb.AdaptedPlanner;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * Represents the file used to store Planner data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageFile {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Default file path used if the user doesn\u0027t provide the file name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"PlanMySem.txt\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /* Note: Note the use of nested classes below."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * More info https://docs.oracle.com/javase/tutorial/java/javaOO/nested.html"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public final Path path;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private final JAXBContext jaxbContext;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    private final boolean isEncrypted \u003d false; //set to true to encrypt data"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidStorageFilePathException if the default path is invalid"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public StorageFile() throws JAXBException, InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this(DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidStorageFilePathException if the given file path is invalid"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public StorageFile(String filePath) throws JAXBException, InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            jaxbContext \u003d JAXBContext.newInstance(AdaptedPlanner.class);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } catch (JAXBException ex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new JAXBException(ex);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isValidPath(path)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the given path is acceptable as a storage file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * The file path is considered acceptable if it ends with \u0027.txt\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isValidPath(Path filePath) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath.toString().endsWith(\".txt\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves all data to this storage file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws StorageOperationException if there were errors converting and/or storing data to file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void save(Planner planner) throws StorageOperationException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Note: Note the \u0027try with resource\u0027 statement below."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "         * More info: https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        try (final Writer fileWriter \u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                     new BufferedWriter(new FileWriter(path.toFile()))) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            final AdaptedPlanner toSave \u003d new AdaptedPlanner(planner);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            final Marshaller marshaller \u003d jaxbContext.createMarshaller();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            if (isEncrypted) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                marshaller.marshal(toSave, sw);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                fileWriter.write(Encryptor.encrypt(sw.toString()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                marshaller.marshal(toSave, fileWriter);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new StorageOperationException(\"Error writing to file: \" + path + \" error: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (JAXBException jaxbe) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new StorageOperationException(\"Error converting Planner into storage format\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads data from this storage file."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws StorageOperationException if there were errors reading and/or converting data from file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Planner load() throws StorageOperationException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        try (final BufferedReader fileReader \u003d"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                     new BufferedReader(new FileReader(path.toFile()))) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            final Unmarshaller unmarshaller \u003d jaxbContext.createUnmarshaller();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            final AdaptedPlanner loaded;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            //decrypts"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            if (isEncrypted) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "                StringReader decryptedData \u003d new StringReader(Encryptor.decrypt(fileReader.readLine()));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                loaded \u003d (AdaptedPlanner) unmarshaller.unmarshal(decryptedData);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                loaded \u003d (AdaptedPlanner) unmarshaller.unmarshal(fileReader);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            // manual check for missing elements"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            if (loaded.isAnyRequiredFieldMissing()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new StorageOperationException(\"File data missing some elements\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            return loaded.toModelType();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            /* Note: Here, we are using an exception to create the file if it is missing or empty. However, we should"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "             * minimize using exceptions to facilitate normal paths of execution. If we consider the missing file as a"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "             * \u0027normal\u0027 situation (i.e. not truly exceptional) we should not use an exception to handle it."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "             */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "            // create empty file if not found or is empty"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        } catch (FileNotFoundException | NullPointerException ex) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            final Planner empty \u003d new Planner();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            save(empty);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            return empty;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            // other errors"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new StorageOperationException(\"Error writing to file: \" + path);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (JAXBException jaxbe) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new StorageOperationException(\"Error parsing file data format\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new StorageOperationException(\"File contains illegal data values; data type constraints not met\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getPath() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        return path.toString();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Signals that the given file path does not fulfill the storage filepath constraints."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static class InvalidStorageFilePathException extends IllegalValueException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        public InvalidStorageFilePathException(String message) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Signals that some error has occured while trying to convert and read/write data between the application"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * and the storage file."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public static class StorageOperationException extends Exception {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        public StorageOperationException(String message) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 52,
      "-": 96,
      "macchazuki": 21
    }
  },
  {
    "path": "src/planmysem/storage/jaxb/AdaptedDay.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.storage.jaxb;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javax.xml.bind.annotation.XmlElement;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * JAXB-friendly adapted Day data holder class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class AdaptedDay {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private DayOfWeek dayOfWeek;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String weekType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private ArrayList\u003cAdaptedSlot\u003e slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * No-arg constructor for JAXB use."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AdaptedDay() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Converts a given Day into this class for JAXB use."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @param source future changes to this will not affect the created AdaptedDay"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AdaptedDay(ReadOnlyDay source) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        dayOfWeek \u003d source.getDayOfWeek();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        weekType \u003d source.getType();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Slot slot : source.getSlots()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            slots.add(new AdaptedSlot(slot));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true if any required field is missing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * JAXB does not enforce (required \u003d true) without a given XML schema."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Since we do most of our validation using the data class constructors, the only extra logic we need"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * is to ensure that every xml element in the document is present. JAXB sets missing elements as null,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * so we check for that."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean isAnyRequiredFieldMissing() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (AdaptedSlot slot : slots) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (slot.isAnyRequiredFieldMissing()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // second call only happens if phone/email/address are all not null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // return Utils.isAnyNull(dayOfWeek, slots);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Converts this jaxb-friendly adapted Day object into the Day object."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted Day"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Day toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final ArrayList\u003cSlot\u003e slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (AdaptedSlot slot : this.slots) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            slots.add(slot.toModelType());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new Day(this.dayOfWeek, this.weekType, slots);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 77
    }
  },
  {
    "path": "src/planmysem/storage/jaxb/AdaptedPlanner.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.storage.jaxb;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javax.xml.bind.annotation.XmlElement;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javax.xml.bind.annotation.XmlRootElement;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.Planner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * JAXB-friendly adapted Planner data holder class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "@XmlRootElement(name \u003d \"Planner\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class AdaptedPlanner {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private AdaptedSemester semester \u003d new AdaptedSemester();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * No-arg constructor for JAXB use."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AdaptedPlanner() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Converts a given Planner into this class for JAXB use."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @param source future changes to this will not affect the created AdaptedPlanner"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AdaptedPlanner(Planner source) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        semester \u003d new AdaptedSemester(source.getSemester());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true if any required field is missing."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * JAXB does not enforce (required \u003d true) without a given XML schema."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Since we do most of our validation using the data class constructors, the only extra logic we need"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * is to ensure that every xml element in the document is present. JAXB sets missing elements as null,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * so we check for that."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean isAnyRequiredFieldMissing() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return semester.isAnyRequiredFieldMissing();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Converts this jaxb-friendly {@code AdaptedPlanner} object into the corresponding(@code Planner} object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted person"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Planner toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new Planner(semester.toModelType());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 53
    }
  },
  {
    "path": "src/planmysem/storage/jaxb/AdaptedSemester.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.storage.jaxb;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javax.xml.bind.annotation.XmlElement;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlySemester;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Semester;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * JAXB-friendly adapted person data holder class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class AdaptedSemester {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String academicYear;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String startDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String endDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private int noOfWeeks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private HashMap\u003cString, AdaptedDay\u003e days \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Set\u003cString\u003e recessDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Set\u003cString\u003e readingDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Set\u003cString\u003e normalDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Set\u003cString\u003e examDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * No-arg constructor for JAXB use."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AdaptedSemester() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Converts a given Person into this class for JAXB use."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @param source future changes to this will not affect the created AdaptedPerson"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AdaptedSemester(ReadOnlySemester source) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        name \u003d source.getName();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        academicYear \u003d source.getAcademicYear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        startDate \u003d source.getStartDate().toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        endDate \u003d source.getEndDate().toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        noOfWeeks \u003d source.getNoOfWeeks();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Day\u003e day : source.getDays().entrySet()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            days.put(day.getKey().toString(), new AdaptedDay(day.getValue()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (LocalDate date : source.getRecessDays()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            recessDays.add(date.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (LocalDate date : source.getReadingDays()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            readingDays.add(date.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (LocalDate date : source.getNormalDays()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            normalDays.add(date.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (LocalDate date : source.getExamDays()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            examDays.add(date.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true if any required field is missing."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * JAXB does not enforce (required \u003d true) without a given XML schema."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Since we do most of our validation using the data class constructors, the only extra logic we need"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * is to ensure that every xml element in the document is present. JAXB sets missing elements as null,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * so we check for that."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean isAnyRequiredFieldMissing() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cString, AdaptedDay\u003e day : days.entrySet()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (day.getValue().isAnyRequiredFieldMissing()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // TODO: removed for testing"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // second call only happens if phone/email/address are all not null"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // return Utils.isAnyNull(name, academicYear, days, startDate, endDate);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Converts this jaxb-friendly adapted person object into the Person object."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted person"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Semester toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String name \u003d this.name;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String academicYear \u003d this.academicYear;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String startDate \u003d this.startDate;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String endDate \u003d this.endDate;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (startDate \u003d\u003d null || endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            throw new IllegalValueException(\"\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final int noOfWeeks \u003d this.noOfWeeks;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final HashMap\u003cLocalDate, Day\u003e days \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Map.Entry\u003cString, AdaptedDay\u003e day : this.days.entrySet()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            days.put(LocalDate.parse(day.getKey()), day.getValue().toModelType());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Set\u003cLocalDate\u003e recessDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (String date : this.recessDays) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            recessDays.add(LocalDate.parse(date));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Set\u003cLocalDate\u003e readingDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (String date : this.readingDays) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            readingDays.add(LocalDate.parse(date));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Set\u003cLocalDate\u003e normalDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (String date : this.normalDays) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            normalDays.add(LocalDate.parse(date));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Set\u003cLocalDate\u003e examDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (String date : this.examDays) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            examDays.add(LocalDate.parse(date));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new Semester(name, academicYear, days,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                LocalDate.parse(startDate), LocalDate.parse(endDate), noOfWeeks,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                recessDays, readingDays, normalDays, examDays);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 147
    }
  },
  {
    "path": "src/planmysem/storage/jaxb/AdaptedSlot.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.storage.jaxb;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javax.xml.bind.annotation.XmlElement;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Utils;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Location;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " * JAXB-friendly adapted person data holder class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "public class AdaptedSlot {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String location;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private int duration;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String startTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @XmlElement(required \u003d true)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private List\u003cAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * No-arg constructor for JAXB use."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AdaptedSlot() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Converts a given Person into this class for JAXB use."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @param source future changes to this will not affect the created AdaptedPerson"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AdaptedSlot(ReadOnlySlot source) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        name \u003d source.getName().toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        location \u003d source.getLocation().toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        description \u003d source.getDescription().toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        duration \u003d source.getDuration();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        startTime \u003d source.getStartTime().toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (Tag tag : source.getTags()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            tags.add(new AdaptedTag(tag));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true if any required field is missing."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public boolean isAnyRequiredFieldMissing() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (AdaptedTag tag : tags) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (tag.isAnyRequiredFieldMissing()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // second call only happens if name, location, description, time are all not null"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return Utils.isAnyNull(name, duration, startTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Converts this jaxb-friendly adapted person object into the Person object."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted person"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public Slot toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Name name \u003d new Name(this.name);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Location location \u003d new Location(this.location);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Description description \u003d new Description(this.description);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final LocalTime startTime \u003d LocalTime.parse(this.startTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final int duration \u003d this.duration;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (AdaptedTag tag : this.tags) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            tags.add(tag.toModelType());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new Slot(name, location, description, startTime, duration, tags);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 93
    }
  },
  {
    "path": "src/planmysem/storage/jaxb/AdaptedTag.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.storage.jaxb;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.xml.bind.annotation.XmlValue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Utils;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * JAXB-friendly adapted tag data holder class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class AdaptedTag {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @XmlValue"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private String value;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * No-arg constructor for JAXB use."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public AdaptedTag() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given Tag into this class for JAXB use."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param source future changes to this will not affect the created AdaptedTag"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public AdaptedTag(Tag source) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        value \u003d source.value;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if any required field is missing."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * JAXB does not enforce (required \u003d true) without a given XML schema."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Since we do most of our validation using the data class constructors, the only extra logic we need"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * is to ensure that every xml element in the document is present. JAXB sets missing elements as null,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * so we check for that."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isAnyRequiredFieldMissing() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return Utils.isAnyNull(value);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts this jaxb-friendly adapted tag object into the Tag object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted person"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public Tag toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new Tag(value);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 12,
      "-": 39
    }
  },
  {
    "path": "src/planmysem/ui/DarkTheme.css",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ".text-field {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Consolas\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-weight: bold;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: yellow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-control-inner-background: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ".text-area {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: black;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-control-inner-background: black;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    -fx-font-family: \"Monospace\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5 5 5 5;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingheng4448": 1,
      "-": 15
    }
  },
  {
    "path": "src/planmysem/ui/Formatter.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Messages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Used for formatting text for display. e.g. for adding text decorations."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * A decorative prefix added to the beginning of lines printed by Planner"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LINE_PREFIX \u003d \" \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * A platform independent line separator."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Format of indexed list item"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_INDEXED_LIST_ITEM \u003d \"\\t%1$d. %2$s\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Offset required to convert between 1-indexing and 0-indexing."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int DISPLAYED_INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Formats a list of strings as an indexed list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String asIndexedList(List\u003cString\u003e listItems) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        final StringBuilder formatted \u003d new StringBuilder();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        int displayIndex \u003d 0 + DISPLAYED_INDEX_OFFSET;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String listItem : listItems) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            formatted.append(getIndexedListItem(displayIndex, listItem)).append(\"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            displayIndex++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return formatted.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Formats a string as an indexed list item."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param visibleIndex index for this listing"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String getIndexedListItem(int visibleIndex, String listItem) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return String.format(MESSAGE_INDEXED_LIST_ITEM, visibleIndex, listItem);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Formats the given strings for displaying to the user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String format(String... messages) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (String m : messages) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            sb.append(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX) + LS);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Formats the given list of slots for displaying to the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public String formatSlots(Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e slots) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        final List\u003cString\u003e formattedSlots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        for (Map.Entry\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e entry : slots.entrySet()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            formattedSlots.add(pair.getKey().toString() + \": \" + pair.getValue().toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        return format(asIndexedList(formattedSlots));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return Messages.craftListMessage(slots);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 47,
      "-": 39
    }
  },
  {
    "path": "src/planmysem/ui/Gui.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.Main;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.logic.Logic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * The GUI of the App"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Gui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Offset required to convert between 1-indexing and 0-indexing."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INITIAL_WINDOW_WIDTH \u003d 800;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INITIAL_WINDOW_HEIGHT \u003d 600;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logic logic;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private String version;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public Gui(Logic logic, String version) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.version \u003d version;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * TODO: Add Javadoc comment."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage, Stoppable mainApp) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        mainWindow \u003d createMainWindowP(stage, mainApp);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        mainWindow.displayWelcomeMessage(version, logic.getStorageFilePath());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * TODO: Add Javadoc comment."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private MainWindow createMainWindowP(Stage stage, Stoppable mainApp) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        FXMLLoader loader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        loader.setLocation(Main.class.getResource(\"ui/mainwindow.fxml\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setTitle(version);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setScene(new Scene(loader.load(), INITIAL_WINDOW_WIDTH, INITIAL_WINDOW_HEIGHT));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        mainWindow \u003d loader.getController();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        mainWindow.setLogic(logic);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        mainWindow.setMainApp(mainApp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return mainWindow;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 17,
      "-": 39
    }
  },
  {
    "path": "src/planmysem/ui/MainWindow.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.logic.Logic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Main Window of the GUI."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stoppable mainApp;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private TextArea outputConsole;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private TextField commandInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setLogic(Logic logic) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setMainApp(Stoppable mainApp) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.mainApp \u003d mainApp;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * TODO: Add Javadoc comment."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private void onCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            String userCommandText \u003d commandInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult result \u003d logic.execute(userCommandText);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isExitCommand(result)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                exitApp();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            displayResult(result);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            clearCommandInput();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            display(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            // throw new RuntimeException(e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private void exitApp() throws Exception {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        mainApp.stop();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Returns true of the result given is the result of an exit command"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isExitCommand(CommandResult result) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return result.feedbackToUser.equals(ExitCommand.MESSAGE_EXIT_ACKNOWEDGEMENT);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Clears the command input box"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private void clearCommandInput() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        commandInput.setText(\"\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Clears the output display area"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clearOutputConsole() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        outputConsole.clear();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Displays the result of a command execution to the user."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public void displayResult(CommandResult result) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        clearOutputConsole();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final Optional\u003cMap\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e\u003e resultDays \u003d result.getRelevantSlots();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if (resultDays.isPresent()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            display(resultDays.get());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        display(result.feedbackToUser);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * TODO: Add Javadoc comment."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public void displayWelcomeMessage(String version, String storageFilePath) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String storageFileInfo \u003d String.format(Messages.MESSAGE_USING_STORAGE_FILE, storageFilePath);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display(Messages.MESSAGE_WELCOME, version, Messages.MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE, storageFileInfo);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Displays the list of slots in the output display area, formatted as an indexed list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * Private contact details are hidden."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private void display(Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e slots) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // TODO: rename function call when AddressBook is fully removed from project"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        display(new Formatter().formatSlots(slots));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays the given messages on the output display area, after formatting appropriately."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    private void display(String... messages) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        outputConsole.setText(outputConsole.getText() + new Formatter().format(messages));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 44,
      "-": 74
    }
  },
  {
    "path": "src/planmysem/ui/Stoppable.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * An App that can be stopped by calling the stop() method."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Stoppable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    void stop() throws Exception;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 2,
      "-": 6
    }
  },
  {
    "path": "src/planmysem/ui/mainwindow.fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets\u003d\"@/planmysem/ui/DarkTheme.css\" alignment\u003d\"center\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/8\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "      fx:controller\u003d\"planmysem.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cTextField fx:id\u003d\"commandInput\" onAction\u003d\"#onCommand\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/TextField\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cTextArea fx:id\u003d\"outputConsole\" editable\u003d\"false\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/TextArea\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 3,
      "-": 17
    }
  },
  {
    "path": "test/data/StorageFileTest/InvalidData.txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" standalone\u003d\"yes\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003cPlanner\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003csemester\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinvalid\u003edata\u003c/invalid\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003c/semester\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003c/Planner\u003e"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 4,
      "-": 2
    }
  },
  {
    "path": "test/data/StorageFileTest/ValidData.txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" standalone\u003d\"yes\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003cPlanner\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003csemester\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cname\u003eSem 2\u003c/name\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cacademicYear\u003eAY2018/2019\u003c/academicYear\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cstartDate\u003e2019-01-14\u003c/startDate\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cendDate\u003e2019-05-12\u003c/endDate\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnoOfWeeks\u003e17\u003c/noOfWeeks\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cdays\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-09\u003c/key\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 4\u003c/weekType\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-08\u003c/key\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 4\u003c/weekType\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-07\u003c/key\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 4\u003c/weekType\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-06\u003c/key\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 4\u003c/weekType\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-05\u003c/key\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 4\u003c/weekType\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-04\u003c/key\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 4\u003c/weekType\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-03\u003c/key\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 3\u003c/weekType\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-02\u003c/key\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 3\u003c/weekType\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-01\u003c/key\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 3\u003c/weekType\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-31\u003c/key\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 3\u003c/weekType\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-30\u003c/key\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 3\u003c/weekType\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-30\u003c/key\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-20\u003c/key\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 13\u003c/weekType\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-21\u003c/key\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 13\u003c/weekType\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-22\u003c/key\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eReading Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-23\u003c/key\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eReading Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-24\u003c/key\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eReading Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-25\u003c/key\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eReading Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-26\u003c/key\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eReading Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-27\u003c/key\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eReading Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-28\u003c/key\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eReading Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-29\u003c/key\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-19\u003c/key\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 6\u003c/weekType\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-18\u003c/key\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 6\u003c/weekType\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-17\u003c/key\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 5\u003c/weekType\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-16\u003c/key\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 5\u003c/weekType\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-15\u003c/key\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 5\u003c/weekType\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-14\u003c/key\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 5\u003c/weekType\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-13\u003c/key\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 5\u003c/weekType\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-12\u003c/key\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 5\u003c/weekType\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-11\u003c/key\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 5\u003c/weekType\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-10\u003c/key\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 4\u003c/weekType\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-01\u003c/key\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-02\u003c/key\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-03\u003c/key\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-04\u003c/key\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-05\u003c/key\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-06\u003c/key\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-07\u003c/key\u003e"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-08\u003c/key\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-09\u003c/key\u003e"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-28\u003c/key\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eRecess Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-27\u003c/key\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eRecess Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-26\u003c/key\u003e"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eRecess Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-25\u003c/key\u003e"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eRecess Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-24\u003c/key\u003e"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 6\u003c/weekType\u003e"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-23\u003c/key\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 6\u003c/weekType\u003e"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-22\u003c/key\u003e"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 6\u003c/weekType\u003e"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-21\u003c/key\u003e"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 6\u003c/weekType\u003e"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-02-20\u003c/key\u003e"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 6\u003c/weekType\u003e"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-10\u003c/key\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-05-11\u003c/key\u003e"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eExamination Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-01\u003c/key\u003e"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eRecess Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-02\u003c/key\u003e"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eRecess Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-03\u003c/key\u003e"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eRecess Week\u003c/weekType\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-04\u003c/key\u003e"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 7\u003c/weekType\u003e"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-05\u003c/key\u003e"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 7\u003c/weekType\u003e"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-06\u003c/key\u003e"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 7\u003c/weekType\u003e"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-07\u003c/key\u003e"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 7\u003c/weekType\u003e"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-08\u003c/key\u003e"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 7\u003c/weekType\u003e"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-09\u003c/key\u003e"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 7\u003c/weekType\u003e"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-10\u003c/key\u003e"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 7\u003c/weekType\u003e"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-11\u003c/key\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 8\u003c/weekType\u003e"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-12\u003c/key\u003e"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 8\u003c/weekType\u003e"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-13\u003c/key\u003e"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 8\u003c/weekType\u003e"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-14\u003c/key\u003e"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 8\u003c/weekType\u003e"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-15\u003c/key\u003e"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 8\u003c/weekType\u003e"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-16\u003c/key\u003e"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 8\u003c/weekType\u003e"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-17\u003c/key\u003e"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 8\u003c/weekType\u003e"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-18\u003c/key\u003e"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 9\u003c/weekType\u003e"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-19\u003c/key\u003e"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 9\u003c/weekType\u003e"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-20\u003c/key\u003e"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 9\u003c/weekType\u003e"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-21\u003c/key\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 9\u003c/weekType\u003e"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-22\u003c/key\u003e"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 9\u003c/weekType\u003e"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-23\u003c/key\u003e"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 9\u003c/weekType\u003e"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-24\u003c/key\u003e"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 9\u003c/weekType\u003e"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-25\u003c/key\u003e"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 10\u003c/weekType\u003e"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-26\u003c/key\u003e"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 10\u003c/weekType\u003e"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-27\u003c/key\u003e"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 10\u003c/weekType\u003e"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-28\u003c/key\u003e"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 10\u003c/weekType\u003e"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-29\u003c/key\u003e"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 10\u003c/weekType\u003e"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-19\u003c/key\u003e"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 1\u003c/weekType\u003e"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-18\u003c/key\u003e"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 1\u003c/weekType\u003e"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-17\u003c/key\u003e"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 1\u003c/weekType\u003e"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-16\u003c/key\u003e"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 1\u003c/weekType\u003e"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-15\u003c/key\u003e"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 1\u003c/weekType\u003e"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-14\u003c/key\u003e"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 1\u003c/weekType\u003e"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-30\u003c/key\u003e"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 10\u003c/weekType\u003e"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-03-31\u003c/key\u003e"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 10\u003c/weekType\u003e"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-01\u003c/key\u003e"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 11\u003c/weekType\u003e"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-02\u003c/key\u003e"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 11\u003c/weekType\u003e"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-03\u003c/key\u003e"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 11\u003c/weekType\u003e"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-04\u003c/key\u003e"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 11\u003c/weekType\u003e"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-05\u003c/key\u003e"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 11\u003c/weekType\u003e"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-06\u003c/key\u003e"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 11\u003c/weekType\u003e"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-07\u003c/key\u003e"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 11\u003c/weekType\u003e"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-08\u003c/key\u003e"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 12\u003c/weekType\u003e"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-09\u003c/key\u003e"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 12\u003c/weekType\u003e"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-29\u003c/key\u003e"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 3\u003c/weekType\u003e"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-28\u003c/key\u003e"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 3\u003c/weekType\u003e"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-27\u003c/key\u003e"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 2\u003c/weekType\u003e"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-26\u003c/key\u003e"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 2\u003c/weekType\u003e"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-25\u003c/key\u003e"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 2\u003c/weekType\u003e"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-24\u003c/key\u003e"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 2\u003c/weekType\u003e"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-23\u003c/key\u003e"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 2\u003c/weekType\u003e"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-22\u003c/key\u003e"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 2\u003c/weekType\u003e"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-21\u003c/key\u003e"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 2\u003c/weekType\u003e"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-01-20\u003c/key\u003e"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 1\u003c/weekType\u003e"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-10\u003c/key\u003e"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 12\u003c/weekType\u003e"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-11\u003c/key\u003e"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 12\u003c/weekType\u003e"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-12\u003c/key\u003e"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 12\u003c/weekType\u003e"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-13\u003c/key\u003e"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSATURDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 12\u003c/weekType\u003e"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-14\u003c/key\u003e"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eSUNDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 12\u003c/weekType\u003e"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-15\u003c/key\u003e"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eMONDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 13\u003c/weekType\u003e"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-16\u003c/key\u003e"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTUESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 13\u003c/weekType\u003e"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-17\u003c/key\u003e"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eWEDNESDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 13\u003c/weekType\u003e"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-18\u003c/key\u003e"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eTHURSDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 13\u003c/weekType\u003e"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003centry\u003e"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003ckey\u003e2019-04-19\u003c/key\u003e"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003cvalue\u003e"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cdayOfWeek\u003eFRIDAY\u003c/dayOfWeek\u003e"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    \u003cweekType\u003eWeek 13\u003c/weekType\u003e"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \u003c/value\u003e"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            \u003c/entry\u003e"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003c/days\u003e"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003crecessDays\u003e2019-03-01\u003c/recessDays\u003e"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003crecessDays\u003e2019-02-28\u003c/recessDays\u003e"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003crecessDays\u003e2019-03-02\u003c/recessDays\u003e"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003crecessDays\u003e2019-02-27\u003c/recessDays\u003e"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003crecessDays\u003e2019-03-03\u003c/recessDays\u003e"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003crecessDays\u003e2019-02-26\u003c/recessDays\u003e"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003crecessDays\u003e2019-02-25\u003c/recessDays\u003e"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003creadingDays\u003e2019-04-22\u003c/readingDays\u003e"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003creadingDays\u003e2019-04-23\u003c/readingDays\u003e"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003creadingDays\u003e2019-04-24\u003c/readingDays\u003e"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003creadingDays\u003e2019-04-25\u003c/readingDays\u003e"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003creadingDays\u003e2019-04-26\u003c/readingDays\u003e"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003creadingDays\u003e2019-04-27\u003c/readingDays\u003e"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003creadingDays\u003e2019-04-28\u003c/readingDays\u003e"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-09\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-08\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-07\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-06\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-05\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-04\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-03\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-02\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-01\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-31\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-30\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-20\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-21\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-10\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-11\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-12\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-13\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-14\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-15\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-16\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-17\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-18\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-19\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-19\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-18\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-17\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-16\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-15\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-14\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-13\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-12\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-11\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-10\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-20\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-21\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-22\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-23\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-24\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-25\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-26\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-27\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-28\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-29\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-19\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-18\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-17\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-16\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-15\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-14\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-24\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-23\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-22\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-21\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-02-20\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-30\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-31\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-01\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-02\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-03\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-04\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-05\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-06\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-07\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-08\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-09\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-29\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-28\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-27\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-26\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-25\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-24\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-23\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-22\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-21\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-01-20\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-10\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-11\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-12\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-13\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-14\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-15\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-16\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-04\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-17\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-05\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-18\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-06\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-04-19\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-07\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-08\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cnormalDays\u003e2019-03-09\u003c/normalDays\u003e"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-04-30\u003c/examDays\u003e"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-10\u003c/examDays\u003e"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-11\u003c/examDays\u003e"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-01\u003c/examDays\u003e"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-02\u003c/examDays\u003e"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-03\u003c/examDays\u003e"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-04\u003c/examDays\u003e"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-05\u003c/examDays\u003e"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-06\u003c/examDays\u003e"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-07\u003c/examDays\u003e"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-04-29\u003c/examDays\u003e"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-08\u003c/examDays\u003e"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        \u003cexamDays\u003e2019-05-09\u003c/examDays\u003e"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    \u003c/semester\u003e"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "\u003c/Planner\u003e"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 955,
      "-": 1
    }
  },
  {
    "path": "test/java/planmysem/common/UtilsTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static junit.framework.TestCase.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Utils.getDuration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Utils.getEndTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Utils.getNearestDayOfWeek;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class UtilsTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isAnyNull() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // empty list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(Utils.isAnyNull());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        // Any non-empty list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(Utils.isAnyNull(new Object(), new Object()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(Utils.isAnyNull(\"test\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(Utils.isAnyNull(\"\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        // non empty list with just one null at the beginning"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(Utils.isAnyNull((Object) null));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(Utils.isAnyNull(null, \"\", new Object()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(Utils.isAnyNull(null, new Object(), new Object()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        // non empty list with nulls in the middle"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(Utils.isAnyNull(new Object(), null, null, \"test\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(Utils.isAnyNull(\"\", null, new Object()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // non empty list with one null as the last element"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(Utils.isAnyNull(\"\", new Object(), null));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(Utils.isAnyNull(new Object(), new Object(), null));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        // confirms nulls inside the list are not considered"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cObject\u003e nullList \u003d Arrays.asList((Object) null);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(Utils.isAnyNull(nullList));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void elementsAreUnique() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        // empty list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertAreUnique();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        // only one object"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        assertAreUnique((Object) null);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertAreUnique(1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        assertAreUnique(\"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        assertAreUnique(\"abc\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // all objects unique"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        assertAreUnique(\"abc\", \"ab\", \"a\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertAreUnique(1, 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // some identical objects"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotUnique(\"abc\", \"abc\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotUnique(\"abc\", \"\", \"abc\", \"ABC\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotUnique(\"\", \"abc\", \"a\", \"abc\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotUnique(1, Integer.valueOf(1));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotUnique(null, 1, Integer.valueOf(1));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotUnique(null, null);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotUnique(null, \"a\", \"b\", null);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_day_successful() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Monday\"), 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"monday \"), 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Mon\"), 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"mon\"), 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"1\"), 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Tuesday\"), 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"tuesday \"), 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Tues\"), 2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"tues\"), 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"2\"), 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Wednesday\"), 3);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Wed\"), 3);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"wed\"), 3);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"3\"), 3);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Thursday\"), 4);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\" thursday\"), 4);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Thurs\"), 4);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"thurs\"), 4);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"4\"), 4);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Friday\"), 5);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\" friday\"), 5);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Fri\"), 5);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"fri\"), 5);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"5\"), 5);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Saturday\"), 6);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\" saturday\"), 6);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Sat\"), 6);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"sat\"), 6);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"6\"), 6);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Sunday\"), 7);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\" sunday\"), 7);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Sun\"), 7);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"sun\"), 7);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"7\"), 7);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_day_unsuccessful() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Mond\"), -1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Mo\"), -1);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"Fr\"), -1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"8\"), -1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseDay(\"0\"), -1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_time_successful() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"08:00\"), LocalTime.of(8, 0));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"8:00 PM\"), LocalTime.of(20, 0));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"14:00\"), LocalTime.of(14, 0));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"00:00\"), LocalTime.of(0, 0));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"8:00\"), LocalTime.of(8, 0));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"8:00 AM\"), LocalTime.of(8, 0));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_time_unsuccessful() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"8-00\"), null);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"8:00 am\"), null);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"8:00 pm\"), null);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"14:00 am\"), null);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"16:00 pm\"), null);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseTime(\"24:00\"), null);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_integer_successful() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseInteger(\"800\"), 800);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseInteger(\"0\"), 0);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseInteger(\"1\"), 1);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseInteger(\"60\"), 60);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseInteger(\"90\"), 90);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseInteger(\"120\"), 120);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_integer_unsuccessful() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseInteger(\"12 0\"), -1);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseInteger(\"0.1\"), -1);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseInteger(\"test\"), -1);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(Utils.parseInteger(\"OO\"), -1);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_tags_successful() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        List\u003cString\u003e listOfTag \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        listOfTag.add(\"0\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        listOfTag.add(\"tag1\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        listOfTag.add(\"tag 2\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        listOfTag.add(\"tag 3 super long tag\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cString\u003e tagStrings \u003d new HashSet\u003c\u003e(listOfTag);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cTag\u003e expectedTags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            expectedTags \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(\"0\"),"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    new Tag(\"tag1\"), new Tag(\"tag 2\"),"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    new Tag(\"tag 3 super long tag\")));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            tags \u003d Utils.parseTags(tagStrings);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(tags, expectedTags);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            tags \u003d Utils.parseTags(null);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(tags, null);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_tags_unsuccessful() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            tags \u003d Utils.parseTags(null);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(tags, null);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_get_duration_successful() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalTime startTime \u003d LocalTime.now();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalTime endTime \u003d startTime.plusMinutes(60);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(getDuration(startTime, endTime), 60);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_get_end_time_successful() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalTime startTime \u003d LocalTime.now();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalTime endTime \u003d startTime.plusMinutes(60);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(getEndTime(startTime, 60), endTime);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void parse_get_nearest_day_of_week_successful() {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalDate date \u003d LocalDate.of(2019, 1, 1);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalDate nearestMonday \u003d LocalDate.of(2019, 1, 7);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(getNearestDayOfWeek(date, 1), nearestMonday);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertAreUnique(Object... objects) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(Utils.elementsAreUnique(Arrays.asList(objects)));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNotUnique(Object... objects) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(Utils.elementsAreUnique(Arrays.asList(objects)));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 171,
      "-": 70
    }
  },
  {
    "path": "test/java/planmysem/data/PlannerTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "package planmysem.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import static junit.framework.TestCase.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.time.temporal.WeekFields;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import planmysem.data.semester.Day;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import planmysem.data.semester.Semester;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "public class PlannerTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    public void execute_generateSemester() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        Semester generatedSemester;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        Semester expectedSemester;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Assert Semester One generation"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        generatedSemester \u003d Semester.generateSemester(LocalDate.of(2018, 8, 6));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate semOneDate \u003d LocalDate.of(2018, 8, 6);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        expectedSemester \u003d helper.generateSemesterFromDate(semOneDate, \"Sem 1\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        assertSameSemester(generatedSemester, expectedSemester);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        expectedSemester \u003d Semester.generateSemester(LocalDate.of(2018, 10, 6));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        assertSameSemester(generatedSemester, expectedSemester);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        // Assert Semester Two generation"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        generatedSemester \u003d Semester.generateSemester(LocalDate.of(2019, 1, 14));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        LocalDate semTwoDate \u003d LocalDate.of(2019, 1, 14);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        expectedSemester \u003d helper.generateSemesterFromDate(semTwoDate, \"Sem 2\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        assertSameSemester(generatedSemester, expectedSemester);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        expectedSemester \u003d Semester.generateSemester(LocalDate.of(2019, 3, 17));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        assertSameSemester(generatedSemester, expectedSemester);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * Asserts that the generated and expected Semester contents are equal."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    private void assertSameSemester(Semester generatedSemester, Semester expectedSemester) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        //Confirm the state of data is as expected"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        assertEquals(generatedSemester.hashCode(), expectedSemester.hashCode());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     * A utility class to generate test data."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public class TestDataHelper {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "         * Generates a Semester from the given date"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "         *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "         * @param startDate given date which the semester should start from"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "         * @param acadSem the semester of the academic year"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "         * @return a Semester object from a specified date"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "         */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        Semester generateSemesterFromDate(LocalDate startDate, String acadSem) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            String acadYear \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            LocalDate endDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            int givenYear \u003d startDate.getYear();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            int weekOfStartDate \u003d startDate.get(WeekFields.ISO.weekOfWeekBasedYear());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            int noOfWeeks \u003d 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            HashMap\u003cInteger, String\u003e weekNames \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            HashMap\u003cLocalDate, Day\u003e days \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            Set\u003cLocalDate\u003e recessDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            Set\u003cLocalDate\u003e readingDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            Set\u003cLocalDate\u003e normalDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            Set\u003cLocalDate\u003e examDays \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            if (\"Sem 1\".equals(acadSem)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                noOfWeeks \u003d 18;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                acadYear \u003d \"AY\" + givenYear + \"/\" + (givenYear + 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                endDate \u003d startDate.with(WeekFields.ISO.weekOfWeekBasedYear(), weekOfStartDate + 18 - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                endDate \u003d endDate.with(WeekFields.ISO.dayOfWeek(), 7);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                weekNames.put(weekOfStartDate, \"Orientation Week\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                int week \u003d 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                for (int i \u003d weekOfStartDate + 1; i \u003c weekOfStartDate + 7; i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    weekNames.put(i, \"Week \" + week);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    week++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                weekNames.put(weekOfStartDate + 7, \"Recess Week\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                week \u003d 7;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                for (int i \u003d weekOfStartDate + 8; i \u003c weekOfStartDate + 15; i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    weekNames.put(i, \"Week \" + week);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    week++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                weekNames.put(weekOfStartDate + 15, \"Reading Week\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                weekNames.put(weekOfStartDate + 16, \"Examination Week\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                weekNames.put(weekOfStartDate + 17, \"Examination Week\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            } else if (\"Sem 2\".equals(acadSem)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                noOfWeeks \u003d 17;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                acadYear \u003d \"AY\" + (givenYear - 1) + \"/\" + givenYear;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                endDate \u003d startDate.with(WeekFields.ISO.weekOfWeekBasedYear(), weekOfStartDate + 17 - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                endDate \u003d endDate.with(WeekFields.ISO.dayOfWeek(), 7);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                int week \u003d 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                for (int i \u003d weekOfStartDate; i \u003c weekOfStartDate + 6; i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    weekNames.put(i, \"Week \" + week);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    week++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                weekNames.put(weekOfStartDate + 6, \"Recess Week\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                week \u003d 7;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                for (int i \u003d weekOfStartDate + 7; i \u003c weekOfStartDate + 14; i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    weekNames.put(i, \"Week \" + week);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    week++;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                weekNames.put(weekOfStartDate + 14, \"Reading Week\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                weekNames.put(weekOfStartDate + 15, \"Examination Week\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                weekNames.put(weekOfStartDate + 16, \"Examination Week\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            // Initialises HashMap and Sets of all days in current semester"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            List\u003cLocalDate\u003e datesList \u003d startDate.datesUntil(endDate).collect(Collectors.toList());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            for (LocalDate date: datesList) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                int weekOfYear \u003d date.get(WeekFields.ISO.weekOfWeekBasedYear());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                String weekType \u003d weekNames.get(weekOfYear);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                days.put(date, new Day(date.getDayOfWeek(), weekType));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                switch (weekType) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                case \"Recess Week\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    recessDays.add(date);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                case \"Reading Week\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    readingDays.add(date);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                case \"Examination Week\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    examDays.add(date);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    normalDays.add(date);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "            return new Semester(acadSem, acadYear, days, startDate, endDate, noOfWeeks,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "                    recessDays, readingDays, normalDays, examDays);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 1,
      "dingheng4448": 148
    }
  },
  {
    "path": "test/java/planmysem/logic/LogicTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static junit.framework.TestCase.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT_ADDITIONAL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_DATE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_MULTIPLE_PARAMS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_SLOT_DISPLAYED_INDEX;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_TIME;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.Clock;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.time.ZoneOffset;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.TemporaryFolder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.AddCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.ClearCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.CommandResult;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.DeleteCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.EditCommand;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.ExitCommand;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.FindCommand;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.HelpCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.ListCommand;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Messages;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.common.Utils;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.Planner;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.recurrence.Recurrence;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.Day;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.semester.ReadOnlyDay;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "import planmysem.data.semester.Semester;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Location;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Name;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.ReadOnlySlot;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.slot.Slot;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.tag.Tag;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.storage.StorageFile;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicTest {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * See https://github.com/junit-team/junit4/wiki/rules#temporaryfolder-rule"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public TemporaryFolder temporaryFolder \u003d new TemporaryFolder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private StorageFile storageFile;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Planner planner;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setup() throws Exception {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        storageFile \u003d new StorageFile(temporaryFolder.newFile(\"testSaveFile.txt\").getPath());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        planner \u003d createPlanner();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        storageFile.save(planner);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        logic \u003d new Logic(storageFile, planner);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Instant.now(Clock.fixed("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                Instant.parse(\"2019-02-02T10:00:00Z\"),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                ZoneOffset.UTC));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private Planner createPlanner() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dingheng4448"
        },
        "content": "        return new Planner(Semester.generateSemester(LocalDate.of(2019, 1, 14)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        //Constructor is called in the setup() method which executes before every test, no need to call it here again."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        //Confirm the last shown list is empty"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(null, logic.getLastShownSlots());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_invalid() throws Exception {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String invalidCommand \u003d \"       \";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(invalidCommand,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_unknownCommandWord() throws Exception {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String unknownCommand \u003d \"uicfhmowqewca\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(unknownCommand, HelpCommand.MESSAGE_ALL_USAGES);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_help() throws Exception {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"help\", HelpCommand.MESSAGE_ALL_USAGES);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_exit() throws Exception {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"exit\", ExitCommand.MESSAGE_EXIT_ACKNOWEDGEMENT);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_clear() throws Exception {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Planner expectedPlanner \u003d createPlanner();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        planner.addSlot(LocalDate.of(2019, 2, 1), helper.generateSlot(1));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        planner.addSlot(LocalDate.of(2019, 2, 1), helper.generateSlot(2));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        planner.addSlot(LocalDate.of(2019, 2, 1), helper.generateSlot(3));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"clear\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                ClearCommand.MESSAGE_SUCCESS,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                expectedPlanner,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                false,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                null);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Test add command"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_add_invalidArgsFormat() throws Exception {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add wrong args wrong args\", expectedMessage);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add d/mon st/08:00 et/09:00\", expectedMessage);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add n/CS2113T Tutorial st/08:00 et/09:00\", expectedMessage);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add n/CS2113T Tutorial d/mon et/09:00\", expectedMessage);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_add_invalidSlotData() throws Exception {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"add n/CS2113T Tutorial d/mon st/08:00 et/25:00\", String.format(MESSAGE_INVALID_COMMAND_FORMAT_ADDITIONAL,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        AddCommand.MESSAGE_USAGE, MESSAGE_INVALID_TIME));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"add n/CS2113T Tutorial d/mon st/08:00 et/13:00am\", String.format(MESSAGE_INVALID_COMMAND_FORMAT_ADDITIONAL,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                AddCommand.MESSAGE_USAGE, MESSAGE_INVALID_TIME));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"add n/CS2113T Tutorial d/Superday st/08:00 et/11:00\", String.format(MESSAGE_INVALID_COMMAND_FORMAT_ADDITIONAL,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                AddCommand.MESSAGE_USAGE, MESSAGE_INVALID_DATE));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"add n/CS2113T Tutorial d/01-13-2019 st/08:00 et/11:00\", String.format(MESSAGE_INVALID_COMMAND_FORMAT_ADDITIONAL,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                AddCommand.MESSAGE_USAGE, MESSAGE_INVALID_DATE));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_add_by_date_successful() throws Exception {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // item to be added"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Slot slotToBeAdded \u003d helper.slotOne();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalDate dateToBeAdded \u003d LocalDate.of(2019, 2, 2);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // expectation"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Planner expectedPlanner \u003d createPlanner();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        expectedPlanner.addSlot(dateToBeAdded, slotToBeAdded);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDate, Day\u003e days \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        days.put(dateToBeAdded, expectedPlanner.getDay(dateToBeAdded));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // execute command and verify result"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(helper.generateAddCommand(slotToBeAdded, dateToBeAdded, \"\"),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                String.format(AddCommand.MESSAGE_SUCCESS,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        1,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        AddCommand.craftSuccessMessage(days, slotToBeAdded)),"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                expectedPlanner,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                false,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                null);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_add_by_day_successful() throws Exception {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // because adding by day takes the nearest day, the planner has to be changed to be in respects to the current system date."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // item to be added"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Slot slotToBeAdded \u003d helper.slotOne();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int dayToBeAdded \u003d LocalDate.now().getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalDate dateToBeAdded \u003d Utils.getNearestDayOfWeek(LocalDate.now(), dayToBeAdded);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // expectation"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Planner expectedPlanner \u003d createPlanner();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        expectedPlanner.addSlot(dateToBeAdded, slotToBeAdded);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDate, Day\u003e days \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        days.put(dateToBeAdded, expectedPlanner.getDay(dateToBeAdded));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // execute command and verify result"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(helper.generateAddCommand(slotToBeAdded, dayToBeAdded, \"\"),"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                String.format(AddCommand.MESSAGE_SUCCESS,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        1,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        AddCommand.craftSuccessMessage(days, slotToBeAdded)),"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                expectedPlanner,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                false,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                null);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_add_by_date_multiple_successful() throws Exception {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // item to be added"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Slot slotToBeAdded \u003d helper.slotOne();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalDate dateToBeAdded \u003d LocalDate.of(2019, 2, 2);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // expectation"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Planner expectedPlanner \u003d createPlanner();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Recurrence recurrence \u003d new Recurrence(new HashSet\u003c\u003e(Arrays.asList(\"normal\")), dateToBeAdded);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDate, Day\u003e days \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (LocalDate date : recurrence.generateDates(expectedPlanner.getSemester())) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            expectedPlanner.addSlot(date, slotToBeAdded);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            days.put(date, expectedPlanner.getDay(date));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // execute command and verify result"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(helper.generateAddCommand(slotToBeAdded, dateToBeAdded, \"r/normal\"),"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                String.format(AddCommand.MESSAGE_SUCCESS,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        days.size(),"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        AddCommand.craftSuccessMessage(days, slotToBeAdded)),"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                expectedPlanner,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                false,"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                null);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_add_by_day_multiple_successful() throws Exception {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // item to be added"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Slot slotToBeAdded \u003d helper.slotOne();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        int dayToBeAdded \u003d LocalDate.of(2019, 2, 2).getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalDate dateToBeAdded \u003d Utils.getNearestDayOfWeek(LocalDate.now(), dayToBeAdded);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // expectation"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Planner expectedPlanner \u003d createPlanner();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Recurrence recurrence \u003d new Recurrence(new HashSet\u003c\u003e(Arrays.asList(\"normal\")), dayToBeAdded);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDate, Day\u003e days \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        for (LocalDate date : recurrence.generateDates(expectedPlanner.getSemester())) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            expectedPlanner.addSlot(date, slotToBeAdded);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            days.put(date, expectedPlanner.getDay(date));"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // execute command and verify result"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(helper.generateAddCommand(slotToBeAdded, dayToBeAdded, \"r/normal\"),"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                String.format(AddCommand.MESSAGE_SUCCESS,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        days.size(),"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        AddCommand.craftSuccessMessage(days, slotToBeAdded)),"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                expectedPlanner,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                false,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                null);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_add_unsuccessful() throws Exception {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // item to be added"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Slot slotToBeAdded \u003d helper.slotOne();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalDate dateToBeAdded \u003d LocalDate.of(1999, 1, 1);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // execute command and verify result"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(helper.generateAddCommand(slotToBeAdded, dateToBeAdded, \"\"),"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                AddCommand.MESSAGE_FAIL_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Test edit command"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_edit_invalidArgsFormat() throws Exception {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"edit wrong arguments\", expectedMessage);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"edit nl/COM2 04-01\", expectedMessage);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"edit -1\", expectedMessage);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"e nl/COM2 04-01\", expectedMessage);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_edit_successful() throws Exception {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Slot slotToBeAdded \u003d helper.slotOne();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalDate dateToBeAdded \u003d LocalDate.of(2019, 2, 2);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        planner.addSlot(dateToBeAdded, new Slot(slotToBeAdded));"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        selectedSlots.put(dateToBeAdded,"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                new Pair(planner.getDay(dateToBeAdded), new Slot(slotToBeAdded)));"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // setup expectations"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Planner expectedPlanner \u003d createPlanner();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        expectedPlanner.addSlot(dateToBeAdded, slotToBeAdded);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // create tags"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cString\u003e rawTags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        rawTags.add(\"CS2113T\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cTag\u003e tags \u003d Utils.parseTags(rawTags);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cString\u003e rawNewTags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        rawNewTags.add(\"CS2101\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cTag\u003e newTags \u003d Utils.parseTags(rawNewTags);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        expectedPlanner.editSlot(dateToBeAdded, slotToBeAdded, null, LocalTime.of(4, 0), 60,"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"test\", \"testlo\", \"testdes\", newTags);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // Just to generate the crafted message in this case."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        EditCommand ec \u003d new EditCommand(\"test\", LocalTime.of(4, 0), 60,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"testlo\", \"testdes\", rawTags, rawNewTags);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // execute command and verify result"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"edit t/CS2113T nt/CS2101 nn/test nl/testlo ndes/testdes nst/04:00 net/60\","
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                String.format(EditCommand.MESSAGE_SUCCESS, selectedSlots.size(),"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        Messages.craftSelectedMessage(tags), ec.craftSuccessMessage(selectedSlots)),"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                expectedPlanner,"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                false,"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                null);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_edit_no_change_successful() throws Exception {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cString\u003e rawTags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        rawTags.add(\"someTagThatDoesNotExist\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cTag\u003e tags \u003d Utils.parseTags(rawTags);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"edit t/someTagThatDoesNotExist n/test\","
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                String.format(EditCommand.MESSAGE_SUCCESS_NO_CHANGE,"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        Messages.craftSelectedMessage(tags)));"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_edit_invalid_slot_displayed_unsuccessful() throws Exception {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"edit 100\", MESSAGE_INVALID_SLOT_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    public void execute_edit_out_of_bound_unsuccessful() throws Exception {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//        assertCommandBehavior(\"edit 100\", MESSAGE_INVALID_SLOT_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Test delete command"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_delete_invalidArgsFormat() throws Exception {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"delete wrong args wrong args\", expectedMessage);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"delete t\", expectedMessage);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"del wrong\", expectedMessage);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"d wrong\", expectedMessage);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_delete_successful() throws Exception {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Slot slotToBeAdded \u003d helper.slotOne();"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        LocalDate dateToBeAdded \u003d LocalDate.of(2019, 2, 2);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        planner.addSlot(dateToBeAdded, slotToBeAdded);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Map\u003cLocalDate, Pair\u003cReadOnlyDay, ReadOnlySlot\u003e\u003e selectedSlots \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        selectedSlots.put(dateToBeAdded,"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                new Pair(planner.getDay(dateToBeAdded), slotToBeAdded));"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // setup expectations"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Planner expectedPlanner \u003d createPlanner();"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        expectedPlanner.addSlot(dateToBeAdded, slotToBeAdded);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        expectedPlanner.getSemester().removeSlot(dateToBeAdded, slotToBeAdded);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // execute command and verify result"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(helper.generateDeleteCommand(slotToBeAdded),"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                String.format(DeleteCommand.MESSAGE_SUCCESS,"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        1,"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        Messages.craftSelectedMessage(slotToBeAdded.getTags()),"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        Messages.craftSelectedMessage(\"Deleted Slots:\", selectedSlots)),                expectedPlanner,"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                false,"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                null);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_delete_no_change_successful() throws Exception {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        TestDataHelper helper \u003d new TestDataHelper();"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cString\u003e rawTags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        rawTags.add(\"someTagThatDoesNotExist\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Set\u003cTag\u003e tags \u003d Utils.parseTags(rawTags);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(helper.generateDeleteCommand(tags),"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                String.format(DeleteCommand.MESSAGE_SUCCESS_NO_CHANGE,"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                        Messages.craftSelectedMessage(tags)));"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void execute_delete_invalid_slot_displayed_unsuccessful() throws Exception {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(\"delete 100\", MESSAGE_INVALID_SLOT_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Test find command"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public void execute_find_invalidArgsFormat() throws Exception {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        String expectedMessageSingle \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        String expectedMessageMultipleParams \u003d String.format(MESSAGE_INVALID_MULTIPLE_PARAMS, FindCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                \"find wrong args wrong args\", expectedMessageSingle);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                \"find n/CS2113T t/Tutorial\", expectedMessageMultipleParams);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    public void execute_list_invalidArgsFormat() throws Exception {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        String expectedMessageSingle \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        String expectedMessageMultipleParams \u003d String.format(MESSAGE_INVALID_MULTIPLE_PARAMS, ListCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                \"list wrong args wrong args\", expectedMessageSingle);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "        assertCommandBehavior("
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "                \"list n/CS2113T t/Tutorial\", expectedMessageMultipleParams);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "marcus-pzj"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Executes the command and confirms that the result message is correct."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Both the \u0027planner\u0027 and the \u0027last shown list\u0027 are expected to be empty."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * @see #assertCommandBehavior(String, String, Planner, boolean, List)"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private void assertCommandBehavior(String inputCommand, String expectedMessage) throws Exception {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertCommandBehavior(inputCommand, expectedMessage, planner,false, null);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Executes the command and confirms that the result message is correct and"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * also confirms that the following three parts of the Logic object\u0027s state are as expected:\u003cbr\u003e"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *      - the internal planner data are same as those in the {@code expectedPlanner} \u003cbr\u003e"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *      - the internal \u0027last shown slots\u0027 matches the {@code expectedLastList} \u003cbr\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *      - the storage file content matches data in {@code expectedPlanner} \u003cbr\u003e"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private void assertCommandBehavior(String inputCommand,"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                                       String expectedMessage,"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                                       Planner expectedPlanner,"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                                       boolean isRelevantSlotsExpected,"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                                       List\u003c? extends ReadOnlySlot\u003e lastShownSlots) throws Exception {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //Execute the command"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        CommandResult r \u003d logic.execute(inputCommand);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //Confirm the result contains the right data"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(expectedMessage, r.feedbackToUser);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(r.getRelevantSlots().isPresent(), isRelevantSlotsExpected);"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        if(isRelevantSlotsExpected){"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            assertEquals(lastShownSlots, r.getRelevantSlots().get());"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //Confirm the state of data is as expected"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(expectedPlanner, planner);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(lastShownSlots, logic.getLastShownSlots());"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertEquals(planner, storageFile.load());"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * A utility class to generate test data."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    class TestDataHelper{"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Slot slotOne() throws Exception {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Name name \u003d new Name(\"CS2113T Tutorial\");"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Location location \u003d new Location(\"COM2 04-11\");"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Description description \u003d new Description(\"Topic: Sequence Diagram\");"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            LocalTime startTime \u003d LocalTime.parse(\"08:00\");"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            LocalTime endTime \u003d LocalTime.parse(\"09:00\");"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Tag tag1 \u003d new Tag(\"CS2113T\");"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Tag tag2 \u003d new Tag(\"Tutorial\");"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(Arrays.asList(tag1, tag2));"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new Slot(name, location, description, startTime, endTime, tags);"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * Generates a valid slot using the given seed."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * Running this function with the same parameter values guarantees the returned slot will have the same state."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * Each unique seed will generate a unique slot object."
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         *"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * @param seed used to generate the person data field values"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         */"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        Slot generateSlot(int seed) throws Exception {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return new Slot("
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    new Name(\"slot \" + seed),"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    new Location(\"location \" + Math.abs(seed)),"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    new Description(\"description \" + Math.abs(seed)),"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    LocalTime.parse(\"00:00\"),"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    LocalTime.parse(\"00:00\"),"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    new HashSet\u003c\u003e(Arrays.asList(new Tag(\"tag\" + Math.abs(seed)), new Tag(\"tag\" + Math.abs(seed + 1))))"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            );"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /** Generates the correct add command based on the person given */"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String generateAddCommand(Slot s, LocalDate date, String recurrence) {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            StringJoiner cmd \u003d new StringJoiner(\" \");"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"add\");"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"n/\" + s.getName());"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"d/\" + Utils.parseDate(date));"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"st/\" + s.getStartTime());"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"et/\" + s.getDuration());"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (s.getLocation() !\u003d null) {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                cmd.add(\"l/\" + s.getLocation());"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (s.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                cmd.add(\"des/\" + s.getDescription());"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Set\u003cTag\u003e tags \u003d s.getTags();"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (tags !\u003d null) {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                for(Tag tag : tags){"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    cmd.add(\"t/\" + tag);"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(recurrence);"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return cmd.toString();"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /** Generates the correct add command based on the person given */"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String generateAddCommand(Slot s, int day, String recurrence) {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            StringJoiner cmd \u003d new StringJoiner(\" \");"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"add\");"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"n/\" + s.getName());"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"d/\" + day);"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"st/\" + s.getStartTime());"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"et/\" + s.getDuration());"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (s.getLocation() !\u003d null) {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                cmd.add(\"l/\" + s.getLocation());"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (s.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                cmd.add(\"des/\" + s.getDescription());"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Set\u003cTag\u003e tags \u003d s.getTags();"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (tags !\u003d null) {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                for(Tag tag : tags){"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    cmd.add(\"t/\" + tag);"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(recurrence);"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return cmd.toString();"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /** Generates the correct delete command based on tags */"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String generateDeleteCommand(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            StringJoiner cmd \u003d new StringJoiner(\" \");"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"delete\");"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (tags !\u003d null) {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                for(Tag tag : tags){"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    cmd.add(\"t/\" + tag);"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return cmd.toString();"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /** Generates the correct delete command based on the slot. */"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        String generateDeleteCommand(Slot slot) {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            StringJoiner cmd \u003d new StringJoiner(\" \");"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            cmd.add(\"delete\");"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            Set\u003cTag\u003e tags \u003d slot.getTags();"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            if (tags !\u003d null) {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                for(Tag tag : tags){"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                    cmd.add(\"t/\" + tag);"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            return cmd.toString();"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        public String recurrenceToString(Recurrence recurrence) {"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            StringJoiner cmd \u003d new StringJoiner(\" \");"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            if (recurrence.recess) {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                cmd.add(\"r/\" + \"recess\");"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            if (reading) {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                cmd.add(\"r/\" + \"reading\");"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            if (normal) {"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                cmd.add(\"r/\" + \"normal\");"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            if (exam) {"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                cmd.add(\"r/\" + \"exam\");"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            if (past) {"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                cmd.add(\"r/\" + \"past\");"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            return cmd.toString();"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * Generates an AddressBook with auto-generated persons."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * @param isPrivateStatuses flags to indicate if all contact details of respective persons should be set to"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         *                          private."
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         */"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        AddressBook generateAddressBook(Boolean... isPrivateStatuses) throws Exception{"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            AddressBook addressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            addToAddressBook(addressBook, isPrivateStatuses);"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            return addressBook;"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * Generates an AddressBook based on the list of Persons given."
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         */"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        AddressBook generateAddressBook(List\u003cPerson\u003e persons) throws Exception{"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            AddressBook addressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            addToAddressBook(addressBook, persons);"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            return addressBook;"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * Adds auto-generated Person objects to the given AddressBook"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * @param planner The AddressBook to which the Persons will be added"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         */"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        void addToPlanner(Planner planner) throws Exception{"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            addToPlanner(planner, generatePersonList(isPrivateStatuses));"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * Adds the given list of slots to the given Planner"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         */"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        void addToPlanner(Planner planner, List\u003cPair\u003cLocalDate, Slot\u003e\u003e slotsToAdd) throws Exception{"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            for(Pair\u003cLocalDate, Slot\u003e p: slotsToAdd){"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                planner.addSlot(p.getKey(), p.getValue());"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * Creates a list of Persons based on the give Person objects."
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         */"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        List\u003cPerson\u003e generatePersonList(Person... persons) throws Exception{"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            for(Person p: persons){"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                personList.add(p);"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            return personList;"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * Generates a list of Persons based on the flags."
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * @param isPrivateStatuses flags to indicate if all contact details of respective persons should be set to"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         *                          private."
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         */"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        List\u003cPerson\u003e generatePersonList(Boolean... isPrivateStatuses) throws Exception{"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            int i \u003d 1;"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            for(Boolean p: isPrivateStatuses){"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                persons.add(generatePerson(i++, p));"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            }"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            return persons;"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         * Generates a Person object with given name. Other fields will have some dummy values."
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "         */"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        Person generatePersonWithName(String name) throws Exception {"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            return new Person("
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                    new Name(name),"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                    new Phone(\"1\", false),"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                    new Email(\"1@email\", false),"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                    new Address(\"House of 1\", false),"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //                    Collections.singleton(new Tag(\"tag\"))"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //            );"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 641,
      "marcus-pzj": 20,
      "dingheng4448": 2,
      "-": 27
    }
  },
  {
    "path": "test/java/planmysem/parser/ParserTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.ClearCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.DeleteCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.EditCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.ExitCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.HelpCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setup() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void emptyInput_returnsIncorrect() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        final String[] emptyInputs \u003d { \"\", \"  \", \"\\n  \\n\" };"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, emptyInputs);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void unknownCommandWord_returnsHelp() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String input \u003d \"unknowncommandword arguments arguments\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        parseAndAssertCommandType(input, HelpCommand.class);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Test 0-argument commands"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void helpCommand_parsedCorrectly() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String input \u003d \"help\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        parseAndAssertCommandType(input, HelpCommand.class);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void clearCommand_parsedCorrectly() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String input \u003d \"clear\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        parseAndAssertCommandType(input, ClearCommand.class);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void listCommand_parsedCorrectly() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String input \u003d \"list\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        parseAndAssertCommandType(input, ListCommand.class);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void exitCommand_parsedCorrectly() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String input \u003d \"exit\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        parseAndAssertCommandType(input, ExitCommand.class);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Test add command"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void addCommand_invalidArgs() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String[] inputs \u003d {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add \","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add wrong args format\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                // no name prefix"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add Tutorial d/mon st/08:00 et/09:00\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                // no date prefix"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add n/CS2113T Tutorial et/09:00 et/09:00\","
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                // no start time prefix"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add n/CS2113T Tutorial d/mon et/09:00\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                // no end time prefix"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "                \"add n/CS2113T Tutorial d/mon st/08:00 \","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        };"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void addCommand_invalidPersonDataInArgs() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String invalidName \u003d \"[]\\\\[;]\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String validName \u003d Name.EXAMPLE;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String invalidPhoneArg \u003d \"p/not__numbers\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String validPhoneArg \u003d \"p/\" + Phone.EXAMPLE;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String invalidEmailArg \u003d \"e/notAnEmail123\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String validEmailArg \u003d \"e/\" + Email.EXAMPLE;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String invalidTagArg \u003d \"t/invalid_-[.tag\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        // address can be any string, so no invalid address"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String addCommandFormatString \u003d \"add $s $s $s a/\" + Address.EXAMPLE;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        // test each incorrect person data field argument individually"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String[] inputs \u003d {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                // invalid name"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                String.format(addCommandFormatString, invalidName, validPhoneArg, validEmailArg),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                // invalid phone"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                String.format(addCommandFormatString, validName, invalidPhoneArg, validEmailArg),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                // invalid email"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                String.format(addCommandFormatString, validName, validPhoneArg, invalidEmailArg),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                // invalid tag"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                String.format(addCommandFormatString, validName, validPhoneArg, validEmailArg) + \" \" + invalidTagArg"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        };"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        for (String input : inputs) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //            parseAndAssertCommandType(input, IncorrectCommand.class);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void addCommand_validPersonData_parsedCorrectly() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final Person testPerson \u003d generateTestPerson();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String input \u003d convertPersonToAddCommandString(testPerson);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final AddCommand result \u003d parseAndAssertCommandType(input, AddCommand.class);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        assertEquals(result.getPerson(), testPerson);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void addCommand_duplicateTags_merged() throws IllegalValueException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final Person testPerson \u003d generateTestPerson();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        String input \u003d convertPersonToAddCommandString(testPerson);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        for (Tag tag : testPerson.getTags()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //            // create duplicates by doubling each tag"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //            input +\u003d \" t/\" + tag.tagName;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final AddCommand result \u003d parseAndAssertCommandType(input, AddCommand.class);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        assertEquals(result.getPerson(), testPerson);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    private static Person generateTestPerson() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //            return new Person("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                    new Name(Name.EXAMPLE),"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                    new Phone(Phone.EXAMPLE, true),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                    new Email(Email.EXAMPLE, false),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                    new Address(Address.EXAMPLE, true),"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                    new HashSet\u003c\u003e(Arrays.asList(new Tag(\"tag1\"), new Tag(\"tag2\"), new Tag(\"tag3\")))"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //            );"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //            throw new RuntimeException(\"test person data should be valid by definition\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    private static String convertPersonToAddCommandString(ReadOnlyPerson person) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        String addCommand \u003d \"add \""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                + person.getName().fullName"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                + (person.getPhone().isPrivate() ? \" pp/\" : \" p/\") + person.getPhone().value"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                + (person.getEmail().isPrivate() ? \" pe/\" : \" e/\") + person.getEmail().value"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                + (person.getAddress().isPrivate() ? \" pa/\" : \" a/\") + person.getAddress().value;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        for (Tag tag : person.getTags()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //            addCommand +\u003d \" t/\" + tag.tagName;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        return addCommand;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Test edit command"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void editCommand_noArgs() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String[] inputs \u003d { \"edit\", \"edit \" };"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void editcommand_argsNoTagNoIndex() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String[] inputs \u003d { \"edit nl/COM2 04-01\", \"edit net/100\", \"edit d/description\" };"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void editcommand_argsIndexNegative() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String[] inputs \u003d { \"edit -1\", \"edit -100\" };"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Test delete command"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void deleteCommand_noArgs() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String[] inputs \u003d { \"delete\", \"delete \" };"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void deleteCommand_argsIsNotSingleNumber() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String[] inputs \u003d { \"delete notAnumber \", \"delete 8*wh12\", \"delete 1 2 3 4 5\" };"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void deleteCommand_numericArg_indexParsedCorrectly() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final int testIndex \u003d 1;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String input \u003d \"delete \" + testIndex;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final DeleteCommand result \u003d parseAndAssertCommandType(input, DeleteCommand.class);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        assertEquals(result.getTargetIndex(), testIndex);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void viewCommand_noArgs() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String[] inputs \u003d { \"view\", \"view \" };"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void viewCommand_argsIsNotSingleNumber() {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String[] inputs \u003d { \"view notAnumber \", \"view 8*wh12\", \"view 1 2 3 4 5\" };"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void viewCommand_numericArg_indexParsedCorrectly() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final int testIndex \u003d 2;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String input \u003d \"view \" + testIndex;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final ViewCommand result \u003d parseAndAssertCommandType(input, ViewCommand.class);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        assertEquals(result.getTargetIndex(), testIndex);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void viewAllCommand_noArgs() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String[] inputs \u003d { \"viewall\", \"viewall \" };"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String resultMessage \u003d"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewAllCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void viewAllCommand_argsIsNotSingleNumber() {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String[] inputs \u003d { \"viewall notAnumber \", \"viewall 8*wh12\", \"viewall 1 2 3 4 5\" };"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewAllCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void viewAllCommand_numericArg_indexParsedCorrectly() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final int testIndex \u003d 3;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String input \u003d \"viewall \" + testIndex;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final ViewAllCommand result \u003d parseAndAssertCommandType(input, ViewAllCommand.class);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        assertEquals(result.getTargetIndex(), testIndex);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Test find slot by keyword in name command"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void findCommand_invalidArgs() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        // no keywords"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String[] inputs \u003d {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                \"find\","
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                \"find \""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        };"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String resultMessage \u003d"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void findCommand_validArgs_parsedCorrectly() {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String[] keywords \u003d { \"key1\", \"key2\", \"key3\" };"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final Set\u003cString\u003e keySet \u003d new HashSet\u003c\u003e(Arrays.asList(keywords));"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String input \u003d \"find \" + String.join(\" \", keySet);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final FindCommand result \u003d"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                parseAndAssertCommandType(input, FindCommand.class);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        assertEquals(keySet, result.getKeywords());"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void findCommand_duplicateKeys_parsedCorrectly() {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String[] keywords \u003d { \"key1\", \"key2\", \"key3\" };"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final Set\u003cString\u003e keySet \u003d new HashSet\u003c\u003e(Arrays.asList(keywords));"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        // duplicate every keyword"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final String input \u003d \"find \" + String.join(\" \", keySet) + \" \" + String.join(\" \", keySet);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        final FindCommand result \u003d"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                parseAndAssertCommandType(input, FindCommand.class);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        assertEquals(keySet, result.getKeywords());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "     * Utility methods"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that parsing the given inputs will return IncorrectCommand with the given feedback message."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    private void parseAndAssertIncorrectWithMessage(String feedbackMessage, String... inputs) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String input : inputs) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            final IncorrectCommand result \u003d parseAndAssertCommandType(input, IncorrectCommand.class);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(result.feedbackToUser, feedbackMessage);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "     * Utility method for parsing input and asserting the class/type of the returned command object."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input to be parsed"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param expectedCommandClass expected class of returned command"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the parsed command object"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        return (T) result;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 283,
      "-": 46
    }
  },
  {
    "path": "test/java/planmysem/storage/EncryptorTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "/*package planmysem.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import static org.junit.Assert.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "public class EncryptorTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    public void encrypt_Valid() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        String testString \u003d Encryptor.encrypt(\"Hello World!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        assertNotEquals(testString, \"HellO World!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "macchazuki"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    public void decrypt_Valid() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        String testString \u003d Encryptor.encrypt(\"Hello World!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "        assertEquals(Encryptor.decrypt(testString), \"Hello World!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "macchazuki"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "macchazuki": 22
    }
  },
  {
    "path": "test/java/planmysem/storage/StorageFileTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import static planmysem.util.TestUtil.assertTextFilesEqual;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.ExpectedException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.TemporaryFolder;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "import planmysem.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageFileTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String TEST_DATA_FOLDER \u003d \"test/data/StorageFileTest\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpectedException thrown \u003d ExpectedException.none();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public TemporaryFolder temporaryFolder \u003d new TemporaryFolder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void constructor_nullFilePath_exceptionThrown() throws Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        thrown.expect(NullPointerException.class);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        new StorageFile(null);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void constructor_noTxtExtension_exceptionThrown() throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        thrown.expect(IllegalValueException.class);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        new StorageFile(TEST_DATA_FOLDER + \"/\" + \"InvalidfileName\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    public void load_invalidFormat_exceptionThrown() throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        // The file contains valid xml data, but does not match the Planner class"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        StorageFile storage \u003d getStorage(\"InvalidData.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        thrown.expect(StorageFile.StorageOperationException.class);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        storage.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void load_validFormat() throws Exception {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        AddressBook actualAB \u003d getStorage(\"ValidData.txt\").load();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        AddressBook expectedAB \u003d getTestAddressBook();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        // ensure loaded AddressBook is properly constructed with test data"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        // TODO: overwrite equals method in AddressBook class and replace with equals method below"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        assertEquals(actualAB.getAllPersons(), expectedAB.getAllPersons());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void save_nullAddressBook_exceptionThrown() throws Exception {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        StorageFile storage \u003d getTempStorage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        thrown.expect(NullPointerException.class);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        storage.save(null);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    public void save_validAddressBook() throws Exception {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        AddressBook ab \u003d getTestAddressBook();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        StorageFile storage \u003d getTempStorage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        storage.save(ab);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        assertStorageFilesEqual(storage, getStorage(\"ValidData.txt\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    // getPath() method in StorageFile class is trivial so it is not tested"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     * Asserts that the contents of two storage files are the same."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private void assertStorageFilesEqual(StorageFile sf1, StorageFile sf2) throws Exception {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        assertTextFilesEqual(Paths.get(sf1.getPath()), Paths.get(sf2.getPath()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private StorageFile getStorage(String fileName) throws Exception {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new StorageFile(TEST_DATA_FOLDER + \"/\" + fileName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    private StorageFile getTempStorage() throws Exception {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "        return new StorageFile(temporaryFolder.getRoot().getPath() + \"/\" + \"temp.txt\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    private Planner getTestAddressBook() throws Exception {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        Planner planner \u003d new Planner();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        planner.addPerson(new Person(new Name(\"John Doe\"),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                new Phone(\"98765432\", false),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                new Email(\"johnd@gmail.com\", false),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                new Address(\"John street, block 123, #01-01\", false),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                Collections.emptySet()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        planner.addPerson(new Person(new Name(\"Betsy Crowe\"),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                new Phone(\"1234567\", true),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                new Email(\"betsycrowe@gmail.com\", false),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                new Address(\"Newgate Prison\", true),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"friend\"), new Tag(\"criminal\")))));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //        return planner;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 85,
      "-": 14
    }
  },
  {
    "path": "test/java/planmysem/util/TestUtil.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanieyap"
        },
        "content": "package planmysem.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanieyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestUtil {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts whether the text in the two given files are the same. Ignores any"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * differences in line endings"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertTextFilesEqual(Path path1, Path path2) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e list1 \u003d Files.readAllLines(path1, Charset.defaultCharset());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e list2 \u003d Files.readAllLines(path2, Charset.defaultCharset());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(String.join(\"\\n\", list1), String.join(\"\\n\", list2));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanieyap": 2,
      "-": 19
    }
  }
]
