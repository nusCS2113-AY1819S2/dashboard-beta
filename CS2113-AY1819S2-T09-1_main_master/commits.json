{
  "authorDailyContributionsMap": {
    "truegitnovice": [
      {
        "insertions": 9,
        "deletions": 3,
        "date": "2019-02-17",
        "commitResults": [
          {
            "hash": "ce4972148b916e1d39620114ffb6f04480ae63b4",
            "messageTitle": "DeveloperGuide: update product scope (#2)",
            "messageBody": "Let\u0027s update the documentation to include the updated target user \r\nprofile and value proposition.",
            "insertions": 9,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 11,
        "date": "2019-02-18",
        "commitResults": [
          {
            "hash": "425f0be65bfdfd2c540d86089200cbc83df9710e",
            "messageTitle": "AboutUs: add Ahn TaeGyu\u0027s details (#8)",
            "messageBody": "`About Us.adoc` does not include details of team members in team T09-1.\r\n\r\nLet\u0027s update the documentation to include Ahn TaeGyu\u0027s details by:\r\n* adding a personal project portfolio template\r\n* adding an avatar image\r\n* updating roles and responsibilities",
            "insertions": 76,
            "deletions": 4
          },
          {
            "hash": "d0b0c6dfdc5c16ddee61786304841fc8ce904495",
            "messageTitle": "DeveloperGuide: update user stories (#7)",
            "messageBody": "DeveloperGuide has yet to been updated with user stories for our new \r\napplication that is work in progress.\r\n\r\nLet\u0027s add in relevant user stories regarding module planner:\r\n* `planner list`\r\n* `planner move`\r\n* `planner exempt`",
            "insertions": 5,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 1,
        "date": "2019-02-19",
        "commitResults": [
          {
            "hash": "9aacfa6b8e1828eb78097fcc5558a47dce168aeb",
            "messageTitle": "ContactUs: remove email (#6)",
            "messageBody": "Since email contact details is not a requirement for our project, let\u0027s \r\nremove it.",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 785,
        "deletions": 1,
        "date": "2019-03-02",
        "commitResults": [
          {
            "hash": "674ac9ce3c6d3a01cf4702e667f45ed8680e2a14",
            "messageTitle": "Planner: add DegreePlanner",
            "messageBody": "",
            "insertions": 115,
            "deletions": 0
          },
          {
            "hash": "153131ca5d1b727cd557df68d173667a01f9c1a6",
            "messageTitle": "Planner: add UniqueDegreePlannerList",
            "messageBody": "",
            "insertions": 139,
            "deletions": 0
          },
          {
            "hash": "14f6a80e9de89775b14b606c35ee384ff2cc21ea",
            "messageTitle": "Planner: add exceptions",
            "messageBody": "",
            "insertions": 19,
            "deletions": 0
          },
          {
            "hash": "9934ddb568b4416a779e9d6e8bcf1e2a428d2b0b",
            "messageTitle": "Model: add DegreePlannerModel",
            "messageBody": "",
            "insertions": 79,
            "deletions": 0
          },
          {
            "hash": "1c39f4841d44379bc554365cc8e49560c87d493e",
            "messageTitle": "Model: add DegreePlannerList",
            "messageBody": "",
            "insertions": 127,
            "deletions": 0
          },
          {
            "hash": "68b8d0b882e52bf96aca9cf35a0f2560d4bcee41",
            "messageTitle": "Model: add ReadOnlyDegreePlannerList",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "53b942be3fa854d52d1b533d590d9ba5c15af06c",
            "messageTitle": "Model: add VersionedDegreePlannerList",
            "messageBody": "",
            "insertions": 110,
            "deletions": 0
          },
          {
            "hash": "f8dca0a9b16f1cfb6feb692c7bc9851235610baf",
            "messageTitle": "Model: add ToDo",
            "messageBody": "",
            "insertions": 64,
            "deletions": 1
          },
          {
            "hash": "543f1b814c2bc95c774bb070cb727045ee51ac1c",
            "messageTitle": "Planner: add DegreePlannerSemester",
            "messageBody": "",
            "insertions": 57,
            "deletions": 0
          },
          {
            "hash": "0772e9584c5cab99d10dc101a8aab2ed510b53a2",
            "messageTitle": "Planner: add DegreePlannerYear",
            "messageBody": "",
            "insertions": 57,
            "deletions": 0
          },
          {
            "hash": "ba362c7339d52eaf0a5b70f31d0164ffb18e14cd",
            "messageTitle": "README: update UI mockup (#31)",
            "messageBody": "The UI mockup in `README.adoc` illustrates an Address Book application.\r\n\r\nSince our application is no longer an Address Book application, and \r\ninstead, is a Degree Planner application, we should update the UI mockup\r\nto reflect this correctly.\r\n\r\nLet\u0027s update UI mockup to better reflect the Degree Planner application \r\nwe envision.",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 934,
        "deletions": 287,
        "date": "2019-03-03",
        "commitResults": [
          {
            "hash": "4e3d8a769eba70d6fc2e00a1728a54d489a442b3",
            "messageTitle": "Planner: refactor \u0027Planner\u0027 to \u0027DegreePlanner\u0027",
            "messageBody": "",
            "insertions": 10,
            "deletions": 11
          },
          {
            "hash": "ba8e47c513b3d3ca766af9ece432000c7cf43ae5",
            "messageTitle": "Model: update to handle DegreePlanner",
            "messageBody": "",
            "insertions": 110,
            "deletions": 39
          },
          {
            "hash": "ad666a1cfcb8b86a9caf435ef5dd813de85a016f",
            "messageTitle": "Planner: depreciate \u0027Name\u0027 and \u0027Credits\u0027",
            "messageBody": "",
            "insertions": 4,
            "deletions": 26
          },
          {
            "hash": "4e770d79d31046250f7a73085fff36aa2f0dcf3a",
            "messageTitle": "Planner: refactor \u0027isValidDate\u0027 to \u0027isValideSemester\u0027",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "d88a9547184b88ae07a1c7101ee0a1fa91866d6b",
            "messageTitle": "Planner: refactor \u0027isValidDate\u0027 to \u0027isValideYear\u0027",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "2c159b4313c9ecc488d8150df4caa88583e4f092",
            "messageTitle": "Model: update to handle DegreePlannerList Storage",
            "messageBody": "",
            "insertions": 21,
            "deletions": 0
          },
          {
            "hash": "9b85a89e9330b3380500ef6eeefdcc7686f10e5e",
            "messageTitle": "Storage: update to handle DegreePlannerListStorage",
            "messageBody": "",
            "insertions": 293,
            "deletions": 5
          },
          {
            "hash": "77b29b9ec015408a599d96ef71e3da4fda64fa23",
            "messageTitle": "Model: update to handle DegreePlannerList FilePath",
            "messageBody": "",
            "insertions": 12,
            "deletions": 1
          },
          {
            "hash": "f8087240c5a58020571596298fa7f7bc80b3fb68",
            "messageTitle": "Model: update to provide sample degreePlanners",
            "messageBody": "",
            "insertions": 30,
            "deletions": 0
          },
          {
            "hash": "3d6d078d2df259bc04c169141be5b7b502b5b232",
            "messageTitle": "MainApp: update to handle DegreePlannerList",
            "messageBody": "",
            "insertions": 24,
            "deletions": 2
          },
          {
            "hash": "38ecbd5550ff1d1476bd78c3a9808e9cb7c6d86b",
            "messageTitle": "Model: refactor \u0027Planner\u0027 to \u0027DegreePlanner\u0027",
            "messageBody": "",
            "insertions": 54,
            "deletions": 48
          },
          {
            "hash": "ff9c930ff85e874c307c2e7067773e65af3f955d",
            "messageTitle": "Storage: add files to handle DegreePlannerList",
            "messageBody": "",
            "insertions": 20,
            "deletions": 0
          },
          {
            "hash": "144b1945f848269b6dccbeb26a43cdc9e4f52dd8",
            "messageTitle": "Fix Styles",
            "messageBody": "",
            "insertions": 17,
            "deletions": 11
          },
          {
            "hash": "1f28657712793636d0cce3b62471c10974e1125c",
            "messageTitle": "Test: update logic to include DegreePlanner",
            "messageBody": "",
            "insertions": 143,
            "deletions": 42
          },
          {
            "hash": "ffe875869aa91ad2f28e930abd7b9423777752b2",
            "messageTitle": "Model: modify DegreePlanner models",
            "messageBody": "",
            "insertions": 81,
            "deletions": 50
          },
          {
            "hash": "4a8bf0b5271d93303056c87ec7afaec7e0534ccb",
            "messageTitle": "Storage: update to handle modified DegreePlannerList",
            "messageBody": "",
            "insertions": 76,
            "deletions": 24
          },
          {
            "hash": "d36e797a3ae9be3dc0db1ad71e00355d50d093e3",
            "messageTitle": "Test: state ToDo for AddCommandTest",
            "messageBody": "",
            "insertions": 13,
            "deletions": 8
          },
          {
            "hash": "160a6da4c64de669f83c6bcfd62942951e4e9c0d",
            "messageTitle": "MainApp: modify to return SampleDegreePlannerList",
            "messageBody": "",
            "insertions": 7,
            "deletions": 8
          },
          {
            "hash": "e5e0b4e103a5e7c2b1dacacf04f2491df832e461",
            "messageTitle": "Model: update SampleDegreePlanner",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "42e4d8c2acfbce791d4cc9e415903ab105dd4568",
            "messageTitle": "Logic: update to store DegreePlannerList",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 394,
        "deletions": 46,
        "date": "2019-03-04",
        "commitResults": [
          {
            "hash": "92c050f5fb95375e3b6254c2d1d3d6c4bd62ee69",
            "messageTitle": "Model/planner: Refactor `Year#Year(...)` constructor argument (#51)",
            "messageBody": "Let\u0027s refactor `Year#Year(...)` constructor argument `Year` to `year` to\r\nresolve Checkstyle warnings.",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "96ecfa005654dc3f2f21cd499ce7f53eb325c7a5",
            "messageTitle": "UserGuide: update degree planner details and FAQ (#47)",
            "messageBody": "Let\u0027s update the user commands related to the degree planner and update \r\nFAQ so that users are able to better understand the commands.",
            "insertions": 47,
            "deletions": 28
          },
          {
            "hash": "ae1795aa5a26001cffb78cfe748207f68866d616",
            "messageTitle": "docs/DeveloperGuide: update to reflect the implementations (#61)",
            "messageBody": "Let\u0027s update the DeveloperGuide to include:\r\n* new storage component diagram\r\n* refinements made to user stories\r\n* refinements made to use cases\r\n* add more glossary terms",
            "insertions": 342,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 311,
        "deletions": 11,
        "date": "2019-03-18",
        "commitResults": [
          {
            "hash": "ee53f2e28ed2d409bf640d93fd70af17ae0c77df",
            "messageTitle": "View: add UI for DegreePlannerList",
            "messageBody": "Currently, there is no Ui to display the list of degree planners.\n\nLet\u0027s add Ui to display them.\n",
            "insertions": 29,
            "deletions": 0
          },
          {
            "hash": "9a72a08bff36a6ff824804da881b9e322df9fd42",
            "messageTitle": "View: update MainWindow to include UI for DegreePlannerList",
            "messageBody": "Currently, MainWindow does not include UI for DegreePlannerList.\nMoreover, BrowserPanel is not needed to be displayed.\n\nLet\u0027s update MainWindow to display Ui for DegreePlannerList and minimize\nthe size for BrowserPanel and place it at the bottom so that it does not\ninterrupt other pannels.\n\nIn addition, with UI for DegreePlannerList included, it will have problem\nactivating \u0027Help\u0027 button on the menu when MainWindow is resized to\ncurrent minimum size.\n\nHence, let\u0027s increase the current minimum size for MainWindow to prevent\nthis problem.\n",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "47758ff6b7bbfb465af4448f97a21097b7ae7076",
            "messageTitle": "Commands: add PlannerListAllCommand",
            "messageBody": "Currently, DegreePlannerList does not have a feature to list all\ndegree planners.\n\nLet\u0027s add PlannerListAllCommand to list all degree planners\n",
            "insertions": 39,
            "deletions": 0
          },
          {
            "hash": "6f6688662d1176757fbddd0744494bdfb03fcd22",
            "messageTitle": "Logic: update to include PlannerListAllCommand",
            "messageBody": "Let\u0027s update logic to include PlannerListAllCommand to allow application\nto take in \u0027planner_list_all\u0027 command to list all degree planners.\n",
            "insertions": 16,
            "deletions": 1
          },
          {
            "hash": "85bc6c8aa83e279d0a6d4a729f492dd8a077bf4b",
            "messageTitle": "UI: add DegreePlanner related classes to handle UI for DegreePlannerList",
            "messageBody": "Currently, there are no Java classes to handle UI for DegreePlannerList.\n\nLet\u0027s add Java Classes to handle UI for DegreePlannerList:\n\n- view/DegreePlannerListCard\n- view/DegreePlannerListPanel\n",
            "insertions": 113,
            "deletions": 0
          },
          {
            "hash": "c7e475e6765f54530ed24775556438337e586b53",
            "messageTitle": "UI: update MainWindow to handle DegreePlannerList",
            "messageBody": "Currently, MainWindow class does not include DegreePlannerList.\n\nLet\u0027s update MainWindow Class to include and handle DegreePlannerList.\n",
            "insertions": 12,
            "deletions": 0
          },
          {
            "hash": "7c0abd07d1c6dda467b7470e01119f1707546472",
            "messageTitle": "View: update BrowserPanel to be hidden",
            "messageBody": "Since the application does not need BrowserPanel,\nLet\u0027s update BrowserPanel to be hidden for now.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "1ec521f91d7518e71ae07e012fbba0c42065299f",
            "messageTitle": "Test: update to include PlannerListAllCommand",
            "messageBody": "Currently, test does not include PlannerListAllCommand.\n\nLet\u0027s add Test for the command.\n",
            "insertions": 95,
            "deletions": 0
          },
          {
            "hash": "16af9845f04f2b6646d3a56fb18ad90fceecaac6",
            "messageTitle": "Test: update HelpCommandSystemTest to not click on browserPannel",
            "messageBody": "BrowserPannel is to be updated to be hidden as mentioned in the\nprevious commit: \u0027View: update BrowserPanel to be hidden\u0027.\n\nLet\u0027s update HelpCommandSystemTest to not attempt clicking on the\nhidden browserPannel\n",
            "insertions": 0,
            "deletions": 4
          },
          {
            "hash": "db59290fe394b2cf47be232e6d1ea5704d59e910",
            "messageTitle": "Util: update SampleDegreePlannerUtil to include various modules",
            "messageBody": "Currently, there is no module added into the degree planner list.\n\nLet\u0027s update SampleDegreePlannerUtil to include the modules when there\nis no initial data for now for demostration purpose.\n\nSampleDataUtil will be updated to contain added modules only after\nmodel and storage for degree planner list are updated.\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "5df35bb5401ec56c24fa6fad2ff9917a9c07f01e",
            "messageTitle": "README: update UI (#98)",
            "messageBody": "Let\u0027s update UI to replace our current UI mockup.",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-03-19",
        "commitResults": [
          {
            "hash": "bf622a94c5b384bd96229ff7eb2b7920f72d93de",
            "messageTitle": "UserGuide: update \u0027planner_list_all\u0027 (#94)",
            "messageBody": "Currently, UserGuide states that \u0027planner_list_all\u0027 command is not\r\nimplemented.\r\n\r\nLet\u0027s update it by removing \u0027[coming in v2.0]\u0027 tag",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 754,
        "deletions": 884,
        "date": "2019-03-25",
        "commitResults": [
          {
            "hash": "a323d49e9aacb471fb2a4630fe74286f0ecc784d",
            "messageTitle": "Model: combine all degree planner related methods into AddressBook",
            "messageBody": "In order to combine \u0027VersionedDegreePlannerList\u0027 into\n\u0027VersionedAddressBook\u0027, following changes are made:\n\n- methods from \u0027DegreePlannerList\u0027 is re-initialized in \u0027AddressBook\u0027\n\n- methods from \u0027ReadOnlyDegreePlannerList\u0027 is re-initialized in\n  \u0027ReadOnlyAddressBook\u0027\n\n- \u0027Model\u0027, \u0027ModelManager\u0027 and \u0027AddressBook\u0027 is updated to referenced\n  new methods initialized in \u0027AddressBook\u0027 and \u0027ReadOnlyAddressBook\u0027\n\n- \u0027UserPrefs\u0027 is updated to better include \u0027degreePlannerListFilePath\u0027\n   by updating \u0027hashcode\u0027 and \u0027toString\u0027 methods\n",
            "insertions": 87,
            "deletions": 72
          },
          {
            "hash": "bee7989b2b04d74335c8af9fdad51f3502f90849",
            "messageTitle": "Storage: combine DegreePlanner storage into AddressBook storage",
            "messageBody": "In order to combine DegreePlanner storage into AddressBook storage,\nfollowing changes are made:\n\n- \u0027DegreePlanner\u0027 methods are added to \u0027AddressBookStorage\u0027 so that\n   other \u0027DegreePlanner\u0027 related files are able to reference the\n   \u0027DegreePlanner\u0027 methods\n\n- \u0027JsonAddressBookStorage\u0027 is updated to include logic to read and\n   write to the new  data storage location for \u0027DegreePlanner\u0027\n\n- \u0027JsonSerializableAddressBook\u0027 is updated to be able to interact with\n   the new data storage \u0027DegreePlanner\u0027 related file\n\n- \u0027JsonSerializableDegreePlannerList\u0027 is updated to reference methods\n   in updated model\n\n- \u0027Storage\u0027 and \u0027StorageManager\u0027 is updated to handle new storage\nstructure\n\nNote: In \u0027JsonSerializableDegreePlannerList\u0027,\n\u0027MESSAGE_DUPLICATE_DEGREEPLANNER\u0027 is refactored to\n\u0027MESSAGE_DUPLICATE_DEGREE_PLANNER\u0027\n",
            "insertions": 146,
            "deletions": 35
          },
          {
            "hash": "2679d91e70bae457580408435569ada3f3693141",
            "messageTitle": "Logic: update LogicManager to handle model and storage structure",
            "messageBody": "LogicManager is updated to handle new model and storage structure\nafter combinations of \u0027VersionedDegreePlannerList\u0027 into\n\u0027VersionedAddressBook\u0027 and \u0027DegreePlannerListStorage\u0027 into\n\u0027AddressBookStorage\u0027\n",
            "insertions": 0,
            "deletions": 6
          },
          {
            "hash": "7b4db77da210e58a77e9a31f14493423377e746c",
            "messageTitle": "Logic: update \u0027PlannerListAllCommand\u0027 to suit to new model structure",
            "messageBody": "\u0027PlannListAllCommand\u0027 is updated to suit the new model which\ncombines \u0027VersionedDegreePlannerList\u0027 into \u0027VersionedAddressBook\u0027\n",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "4737eb78d744c853224dc9ecf7ed22cef01e03b6",
            "messageTitle": "Main: update MainApp to use new model and storage structures",
            "messageBody": "MainApp is updated to suit new model and storage structures\nafter the combination\n",
            "insertions": 5,
            "deletions": 29
          },
          {
            "hash": "2905c8f05ca5a550c09b40dc707a05893b831af1",
            "messageTitle": "Model:Util: update \u0027SampleDataUtil\u0027 to create sample \u0027DegreePlanners\u0027",
            "messageBody": "Since model is updated to combine \u0027VersionedDegreePlannerList\u0027 into\n\u0027VersionedAddressBook\u0027, \u0027SampleDataUtil\u0027 is updated to create sample\ndegree planners\n",
            "insertions": 67,
            "deletions": 0
          },
          {
            "hash": "7b225d72b74afb2a975bd7744e262bdf2a51fa60",
            "messageTitle": "Model: depreciate \u0027VersionedDegreePlannerList\u0027",
            "messageBody": "Following files are removed in depreciation of\n\u0027VersionedDegreePlannerList\u0027:\n\n- DegreePlannerList\n\n- DegreePlannerModel\n\n- ReadOnlyDegreePlannerList\n\n- VersionedDegreePlannerList\n\nStorage: depreciate \u0027DegreePlannerListStorage\u0027\n\nFollowing files are removed in depriciation of\n\u0027DegreePlannerListStorage\u0027:\n\n- DegreePlannerListStorage\n\n- JsonDegreePlannerListStorage\n\nModel:Util: depreciate \u0027SampleDegreePlannerUtil\u0027\n\n\u0027SampleDegreePlannerUtil\u0027 is removed as \u0027SampleDataUtil\u0027 now handles\nthe creation of sample degree planners\n",
            "insertions": 0,
            "deletions": 521
          },
          {
            "hash": "8720db247fda8aa32d4603957c48237ea2f4de0d",
            "messageTitle": "Test: update test logic to handle new model structure",
            "messageBody": "As multiple changes are made in the process of combinations of\n\u0027VersionedDegreePlannerList\u0027 into \u0027VersionedAddressBook\u0027 and\n\u0027DegreePlannerListStorage\u0027 into \u0027AddressBookStorage\u0027, the existing\ntest cases must be updated to suit new model and storage structures.\n\nLet\u0027s update the test cases accordingly to suit new model and\nstorage structures.\n",
            "insertions": 190,
            "deletions": 187
          },
          {
            "hash": "c4c6fb27745aef80e00103ef4a63b77fa8a05cba",
            "messageTitle": "Test:TestUtil: add classes to construct DegreePlanner related test cases",
            "messageBody": "Let\u0027s add classes to construct DegreePlanner related test cases to\nallow handling of test cases for new model and storage structures\n",
            "insertions": 194,
            "deletions": 0
          },
          {
            "hash": "c51a2c354d8ef3d853a098596127220cd37ed7e9",
            "messageTitle": "UI:DegreePlanner: convert FlowPane to ListView",
            "messageBody": "For simplicity, let\u0027s convert current implementation of FlowPane\nto ListView so that given user inputs, it is easier to update\ncontents real-time.\n",
            "insertions": 22,
            "deletions": 6
          },
          {
            "hash": "a80d344091bceaae6c1704b3b415f29b950f7102",
            "messageTitle": "UI:DegreePlanner: update DegreePlannerCard style",
            "messageBody": "Minor updates on DegreePlannerCard Styles:\n\n- Preference Height to 120\n\nIn addition, let\u0027s removes \u0027StyleFormatCell\u0027 method and let the\n\u0027DarkTheme\u0027 handles all the CSS for easier management.\n",
            "insertions": 1,
            "deletions": 16
          },
          {
            "hash": "a38110e5c03b5afae7f796e84eb62816c2a3313e",
            "messageTitle": "View: update degree planner related css",
            "messageBody": "Let\u0027s add some css styles regarding \u0027DegreePlannerListPanel\u0027 and\n\u0027DegreePlannerListCard\u0027 so that it is easier to update them on\nfuture if anything needs to be modified.\n\nThere will be further update on UI css styles in future PRs. This\nwill be temporary CSS styles.\n",
            "insertions": 35,
            "deletions": 10
          },
          {
            "hash": "cae52fdae95e77ba10b682266e632c1e49e9add8",
            "messageTitle": "UI: update `DegreePlannerCard` to display module codes in sorted order (#118)",
            "messageBody": "`DegreePlannerCard` does not sort the module codes before displaying \r\nthem.\r\n\r\nWhenever a module code within `DegreePlannerCard` is updated, the module\r\ncode may \u0027jump\u0027 around randomly, which makes the UI feel unintuitive.\r\n\r\nLet\u0027s update `DegreePlannerCard` so that it will sort the modules codes \r\nbefore displaying them.",
            "insertions": 5,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 0,
        "date": "2019-03-26",
        "commitResults": [
          {
            "hash": "299db7d08fad6db7da588ad499627a89a283efb0",
            "messageTitle": "DeveloperGuide: update implementation for \u0027PlannerList\u0027 (#102)",
            "messageBody": "Let\u0027s update DeveloperGuide to include \u0027PlannerList\u0027 which is to\r\nbe updated in the future.",
            "insertions": 47,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 556,
        "deletions": 14,
        "date": "2019-03-31",
        "commitResults": [
          {
            "hash": "817f453f345daec798a55e7b79d431a642c2f8ba",
            "messageTitle": "Logic: update to handle \u0027planner_move\u0027 command",
            "messageBody": "To implement the command, the following classes are created in order\nto process the logic flow for the command:\n\n- PlannerMoveCommand: handles the logic and checks to which\n  degree plan has the specified data exists to carry out the move of\n  degree plan from source degree plan to destination degree plan\n\n- PlannerMoveCommandParser: parses the user input for\n  \u0027PlannerMoveCommand\u0027 to use\n\n- AddressBookParser: allows the application to take in \u0027planner_move\u0027\n  command\n\n- CliSyntax: add prefixes for year and semester are added to be used\n\n- ParserUtil: add methods to parse year and semester\n",
            "insertions": 204,
            "deletions": 0
          },
          {
            "hash": "39cd71cac0bfd52996e965785c4cec68e6b1596d",
            "messageTitle": "Model: update to handle \u0027planner_move\u0027 command",
            "messageBody": "To implement the command, the following classes are created in model\nto help the process of executing \u0027planner_move\u0027 command by including\nmethod that return \u0027DegreePlanner\u0027 object based code provided.\n",
            "insertions": 33,
            "deletions": 1
          },
          {
            "hash": "297fa2eeddf6231403adb597ad11b72e427e9beb",
            "messageTitle": "Test: update to include test for \u0027planner_move\u0027 command",
            "messageBody": "In order to implement \u0027planner_move\u0027 in correct manner, test cases\nare needed to carry out checks.\n\nTo allow more variety of checks to be carried out\ntypicalDegreePlannerAddressBook needs to be modified to exclude\nYear 4 Semester 1 and Year 4 Semester 2 degree planners.\n\nLet\u0027s add variety of test cases for \u0027planner_move\u0027 and let methods\ncreated to help carry out \u0027planner_move\u0027 to be included in test.\n\nLet\u0027s also remove Year 4 degree planners mentioned to support more\ntest cases for \u0027planner_move\u0027.\n",
            "insertions": 319,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 99,
        "deletions": 19,
        "date": "2019-04-01",
        "commitResults": [
          {
            "hash": "b86f5fd441ede00d696ae0be2617713f373cf612",
            "messageTitle": "docs/UserGuide: update \u0027planner_move\u0027 command (#145)",
            "messageBody": "\u0027planner_move\u0027 command is implemented.\r\n\r\nLet\u0027s update UserGuide accordingly to reflect the changes.",
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "f86ae2a3d2ce2253d3b3bf9efd5063a65b77c520",
            "messageTitle": "docs/DeveloperGuide: update \u0027planner_move\u0027 command (#154)",
            "messageBody": "Currently, DeveloperGuide is lacks information on \u0027planner_move\u0027\r\ncommand.\r\n\r\nLet\u0027s update DeveloperGuide to include more information so that\r\nthe readers will be able to have better idea about \u0027planner_move\u0027\r\ncommand.",
            "insertions": 90,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 152,
        "deletions": 153,
        "date": "2019-04-02",
        "commitResults": [
          {
            "hash": "8f5b1379a078a254ed0cb2c26593f379c6fa00a6",
            "messageTitle": "docs/DeveloperGuide: update minor styles and formats (#159)",
            "messageBody": "Currently, section \u00273. Implementaion\u0027 is not ordered properly.\r\nIn addition, \u0027Requirement Add command\u0027 and \u0027Requirement List command\u0027\r\nare not consistent with others which uses \u0027Feature\u0027 instead of\r\n\u0027Command\u0027.\r\n\r\nLet\u0027s update the developer guide by changing \u0027Requirement Add command\u0027\r\nand \u0027Requirement List Command\u0027 to \u0027Requirement Add Feature\u0027 and\r\n\u0027Requirement Add Feature\u0027 respectively. Moreover, let\u0027s also reorder\r\nthe sequence in the section 3 to improve  the flow of contents.",
            "insertions": 152,
            "deletions": 153
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 3,
        "date": "2019-04-08",
        "commitResults": [
          {
            "hash": "0ea4ce8c4b8cec8d5b136f7d912749ef59e86bd8",
            "messageTitle": "UI: update `DegreePlannerCard` to indicate `Special Semester Term` (#198)",
            "messageBody": "UI: update `DegreePlannerCard` to indicate `Special Semester Term`\r\n\r\nThe application UI displays Semesters 3 and 4, but does not indicate \r\nthat Semesters 3 and 4 are special semester terms 1 and 2 respectively.\r\n\r\nThis may confuse users who are unfamiliar with our application, as we \r\nuse 3 and 4 to indicate special semesters terms 1 and 2 respectively. \r\n\r\nLet\u0027s update the UI to indicate special semester terms as:\r\n* `Semester 3 (Special Semester Term 1)` instead of `Semester: 3`\r\n* `Semester 4 (Special Semester Term 2)` instead of `Semester: 4`",
            "insertions": 12,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 89,
        "deletions": 94,
        "date": "2019-04-12",
        "commitResults": [
          {
            "hash": "842bf2374663ab1411a964b1a3c6cef14e0ba64c",
            "messageTitle": "Logic: Refactor \u0027planner_list_all\u0027 to \u0027planner_list\u0027",
            "messageBody": "After the discussion, we decided to refactor original \u0027planner_list\u0027\nto \u0027planner_show\u0027.\n\nIn order to be consistent with \u0027list\u0027 command, let\u0027s refactor the\ncurrent \u0027planner_list_all\u0027 command to \u0027planner_list\u0027.\n\nThis consistency will allow a user to easily perceive the command\nusage and less likely to cause the confusion when trying to figure\nout the command for listing the degree plan.\n\nIn addition, let\u0027s update \u0027planner_list\u0027 to utilize\n \u0027DegreePlanner:toString\u0027 method instead of current method using\n\u0027StringBuilder\u0027 since the format for \u0027DegreePlanner:toString\u0027 was\nrefined to print each \u0027DegreePlanner\u0027 nicely.\n",
            "insertions": 34,
            "deletions": 45
          },
          {
            "hash": "bea6de78bf7c9b4dbe30677a6d046f9ef32665f0",
            "messageTitle": "Test: update for \u0027planner_list\u0027",
            "messageBody": "Apart from the refactores, \u0027planner_list\u0027 now makes use of the\n\u0027DegreePlanner:toString\u0027 method to print out the messages.\n\nLet\u0027s add more test cases and update the current test cases for\nrefactored and updated \u0027planner_list\u0027.\n\nIn addition, let\u0027s add some methods in \u0027ModelHelper\u0027 and\n\u0027ApplicationSystemTest\u0027 to allow other \u0027DegreePlanner\u0027 related\nsystem tests to use.\n",
            "insertions": 55,
            "deletions": 49
          }
        ]
      },
      {
        "insertions": 1536,
        "deletions": 228,
        "date": "2019-04-14",
        "commitResults": [
          {
            "hash": "ecbb5c10f1dbe3192bed57bdb2dc933dc4ecaba6",
            "messageTitle": "Model: add predicate classes to test \u0027Year\u0027 and \u0027Semester\u0027",
            "messageBody": "Currently, there are no predicate classes to test \u0027Year\u0027 and \u0027Semester\u0027.\n\nIn order to filter \u0027DegreePlanner\u0027 with predicates, we will need those\nclasses.\n\nHence, let\u0027s add the following classes to allow the filtering:\n* SemesterContainsKeywordPredicate\n* YearContainsKeywordPredicate\n",
            "insertions": 70,
            "deletions": 0
          },
          {
            "hash": "52a0dda2869144c7307c83c497854f9dcd34a734",
            "messageTitle": "Logic: add \u0027planner_show\u0027 command",
            "messageBody": "Currently, the application does not support \u0027planner_show\u0027 command.\nMoreover, \u0027BooleanExpressionParser\u0027 does not handle prefixes for \u0027Year\u0027\nand \u0027Semester\u0027.\n\nLet\u0027s carry out the following to support \u0027planner_show\u0027 command:\n* \u0027PlannerShowCommand\u0027 class to carry out \u0027planner_show\u0027 command\n* \u0027PlannerShowCommandParser\u0027 class to allow parsing arguments\n  for \u0027PlannerShowCommand\u0027\n* \u0027BooleanExpressionParser\u0027 needs to be updated to handle prefixes\n  for \u0027Year\u0027 and \u0027Semester\u0027\n* \u0027CommandParser\u0027 is updated to include \u0027planner_show\u0027 command\n",
            "insertions": 154,
            "deletions": 2
          },
          {
            "hash": "700e621c808dec0bb55eab5fc36913465e368a59",
            "messageTitle": "Test: add tests for \u0027Year\u0027 and \u0027Semester\u0027 predicates class",
            "messageBody": "Let\u0027s update test to include test cases for the following classes:\n* \u0027YearContainsKeywordPredicate\u0027\n* \u0027SemesterContainsKeywordPredicate\u0027\n",
            "insertions": 101,
            "deletions": 0
          },
          {
            "hash": "00b0d09dd2437b8d1b1f819c271a77dbcd79fb4d",
            "messageTitle": "TestUtil: update to allow using variables in other classes",
            "messageBody": "Currently \u0027TypicalDegreePlanners\u0027 does not allow utilizing of its\nvariables (e.g. YEAR_1_SEMESTER_1) as these variables are \u0027private\u0027.\n\nLet\u0027s update these variables from \u0027private\u0027 to \u0027public\u0027 so that\nit can be used in test cases for other classes such as \u0027planner_show\u0027.\n",
            "insertions": 30,
            "deletions": 13
          },
          {
            "hash": "4f9a800ea2598d5bd79641a1c781c83c1e0a9a49",
            "messageTitle": "Test: add test cases for \u0027planner_show\u0027",
            "messageBody": "Let\u0027s add tests cases for \u0027PlannerShowCommand\u0027 as well as\n\u0027PlannerShowCommandParser\u0027 and update \u0027CommandParserTest\u0027 to include\ntest case for \u0027planner_show\u0027 command.\n",
            "insertions": 237,
            "deletions": 0
          },
          {
            "hash": "1bc4468057d89578f5e5b58a207ad25b40a0b020",
            "messageTitle": "Logic: update \u0027planner_move\u0027 to handle co-requisites",
            "messageBody": "The application allows the user to set co-requisites to modules.\nHowever, \u0027planner_move\u0027 does not handle co-requisites.\nHence, the user has to move the codes that shares co-requisites\nmanually.\n\nLet\u0027s enhance \u0027planner_move\u0027 command by allowing it to handle\nco-requisites so that when a module is moved, its co-requisites are\nmoved along if they exist in the degree plan.\n",
            "insertions": 59,
            "deletions": 23
          },
          {
            "hash": "181b24e3fcb847d3c7485740bb4ecd47652060e0",
            "messageTitle": "Model: add method to help in carrying out handling of co-requisites",
            "messageBody": "Let\u0027s add a method \u0027moveModuleBetweenPlanner\u0027 that takes in \u0027code\u0027\nto allow \u0027planner_move\u0027 command to handle co-requisites.\n",
            "insertions": 50,
            "deletions": 2
          },
          {
            "hash": "ed22a52fa272b0c623ca762922e9932dbc4370e7",
            "messageTitle": "Test: update test cases for \u0027planner_move\u0027 command",
            "messageBody": "There has been changes to \u0027planner_move\u0027 command in the process of\nenhancement to handle co-requisite.\n\nLet\u0027s update test cases for \u0027planner_move\u0027 command to suite to\nthe changes.\n\nNote: \u0027TypicalModules\u0027 and \u0027typicalModulesList\u0027 are modified to\nallow more test for \u0027planner_move\u0027.\n",
            "insertions": 78,
            "deletions": 34
          },
          {
            "hash": "d9422e7ed194827187d438c411cb2be7edcb342d",
            "messageTitle": "test/model: add unit tests for `DegreePlanner`-related classes (#209)",
            "messageBody": "Currently, there is no tests for `DegreePlanner`, `Semester`, `Year`\r\nand `UniqueDegreePlannerList` classes.\r\n\r\nLet\u0027s add the abovementioned classes to cover different test cases.",
            "insertions": 339,
            "deletions": 0
          },
          {
            "hash": "3ae9043cccb83c03435dad7a33c8258177c9ca76",
            "messageTitle": "UserGuide: update \u0027planner_move\u0027, \u0027planner_list\u0027 and \u0027planner_show\u0027\u0027 (#227)",
            "messageBody": "Let\u0027s update the user guide to match with the updates on the\r\nfeatures.\r\n\r\nNote: After the discussion, there has been refactoring from:\r\n\r\n* \u0027planner_list\u0027 to \u0027planner_show\u0027\r\n* \u0027planner_list_all\u0027 to \u0027planner_list\u0027",
            "insertions": 186,
            "deletions": 56
          },
          {
            "hash": "b9f9d63c6b7aebaf95c8374f29fb297e37e66063",
            "messageTitle": "PPP: update truegitnovice (#238)",
            "messageBody": "",
            "insertions": 54,
            "deletions": 27
          },
          {
            "hash": "b1ddba543db71df1266ff0f0b99bbbcc9fbb47b4",
            "messageTitle": "DeveloperGuide: update \u0027planner_move\u0027, \u0027planner_list\u0027, \u0027planner_show\u0027\u0027 (#235)",
            "messageBody": "",
            "insertions": 178,
            "deletions": 71
          }
        ]
      },
      {
        "insertions": 109,
        "deletions": 49,
        "date": "2019-04-15",
        "commitResults": [
          {
            "hash": "92c61d613d38cd98d2687f1234a273874d59c3cc",
            "messageTitle": "docs/DeveloperGuide: update UI Componenet Diagram (#242)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          },
          {
            "hash": "283d05e89030520f8dc465a50afc7585a8a1170a",
            "messageTitle": "Update PPP: truegitnovice (#250)",
            "messageBody": "Let\u0027s update the personal portfolio to reflect current changes.",
            "insertions": 108,
            "deletions": 45
          }
        ]
      }
    ],
    "WendyBaiYunwei": [
      {
        "insertions": 77,
        "deletions": 5,
        "date": "2019-02-25",
        "commitResults": [
          {
            "hash": "07d02595990ba7b4c012b14166cfc6132ec3d663",
            "messageTitle": "AboutUs: add Bai Yunwei\u0027s details (#13)",
            "messageBody": "* AboutUs: add Bai Yunwei\u0027s details\r\n\r\n* AboutUs: add Yunwei image\r\n\r\n* AboutUs: add team template\r\n",
            "insertions": 77,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 0,
        "date": "2019-03-03",
        "commitResults": [
          {
            "hash": "cc7189d9ed97449debb61d8e096b9a0bf1604f00",
            "messageTitle": "UserGuide: add planner-related command usage and description (#25)",
            "messageBody": "We plan to introduce the following commands into PlanWithEase:\r\n* `planner_add`: Add a module to the degree planner\r\n* `planner_delete`: Delete a module from the degree planner\r\n* `planner_move`: Move a module in the planner\r\n* `planner_suggest`: Suggest available modules to take\r\n\r\nLet\u0027s update the User Guide to include the usage of the above commands \r\nso that users know how to use the planner-related commands.",
            "insertions": 65,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 208,
        "deletions": 32,
        "date": "2019-04-01",
        "commitResults": [
          {
            "hash": "bbb7688d6c24082d227503e4e94d08ca49527216",
            "messageTitle": "[#80] Logic/commands: implement `planner_add` command (#109)",
            "messageBody": "Our application does not allow users to add modules to the degree plan.\n\nThis makes it impossible for users to assign modules to any semesters of\nthe degree plan.\n\nLet\u0027s add `planner_add` command to allow users to enable users to add\nmodules to the degree plan.\n",
            "insertions": 157,
            "deletions": 2
          },
          {
            "hash": "ab02a0adcee8308e224fd6691f6db4c15da54dd1",
            "messageTitle": "docs/UserGuide: update `planner_add` and `planner_delete` (#128)",
            "messageBody": "Let\u0027s update the `planner_add` and `planner_delete` examples and command\r\nusage, as well as rename `planner_delete` to `planner_remove`.",
            "insertions": 27,
            "deletions": 18
          },
          {
            "hash": "43c148fe5fe36c55ca7f3357dedc8ad6754cbba9",
            "messageTitle": "developer guide: amend planner_add and planner_delete (#127)",
            "messageBody": "Since the information regarding `planner_add` and `planner_delete`,\r\nlet\u0027s update it.",
            "insertions": 24,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 1139,
        "deletions": 71,
        "date": "2019-04-14",
        "commitResults": [
          {
            "hash": "6eeb8e2c1aa85df0d6b90a883898b9b03af950eb",
            "messageTitle": "Logic/commands: improve logic checks for `planner_add` (#161)",
            "messageBody": "`planner_add` command does not automatically add co-requisites in when \r\nadding modules, and also does not check if the modules are offered in \r\nthe semester before adding them into the degree plan.\r\n\r\nLet\u0027s make `planner_add` support the above, and implement unit tests to \r\nensure behaviour of the `planner_add` command is correct.",
            "insertions": 377,
            "deletions": 18
          },
          {
            "hash": "3954287ccbc68ae72c1eecb37ea7c5b9f90073f9",
            "messageTitle": "[#160] Logic/commands: implement `planner_remove` command (#162)",
            "messageBody": "Users can add/move modules around the degree plan freely, but are unable\r\nto remove modules from the degree plan.\r\n\r\nLet\u0027s implement planner_remove to enable the users to remove module(s) \r\nand their co-requisite(s) from the degree plan.",
            "insertions": 318,
            "deletions": 0
          },
          {
            "hash": "0abdb78b4a74139b0a976839524dc9c87bfde112",
            "messageTitle": "[#191] Logic/commands: implement `planner_suggest` command (#192)",
            "messageBody": "Users may not know what module(s) to put in the degree plan. \r\n\r\nLet\u0027s implement `planner_suggest` to recommend module(s) users can add \r\nto the degree plan.\r\n\r\n* `planner_suggest` requires users to input desirable credits and tags, \r\nand modules with the highest number of matching tags and does not exist \r\nin the degree plan will be suggested first. \r\n* The modules with closest credits will be suggested if there is a tie. \r\n* Tag-matching is prioritized in the recommendation; if there is no tag \r\nmatched, no module will be shown.\r\n* `tag` is optional parameter. If no `tag` is in input, the \r\nrecommendation will be purely based on credits.\r\n* Modules with matching tags and credits that are not in the degree plan\r\nare given as supplementary information.\r\n* User Guide will be updated at a later time.",
            "insertions": 354,
            "deletions": 0
          },
          {
            "hash": "b839d2908198510637e7a75dbb03522a7abf688f",
            "messageTitle": "Logic/commands: simplify `planner_add` implementation (#225)",
            "messageBody": "Let\u0027s simplify `planner_add` implementation by making \r\n`PlannerAddCommand` and `PlannerAddCommandTest` to use \r\n`StringUtil#joinStreamAsString(...)` instead of having to map stream \r\nelements to string and collecting the results using \r\n`Collectors#joining(...)`.",
            "insertions": 15,
            "deletions": 24
          },
          {
            "hash": "1d565bc6962e271d1cc3d4e9a8498ad13f7f1d44",
            "messageTitle": "User guide: update ug for planner add, remove and suggest (#215)",
            "messageBody": "Updating the user guide for \u0027planner_add\u0027, \u0027planner_remove\u0027 and \u0027planner_suggest\u0027",
            "insertions": 75,
            "deletions": 29
          }
        ]
      },
      {
        "insertions": 315,
        "deletions": 79,
        "date": "2019-04-15",
        "commitResults": [
          {
            "hash": "4de5871298887644fa39f09e0b0975034faab440",
            "messageTitle": "docs/DeveloperGuide: update planner add, remove and suggest (#240)",
            "messageBody": "",
            "insertions": 225,
            "deletions": 1
          },
          {
            "hash": "7269a3c739654ed82193ea86e4e3c1a60fe9f84f",
            "messageTitle": "Update wendybaiyunwei.adoc (#245)",
            "messageBody": "",
            "insertions": 78,
            "deletions": 40
          },
          {
            "hash": "705eb45b6ad1678f61b2f28987e07ffabed5eb94",
            "messageTitle": "Update wendybaiyunwei.adoc (#249)",
            "messageBody": "",
            "insertions": 8,
            "deletions": 35
          },
          {
            "hash": "11bb02ba65b0c3aa16a74fddd1ac511dca0204c6",
            "messageTitle": "planner_remove: fix bug in removing co-requisite module (#254)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          }
        ]
      }
    ],
    "Creastery": [
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2019-02-23",
        "commitResults": [
          {
            "hash": "84dc38d68286cf0d42308e21fec20d5c25a9fe56",
            "messageTitle": "README.adoc: update CI badges (#12)",
            "messageBody": "Let\u0027s update the CI badges on README.adoc to point to the correct CI\r\nURLs for our project.",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2057,
        "deletions": 2055,
        "date": "2019-02-25",
        "commitResults": [
          {
            "hash": "93d3b72e0561183338efe13e588f2a56fe2f97d5",
            "messageTitle": "Model: refactor package `person` to `module`",
            "messageBody": "We are going to morph a `persons`-oriented Address Book application to a\n`modules`-oriented Degree Planner application.\n\nBefore we can start tweaking existing features and implementing new\nfeatures to suit our degree planner application, we need to refactor the\ncodebase so that we are working with `modules` instead of `persons`.\n\nAs the codebase is quite huge, we carry out the refactoring in multiple\nstages incrementally to ensure the correctness of the refactoring done.\n\nIn the first phase of refactoring, we retain all existing\nfunctionalities, but avoid updating any variables (such as strings or\nvariable names referenced by Jackson JSON processor for serialization)\nor filenames that are referenced by unit tests so as to allow all unit\ntests to continue to pass.\n\nIn the second phase of refactoring, we update all variables and\nfilenames, and amend unit tests accordingly so that all unit tests\ncontinue to pass.\n\nIn the third phase of refactoring, we update the documentations\n(e.g. User Guide and Developer Guide).\n\nAs an initial step of the first refactoring phase, let\u0027s rename the\nmodel package `person` to `module`.\n",
            "insertions": 132,
            "deletions": 132
          },
          {
            "hash": "3c950b6b63fbf04f336f99057ba16a014b26fece",
            "messageTitle": "Model: refactor class `Person` to `Module`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class `Person` to\n`Module` and:\n* refactor class method names containing `*person*` to `*module*`\n* refactor class attributes names containing `*person*` to `*module*`\n* refactor variable names containing `*person*` to `*module*`\n* replace `*person*` with `*module*` in comments\n* cascade the changes to all affected classes\n",
            "insertions": 688,
            "deletions": 688
          },
          {
            "hash": "7e68691f9bf66a8de5459e1819ff9b77b7d7c4b0",
            "messageTitle": "DuplicatePersonException class: refactor to `DuplicateModuleException`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class\n`DuplicatePersonException` to `DuplicateModuleException` and:\n* refactor class method names containing `*person*` to `*module*`\n* replace `*person*` with `*module*` in comments\n",
            "insertions": 21,
            "deletions": 21
          },
          {
            "hash": "5e3b7594bb6b35e948d27c551e21d137c7436121",
            "messageTitle": "PersonNotFoundException class: refactor to `ModuleNotFoundException`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class\n`PersonNotFoundException` to `ModuleNotFoundException` and cascade the\nchanges to all affected classes.\n",
            "insertions": 11,
            "deletions": 11
          },
          {
            "hash": "2537834403ecffe610c7c46dd9e9d9a8b8fdf76f",
            "messageTitle": "Model: refactor class `UniquePersonList` to `UniqueModuleList`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class\n`UniquePersonList` to `UniqueModuleList` and:\n* refactor class method names containing `*person*` to `*module*`\n* refactor class attributes names containing `*person*` to `*module*`\n* refactor variable names containing `*person*` to `*module*`\n* refactor respective unit testing class name\n* replace `*person*` with `*module*` in comments\n* cascade the changes to all affected classes\n",
            "insertions": 77,
            "deletions": 77
          },
          {
            "hash": "70c729e9bc11a6959aa124e6d57dffb4977e60e0",
            "messageTitle": "Model: refactor `Model` interface",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `Model` interface by:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring class attributes names containing `*person*` to `*module*`\n* refactoring variable names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n",
            "insertions": 159,
            "deletions": 159
          },
          {
            "hash": "6de5b9e5845952357bd08959f13ec82cbea8aa4e",
            "messageTitle": "ReadOnlyAddressBook: refactor `getPersonList()` to `getModuleList()`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`ReadOnlyAddressBook#getPersonList()` to `getModuleList()` and:\n* replace `*person*` with `*module*` in comments\n* cascade the changes to all affected classes\n",
            "insertions": 25,
            "deletions": 25
          },
          {
            "hash": "1e6790588e064eba10ee9e42cb15be4a0e7b3834",
            "messageTitle": "Logic: refactor `Logic` interface method names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `Logic` interface by:\n* refactoring interface method names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n",
            "insertions": 11,
            "deletions": 11
          },
          {
            "hash": "c15145140c4c797e5999618c80d3b8b3f1d2cba3",
            "messageTitle": "commons/core: refactor `Messages` class attribute names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `Messages` class by:\n* refactoring class attribute names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n",
            "insertions": 31,
            "deletions": 31
          },
          {
            "hash": "d648d95c1267c3c953c5dbba923833f34940329f",
            "messageTitle": "Logic/commands: refactor `AddCommand` class attributes names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `AddCommand` class\nby:\n* refactoring class attribute names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n",
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "fe1aefb432b1733810059ac2b7d93d18179c027f",
            "messageTitle": "Logic/commands: refactor `DeleteCommand` class attribute names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `DeleteCommand` class\nby:\n* refactoring class attribute names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "d35b939add761c99f19c80062cf6204a53dc16ea",
            "messageTitle": "Logic/commands: refactor `EditCommand#EditPersonDescriptor` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`EditCommand#EditPersonDescriptor` nested class to\n`EditCommand#EditModuleDescriptor` and:\n* refactor class method names containing `*person*` to `*module*`\n* refactor class attributes names containing `*person*` to `*module*`\n* refactor variable names containing `*person*` to `*module*`\n* cascade the changes to all affected classes\n",
            "insertions": 73,
            "deletions": 70
          },
          {
            "hash": "39d79ff69aa75abd7d97cac3bd1e472fe261fb9b",
            "messageTitle": "Logic/commands: refactor `EditCommand` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `EditCommand` class\nby:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring class attributes names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n",
            "insertions": 18,
            "deletions": 18
          },
          {
            "hash": "dc4d61e67d0293a547505ad436da8a8149fdfdb7",
            "messageTitle": "Logic/commands: refactor `FindCommand` class comments",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `FindCommand` class\nby replacing `*person*` with `*module*` in comments.\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "790ae2965537c2e402515dc99e37935cfe5ecc8a",
            "messageTitle": "Logic/commands: refactor `ListCommand` class comments",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `ListCommand` class\nby replacing `*person*` with `*module*` in comments.\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d5493c42429f9ba32b249b69043869ffdb3a2677",
            "messageTitle": "Logic/commands: refactor `SelectCommand` class attributes",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `SelectCommand` class\nby:\n* refactoring class attribute names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "9746b2fb80a0013a41476dc86c577a4a224487cb",
            "messageTitle": "Model/util: refactor `SampleDataUtil#getSamplePersons()`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`SampleDataUtil#getSamplePersons()` to `getSampleModules()` and cascade\nthe changes to all affected classes.\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "f550a976ac82ef70b46e141928e4685f9108dd6f",
            "messageTitle": "Model: refactor `AddressBook` class methods",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `AddressBook` class\nby:\n* refactoring class attribute names containing `*person*` to `*module*`\n* replacing `*person*` with `*module*` in comments\n* cascading the changes to all affected classes\n",
            "insertions": 26,
            "deletions": 26
          },
          {
            "hash": "3cf9e66d52ca98105a42441168557d3a3fe8cf5f",
            "messageTitle": "Model: refactor `ModelManager` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `ModelManager` class\nby:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring class attributes names containing `*person*` to `*module*`\n* refactoring variable names containing `*person*` to `*module*`\n* replacing `*person*` with `*module*` in comments\n",
            "insertions": 19,
            "deletions": 19
          },
          {
            "hash": "ef10d4614cf1629e1b8a35c6eaf392b5413d06d4",
            "messageTitle": "Storage: refactor class `JsonAdaptedPerson` to `JsonAdaptedModule`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class\n`JsonAdaptedPerson` to `JsonAdaptedModule` and:\n* refactor variable names containing `*person*` to `*module*`\n* cascade the changes to all affected classes\n",
            "insertions": 29,
            "deletions": 29
          },
          {
            "hash": "62c7e168da00f31c70457d15bf5a90681e92b67c",
            "messageTitle": "Storage: refactor `JsonSerializableAddressBook` class attributes",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`JsonSerializableAddressBook` class by:\n* refactoring class attribute names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n\nNote: List\u003cJsonAdaptedModule\u003e `persons` remains unchanged in this commit\nas it will affect how Jackson serializes the AddressBook into JSON\nformat, causing unit tests to fail. As such, the class attribute\n`persons` will only be refactored in the second phase of refactoring.\n",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "8302c28a58793c23e2c8cb8816ea8ba007bcadda",
            "messageTitle": "UI: refactor `BrowserPanel` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `BrowserPanel` class\nby:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring variable names containing `*person*` to `*module*`\n",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "bf72f74414cabc3e599fa1a81e5bf4344eb3c675",
            "messageTitle": "UI: refactor class `PersonCard` to `ModuleCard`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class `PersonCard` to\n`ModuleCard` and cascade the changes to all affected classes.\n",
            "insertions": 28,
            "deletions": 28
          },
          {
            "hash": "0230559fd548b8dbc3b2495c29c2d9b2a0658a0f",
            "messageTitle": "UI: refactor class `PersonListPanel` to `ModuleListPanel`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class\n`PersonListPanel` to `ModuleListPanel` and:\n* replace `*person*` with `*module*` in comments\n* cascade the changes to all affected classes\n\nNote: ListView\u003cModule\u003e `personListView` remains unchanged in this commit\nas it will affect how JavaFX renders the FXML, which might cause unit\ntests to fail. As such, this class attribute `personListView` will only\nbe refactored in the second phase of refactoring.\n",
            "insertions": 29,
            "deletions": 29
          },
          {
            "hash": "d844a0e823a0c934165a50122adf381145df40bb",
            "messageTitle": "guitests: refactor class `PersonCardHandle` to `ModuleCardHandle`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class\n`PersonCardHandle` to `ModuleCardHandle` and:\n* replace `*person*` with `*module*` in comments\n* cascade the changes to all affected classes\n",
            "insertions": 18,
            "deletions": 18
          },
          {
            "hash": "62d6df3aa5c1561b8d642f41ac7006cc4f9107b4",
            "messageTitle": "guitests: refactor `PersonListPanelHandle` to `ModuleListPanelHandle`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`PersonListPanelHandle` class to `ModuleListPanelHandle` and:\n* refactoring class method names containing `*person*` to `*module*`\n* refactor class attributes names containing `*person*` to `*module*`\n* replacing `*person*` with `*module*` in comments\n* cascading the changes to all affected classes\n",
            "insertions": 48,
            "deletions": 48
          },
          {
            "hash": "e24fddc761980c9c6e37bcdace68c6e744322381",
            "messageTitle": "test/commons: refactor `IndexTest` class variable names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `fifthPersonIndex` to\n`fifthModuleIndex`.\n",
            "insertions": 7,
            "deletions": 7
          },
          {
            "hash": "a15e29159551e8b3d5ed273418ec2b81d4e426f4",
            "messageTitle": "test/testutil: refactor `AddressBookBuilder#withPerson(...)`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`AddressBookBuilder#withPerson(..)` to `withModule(...)` and:\n* replace `*person*` with `*module*` in comments\n* cascade the changes to all affected classes\n",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "52dbb3afbe6e9a6b54f84c469b24bc59b44866b8",
            "messageTitle": "test/testutil: refactor class `PersonBuilder` to `ModuleBuilder`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class `PersonBuilder`\nto `ModuleBuilder` and cascade the changes to all affected classes.\n",
            "insertions": 88,
            "deletions": 89
          },
          {
            "hash": "234bac232a799da8a31da2e409d0af4ba34d3743",
            "messageTitle": "test/testutil: refactor class `PersonUtil` to `ModuleUtil`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class `PersonUtil`\nto `ModuleUtil` and cascade the changes to all affected classes.\n",
            "insertions": 18,
            "deletions": 18
          },
          {
            "hash": "e767777df58cf6abef93a0866bf2f73ba0552c10",
            "messageTitle": "test/testutil: refactor `TestUtil#getPerson(...)` to `getModule(...)`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class\n`TestUtil#getPerson(...)` to `getModule(...)` and cascade the changes to\nall affected classes.\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "37928ef76adc616fea76a347a9fbabbf59dc7a27",
            "messageTitle": "test/testutil: refactor `TypicalIndexes` class attributes",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `TypicalIndexes`\nclass by:\n* refactoring class attribute names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n",
            "insertions": 115,
            "deletions": 115
          },
          {
            "hash": "cdf0f80874ca581abec4cb36d503ded170d3a6db",
            "messageTitle": "test/testutil: refactor class `TypicalPersons` to `TypicalModules`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor class\n`TypicalPersons` to `TypicalModules` and cascade the changes to all\naffected classes.\n",
            "insertions": 63,
            "deletions": 63
          },
          {
            "hash": "2c72dcc7d0cfa786fa90c7cd7a6ee45112d45041",
            "messageTitle": "test/testutil: refactor `EditPersonDescriptorBuilder` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`EditPersonDescriptorBuilder` class to `EditModuleDescriptorBuilder` and\ncascade the changes to all affected classes.\n",
            "insertions": 43,
            "deletions": 43
          },
          {
            "hash": "648a1fb04df04eb1bd2e81affc2e923851153fbe",
            "messageTitle": "test/commands: refactor `AddCommand` and `AddCommandIntegrationTest`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `AddCommand` and\n`AddCommandIntegrationTest` classes by:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring class attributes names containing `*person*` to `*module*`\n* refactoring variable names containing `*person*` to `*module*`\n",
            "insertions": 14,
            "deletions": 14
          },
          {
            "hash": "96c2fc531daac657d7c9d24e525729acd10b03e2",
            "messageTitle": "test/commands: refactor `CommandTestUtil` class methods",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `CommandTestUtil`\nclass by:\n* refactoring class method names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n",
            "insertions": 28,
            "deletions": 28
          },
          {
            "hash": "8914b4305ba210e2d83556fd2a6c5fa79e7a829a",
            "messageTitle": "test/commands: refactor `DeleteCommandTest` class methods",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `DeleteCommandTest`\nclass by:\n* refactoring class method names containing `*person*` to `*module*`\n* replacing `*person*` with `*module*` in comments\n",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "c2a19061c666fcce7b44357e6bd2bbbf4622eb9d",
            "messageTitle": "test/commands: refactor `EditCommandTest` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `EditCommandTest`\nclass by:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring variable names containing `*person*` to `*module*`\n* replacing `*person*` with `*module*` in comments\n",
            "insertions": 12,
            "deletions": 12
          },
          {
            "hash": "01495a41ffcc5602c99e87ef60fd33edf40d2f3c",
            "messageTitle": "test/commands: refactor `FindCommandTest` class methods",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `FindCommandTest`\nclass by refactoring class method names containing `*person*` to\n`*module*`.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "0cd3d07413c0cd82c0100c5f35e9bce3f46acc6c",
            "messageTitle": "test/commands: refactor `SelectCommandTest` class variable names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `lastPersonIndex` to\n`lastModuleIndex`.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "9f939c6545e57dbffbf5563fd94519b1ac46532b",
            "messageTitle": "test/logic: refactor `LogicManagerTest` class methods",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `LogicManagerTest`\nclass by refactoring class method names containing `*person*` to\n`*module*`\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d4c6f88071b1adc053781b7e1785be660792f0e8",
            "messageTitle": "test/model: refactor class `PersonTest` to `ModuleTest`",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `PersonTest` class to\n`ModuleTest` by refactoring class method names containing `*person*` to\n`*module*`.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "e421b789d4299da536230ff288a189c99e2b1be1",
            "messageTitle": "test/model: refactor `LogicManagerListTest` class methods names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`UniqueModuleListTest` class by refactoring class method names containing\n`*person*` to `*module*`.\n",
            "insertions": 21,
            "deletions": 21
          },
          {
            "hash": "18ce8e5f0d3b72c25f6390ab8b1f7de1cebec671",
            "messageTitle": "test/model: refactor `AddressBookTest` class method names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `AddressBookTest`\nclass and refactor class method names containing `*person*` to\n`*module*`.\n",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "880df9637668fb03397865698f038dc0393d955e",
            "messageTitle": "test/model: refactor `ModelManagerTest` class method names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `ModelManagerTest`\nclass and refactor class method names containing `*person*` to\n`*module*`.\n",
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "322a7ba1c1e627102222c51bddce89c72020e26d",
            "messageTitle": "test/storage: refactor `JsonAdaptedModuleTest` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`JsonAdaptedModuleTest` class by:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring variable names containing `*person*` to `*module*`\n",
            "insertions": 21,
            "deletions": 21
          },
          {
            "hash": "5ebb195c45b0860b3224da284cdf949544d6a6f4",
            "messageTitle": "test/storage: refactor `JsonAddressBookStorageTest` class method names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`JsonAddressBookStorageTest` by refactoring method names containing\n`*person*` to `*module*`.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "c462314012aca05f516c5018a52fb1ca18aa7c6d",
            "messageTitle": "test/storage: refactor `JsonAddressBookStorageTest` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`JsonAddressBookStorageTest` class by:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring class attributes names containing `*person*` to `*module*`\n",
            "insertions": 11,
            "deletions": 11
          },
          {
            "hash": "f4bdddeb3c8d4b659f1ce4cc2323478a710eb2fc",
            "messageTitle": "test/ui: refactor `GuiTestAssert` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `GuiTestAssert` class\nby:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring variable names containing `*person*` to `*module*`\n* cascading the changes to all affected classes\n",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "76f756bb6ca9fb319171b360019b89dcd0679fd8",
            "messageTitle": "test/ui: refactor `BrowserPanelTest` class attributes",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`BrowserPanelTest` by refactoring class attribute names containing\n`*person*` to `*module*`.\n",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "37441d5e025ba8b4266bab24aec05e52010f04f8",
            "messageTitle": "test/ui: refactor `ModuleListPanelTest` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`ModuleListPanelTest` class by:\n* refactoring class attributes names containing `*person*` to `*module*`\n* refactoring variable names containing `*person*` to `*module*`\n* replacing `*person*` with `*module*` in comments\n",
            "insertions": 11,
            "deletions": 11
          },
          {
            "hash": "27f80a14834e85fb04c1cd47fe6e114aa1049f4c",
            "messageTitle": "systemtests: refactor `AddressBookSystemTest` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`AddressBookSystemTest` class by:\n* refactoring class method names containing `*person*` to `*module*`\n* replacing `*person*` with `*module*` in comments\n* cascading the changes to all affected classes\n",
            "insertions": 41,
            "deletions": 41
          },
          {
            "hash": "1b0f973dcd59828ccc71594609300996389d86e2",
            "messageTitle": "systemtests: refactor `DeleteCommandSystemTest` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`DeleteCommandSystemTest` class by:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring variable names containing `*person*` to `*module*`\n",
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "287102351033c2ab7057fe3b707aee3c9bfca87f",
            "messageTitle": "systemtests: refactor `FindCommandSystemTest` class comments",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`FindCommandSystemTest` class by replacing `*person*` with `*module*` in\ncomments.\n",
            "insertions": 19,
            "deletions": 19
          },
          {
            "hash": "e61b86ecd002efe5af0d98dc9214e94b5d945d32",
            "messageTitle": "systemtests: refactor `ModelHelper` class",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor `ModelHelper` class\nby:\n* refactoring class method names containing `*person*` to `*module*`\n* refactoring variable names containing `*person*` to `*module*`\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "490eb854df484e7d58dc413b777f0b2eb1b591b9",
            "messageTitle": "systemtests: refactor `SelectCommandSystemTest` class variable names",
            "messageBody": "We are in the first refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this first phase of refactoring, let\u0027s refactor\n`SelectCommandSystemTest` class by refactoring variable names containing\n`*person*` to `*module*`.\n",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 148,
        "deletions": 144,
        "date": "2019-02-26",
        "commitResults": [
          {
            "hash": "f74cf846b5c92680579e927efa1fae66c86b5199",
            "messageTitle": "UI: refactor `ModuleListPanel#moduleListView` class attribute name",
            "messageBody": "We are in the second refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this second phase of refactoring, let\u0027s refactor\n`ModuleListPanel#personListView` to `moduleListView` and cascade the\nchanges to all affected classes.\n",
            "insertions": 11,
            "deletions": 11
          },
          {
            "hash": "7d1a695749aebbf32f10f6de6fb21be99cbe0e6a",
            "messageTitle": "UI: refactor `MainWindow#personListPanelPlaceholder` class attribute",
            "messageBody": "We are in the second refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this second phase of refactoring, let\u0027s refactor\n`MainWindow#personListPanelPlaceholder` to `moduleListPanelPlaceholder`\nand cascade the changes to all affected classes.\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "9758c4f704677ac007519093472f12edea690d28",
            "messageTitle": "UI: refactor `PersonListCard.fxml` to `ModuleListCard.fxml`",
            "messageBody": "We are in the second refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this second phase of refactoring, let\u0027s refactor\n`PersonListCard.fxml` to `ModuleListCard.fxml` and cascade the changes\nto all affected classes.\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "c2f63f7d79356224cfc4acbf2abcb5b13e1251bd",
            "messageTitle": "UI: refactor `PersonListPanel.fxml` to `ModuleListPanel.fxml`",
            "messageBody": "We are in the second refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this second phase of refactoring, let\u0027s refactor\n`PersonListPanel.fxml` to `ModuleListPanel.fxml` and cascade the changes\nto all affected classes.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "69412ea6933e4d605796ee16ea64b4db7f4164e3",
            "messageTitle": "Storage: refactor `JsonSerializableAddressBook#persons` to `modules`",
            "messageBody": "We are in the second refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this second phase of refactoring, let\u0027s refactor\n`JsonSerializableAddressBook#persons` class attribute to `modules` and\nupdate all test files in `JsonAddressBookStorageTest` directory to\nreflect the change in naming of the Jackson JsonProperty.\n",
            "insertions": 11,
            "deletions": 11
          },
          {
            "hash": "7a08c44a842dbe3be7c5107de92dfa3aff67d116",
            "messageTitle": "test/data: refactor `JsonAddressBookStorageTest` JSON files",
            "messageBody": "We are in the second refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this second phase of refactoring, let\u0027s refactor the JSON test data\nfiles for `JsonAddressBookStorageTest` by:\n* refactoring JSON files to rename as `*module*` instead of `*person*`\n* replacing `*person*` with `*module*` in the file contents\n",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "8ef9aaff7042a9e9ed649adbf8f35262e9ab006a",
            "messageTitle": "test/data: refactor `JsonSerializableAddressBookTest` JSON files",
            "messageBody": "We are in the second refactoring phase of morphing `persons`-oriented\nAddress Book application to a `modules`-oriented Degree Planner\napplication.\n\nIn this second phase of refactoring, let\u0027s refactor the JSON test data\nfiles for `JsonSerializableAddressBookTest` by:\n* refactoring JSON files to rename as `*module*` instead of `*person*`\n* replacing `*person*` with `*module*` in the file contents\n",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "7b2f43d4eea68ea323a6970ec1037423fe12a317",
            "messageTitle": "Replace `*person*` with `*module*` in all string literals",
            "messageBody": "We are almost done with the second refactoring phase of morphing\n`persons`-oriented Address Book application to a `modules`-oriented\nDegree Planner application.\n\nLet\u0027s refactor all the string literals to replace `*person*` with\n`*module*` to complete the second refactoring phase.\n",
            "insertions": 21,
            "deletions": 21
          },
          {
            "hash": "480adca673527439462483d913644b6623f8eaf2",
            "messageTitle": "DeveloperGuide: rename filepaths of sequence diagrams",
            "messageBody": "We are in the third and final refactoring phase of morphing\n`persons`-oriented Address Book application to a `modules`-oriented\nDegree Planner application.\n\nLet\u0027s begin the third phase of refactoring by renaming the filepaths of\nsequence diagrams referenced by the Developer Guide.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "a51adf6d656523c1fded4452b06f203d5e42c281",
            "messageTitle": "docs: update diagrams and images",
            "messageBody": "We are in the third and final refactoring phase of morphing\n`persons`-oriented Address Book application to a `modules`-oriented\nDegree Planner application.\n\nIn this third phase of refactoring, let\u0027s update all the diagrams and\nimages shown in the Developer Guide to replace all `*person*` with\n`*module*`.\n",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "9b1ff3916513062fa65685acf3f52d03da4883c8",
            "messageTitle": "docs: replace `*person*` with `*module*` in User and Developer guides",
            "messageBody": "We are almost done with the third and final refactoring phase of\nmorphing `persons`-oriented Address Book application to a\n`modules`-oriented Degree Planner application.\n\nAs a final step of this third refactoring phase, let\u0027s update the User\nimages shown in the Developer Guide to replace all instances of\n`*person*` with `*module*`.\n",
            "insertions": 82,
            "deletions": 82
          },
          {
            "hash": "b44293109dbbe09e7ebe40f25cc13b8dda9ced6e",
            "messageTitle": "docs/DeveloperGuide: replace `*person*` with `*module*`",
            "messageBody": "Previously, we replaced all `*person*` with `*module*` in the\n`DeveloperGuide`. However, we left out `*people*`, which should be\nreplaced with `*modules*`.\n\nLet\u0027s update the `DeveloperGuide` to replace `*people*` with\n`*modules*`.\n",
            "insertions": 6,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 4,
        "date": "2019-02-27",
        "commitResults": [
          {
            "hash": "a2ee89edf56d9eb7cfaf52dadf157b8ed4cd79bb",
            "messageTitle": "README.adoc: update metadata badges (#23)",
            "messageBody": "Let\u0027s update the metadata badges on `README.adoc` to\r\n* make the badges look and feel consistent\r\n* add badge for Netlify Deploy Previews status\r\n* add badge for MIT License",
            "insertions": 6,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-02-28",
        "commitResults": [
          {
            "hash": "ab72d9c34be760f111d36dd2a1fa9f024f51fdfa",
            "messageTitle": "README.adoc: update URL for LICENSE file (#29)",
            "messageBody": "The URL for the LICENSE file is broken in the rendered GitHub Pages.\r\n\r\nLet\u0027s fix the broken URL by replacing it with a permanent link:\r\nhttps://github.com/cs2113-ay1819s2-t09-1/main/blob/master/LICENSE",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 684,
        "deletions": 681,
        "date": "2019-03-01",
        "commitResults": [
          {
            "hash": "7012b9be7909239117fb9ee008e03deb4c2c928f",
            "messageTitle": "Model: refactor class `Address` into `Code` (#27)",
            "messageBody": "`Module` class is lacking the following model classes:\r\n* `Code`\r\n* `Credits`\r\n* `Exempted`\r\n\r\nIn addition, it still has `person`-related model classes such as:\r\n* `Address`\r\n* `Email`\r\n* `Phone`\r\n\r\nTo simplify the process of introducing the model classes we lack, we can\r\ntune `persons`-related models into `modules`-related models through\r\nrefactoring.\r\n\r\nLet\u0027s refactor `Address` to `Code`, but retain its existing\r\nfunctionality and constraints, and:\r\n* refactor class method names containing `*address*` to `*code*`\r\n* refactor class attributes names containing `*address*` to `*code*`\r\n* refactor variable names containing `*address*` to `*code*`\r\n* replace `*address*` with `*code*` in comments\r\n* cascade the changes to all affected classes",
            "insertions": 319,
            "deletions": 319
          },
          {
            "hash": "5a22be6c5de705a1aff6f9982418717e2b667ac9",
            "messageTitle": "Model: refactor class `Phone` into `Credits` (#30)",
            "messageBody": "`Module` class is lacking the following model classes:\r\n* `Credits`\r\n* `Exempted`\r\n\r\nIn addition, it still has `person`-related model classes such as:\r\n* `Phone`\r\n* `Email`\r\n\r\nTo simplify the process of introducing the model classes we lack, we can\r\ntune `persons`-related models into `modules`-related models through\r\nrefactoring.\r\n\r\nLet\u0027s refactor `Phone` to `Credits`, but retain its existing\r\nfunctionality and constraints, and:\r\n* refactor class method names containing `*phone*` to `*credits*`\r\n* refactor class attributes names containing `*phone*` to `*credits*`\r\n* refactor variable names containing `*phone*` to `*credits*`\r\n* replace `*phone*` with `*credits*` in comments\r\n* cascade the changes to all affected classes",
            "insertions": 345,
            "deletions": 346
          },
          {
            "hash": "384938a22219d125887b68a9471b22216f9ab555",
            "messageTitle": "docs/AboutUs: add Ngo Wei Lin\u0027s details (#32)",
            "messageBody": "`About Us.adoc` does not include details of all team members in team T09-1.\r\n\r\nLet\u0027s update the documentation to include Ngo Wei Lin\u0027s details by:\r\n* adding his personal project portfolio template\r\n* adding his avatar image\r\n* updating his roles and responsibilities",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "8b912cc12f333c4c266b30d3342244384a811182",
            "messageTitle": "docs: cleanup `AboutUs` documentations (#33)",
            "messageBody": "`AboutUs.adoc` has multiple inconsistencies, such as:\r\n* using both HTTP and HTTPS URLs\r\n* most portfolios do not have a disclaimer for the placeholder contents\r\n\r\nAdditionally, unused avatar images were yet to removed.\r\n\r\nLet\u0027s cleanup `AboutUs` documentations by:\r\n* replacing `http` to `https` in all URLs\r\n* removing unused avatar images\r\n* updating all portfolio to include disclaimer for placeholder content",
            "insertions": 12,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 108,
        "deletions": 543,
        "date": "2019-03-02",
        "commitResults": [
          {
            "hash": "e96ddcf565626375fb2bfc9b5efed5ccbca497b9",
            "messageTitle": "README.adoc: update AppVeyor CI badge (#36)",
            "messageBody": "The URL for AppVeyor CI badge is not scoped to `master` branch builds.\r\n\r\nThis means that all AppVeyor CI builds (including Pull Requests) can\r\naffect the current AppVeyor build status reflected on the `README.adoc`.\r\n\r\nLet\u0027s fix the erroneous URL for the AppVeyor CI badge to scope it to\r\n`master` branch builds only.",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "86cde618574d6583e1ebc19ce2926a2ea60f12e8",
            "messageTitle": "Model: depreciate `Email` class (#37)",
            "messageBody": "`Email` is no longer required in our codebase, as it does not make sense\r\nfor a `Module` to have an `Email` attribute.\r\n\r\nLet\u0027s depreciate `Email` completely and cascade the changes to all\r\naffected classes and unit tests accordingly.",
            "insertions": 107,
            "deletions": 542
          }
        ]
      },
      {
        "insertions": 92,
        "deletions": 42,
        "date": "2019-03-03",
        "commitResults": [
          {
            "hash": "9daee9e6d3e4a9b5de697dec7d374f64467413ea",
            "messageTitle": "README.adoc: update Travis CI badge URL (#38)",
            "messageBody": "We renamed our GitHub organisation name from `cs2113-ay1819s2-t09-1` to\r\n`CS2113-AY1819S2-T09-1`.\r\n\r\nThis resulted in a change of the project URL on Travis, which also\r\naffected the Travis CI badge URL, causing the badge URL to point to an\r\nunknown repository (`cs2113-ay1819s2-t09-1/main`).\r\n\r\nLet\u0027s update the Travis CI badge URL so that it points to the correct\r\nrepository and show the correct build status again.",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "532fa833e209035edbe578ab8cce883519380970",
            "messageTitle": "Add `_reposense/config.json` to make repository RepoSense-compatible (#41)",
            "messageBody": "[#40] Add `_reposense/config.json` to make repository RepoSense-compatible (#41)",
            "insertions": 31,
            "deletions": 1
          },
          {
            "hash": "5a29d7d5bb9330f34aa40a3c785cf3ab48ba486c",
            "messageTitle": "README.adoc: update Coveralls badge URL (#42)",
            "messageBody": "We renamed our GitHub organisation name from `cs2113-ay1819s2-t09-1` to\r\n`CS2113-AY1819S2-T09-1`.\r\n\r\nThis resulted in a change of the project URL on Coveralls, which also\r\naffected the Coveralls badge URL, causing the badge URL to point to an\r\nunknown repository (`cs2113-ay1819s2-t09-1/main`).\r\n\r\nLet\u0027s update the Coveralls badge URL so that it points to the correct\r\nrepository and show the correct code coverage status again.",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e1b282098e0fb8ccea1cdb41492df8caf86214ec",
            "messageTitle": "Logic/parser: update prefixes in `CliSyntax`",
            "messageBody": "After the initial refactoring, the command prefixes were left unchanged.\n\nThe prefixes do not match the name of the `CliSyntax_PREFIX_`-constants\nanymore.\n\nLet\u0027s update the prefix values in `CliSyntax` respectively.\n",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "edb45324bc9c38b736c0aa23693da00b66661d76",
            "messageTitle": "Logic/commands: update `MESSAGE`-related constants",
            "messageBody": "After the initial refactoring, the command messages, such as command\nusage, success and error messages, are not updated, and do not match\nwhat our application does.\n\nLet\u0027s update these `MESSAGE`-related constants in `Logic/commands`\naccordingly.\n",
            "insertions": 19,
            "deletions": 17
          },
          {
            "hash": "b03ff96425e68ced8b212aa3e4e1564f6013d407",
            "messageTitle": "Model/util: update `SampleDataUtil#getSampleModules()` (#45)",
            "messageBody": "After morphing our application from an Address book to a Degree Planner,\r\nwe have yet to update the sample data provided on launching the\r\napplication.\r\n\r\nThis means that the old \"person\"-oriented sample data will be presented\r\nto new users when they launch PlanWithEase, creating confusion amongst\r\nthese users.\r\n\r\nLet\u0027s fix this by updating `SampleDataUtil#getSampleModules()` to remove\r\nthe old \"person\"-oriented sample data and include new \"modules\"-oriented\r\nsample data.",
            "insertions": 36,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 101,
        "deletions": 369,
        "date": "2019-03-04",
        "commitResults": [
          {
            "hash": "6b1c7166b650b7f0b6076c76ca19f26e91769ae1",
            "messageTitle": "Follow upstream master changes: restore original diagrams (#46)",
            "messageBody": "Upstream se-edu/addressbook-level4@5509159 had the following changes:\r\n\r\n1. Renamed `LogicComponentSequenceDiagram.pptx` to\r\n   `HighLevelSequenceDiagrams.pptx`, as the contents of\r\n   `HighLevelSequenceDiagrams.pptx` do not match `SDForDeletePerson.png`\r\n   anymore.\r\n\r\n2. Restored original contents of `LogicComponentSequenceDiagram.pptx`\r\n   (corresponding source pptx file for DeletePersonSdForLogic.png) from\r\n   se-edu/addressbook-level4@cbc6571 (last modified date of file) to\r\n   allow updating of aforesaid diagram.\r\n\r\nLet\u0027s follow and merge the changes from se-edu#978 into master branch to\r\nenable us to be able to update all the diagram files accordingly.",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "0987a7e2528a5343889f90d284208203e594616e",
            "messageTitle": "docs/UserGuide: fix branding \u0026 update commands usage and description (#50)",
            "messageBody": "The User Guide still mentions \"Address Book\" despite the change to morph\r\nit into \"PlanWithEase\", a degree planner application.\r\n\r\nAdditionally, command usages and descriptions are mostly still\r\n`person`-oriented due to the legacy Address Book codebase, and has yet\r\nto be updated.\r\n\r\nLet\u0027s fix this by updating the entire User Guide to ensure that:\r\n* all command usages are up-to-date\r\n* all command descriptions include intuitive examples\r\n* all \"Address book\" related phrases are replaced accordingly in the\r\n  correspoding contexts accordingly",
            "insertions": 85,
            "deletions": 50
          },
          {
            "hash": "5b87fb070840ddfb8bce86bcfa545dbf913363c2",
            "messageTitle": "docs/DeveloperGuide: update instructions for manual testing (#56)",
            "messageBody": "Let\u0027s replace `contact` with `module` in Appendix H - Instructions for\r\nManual Testing.",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "801164d46bed0eee944e31545621f2cdb05fc958",
            "messageTitle": "docs/DeveloperGuide: update non functional requirements (#55)",
            "messageBody": "Let\u0027s update the non functional requirements in our Developer Guide to\r\ninclude the refined non-functional requirements we imposed on ourselves.",
            "insertions": 10,
            "deletions": 3
          },
          {
            "hash": "75473962b8ee774b33a0b0ce87d8cb850772b61e",
            "messageTitle": "docs/DeveloperGuide: remove unnecessary sections (#58)",
            "messageBody": "Let\u0027s remove all unnecessary sections from our Developer Guide so that\r\ndevelopers are not confused by the outdated content.",
            "insertions": 0,
            "deletions": 310
          },
          {
            "hash": "937e43e2b65002775e86a9b21ac64d4399c6d015",
            "messageTitle": "MainApp: bump `MainApp#VERSION` to v1.1.0 for release (#62)",
            "messageBody": "To prepare for v1.1.0 release, let\u0027s bump `MainApp#VERSION` to v1.1.0.",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 5,
        "date": "2019-03-14",
        "commitResults": [
          {
            "hash": "632873b3e4a062c7a3e78dcf835a20e6f2ace43e",
            "messageTitle": "UI: update `ModuleCard` and `ModuleListCard.fxml` (#70)",
            "messageBody": "The details in the `ModuleListCard` sidebar are difficult to comprehend.\r\nExample: Credits are displayed as is without any labels, and users may\r\nbe confused or might not remember what the value means or represents.\r\n\r\nLet\u0027s update the UI to make the data presented in the `ModuleListCard`\r\neasier for users to comprehend by\r\n* labelling the `Credits` value displayed\r\n* re-ordering some of details presented to make it look neater\r\n* update `ModuleCardHandle#getCredits()` to remove the label added",
            "insertions": 9,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 66,
        "date": "2019-03-15",
        "commitResults": [
          {
            "hash": "c9e00b8193f24697be4c891f85ecfae90fa1cbb4",
            "messageTitle": "Model: update `Name#VALIDATION_REGEX` (#76)",
            "messageBody": "`Name#VALIDATION_REGEX` accepts any alphanumeric characters separated by\r\nspaces. However, this character set is too strict, and prevents the use\r\nof punctuation characters.\r\n\r\nExample:\r\n\"Software Engineering \u0026 Object-Oriented Programming\" is invalid.\r\n\r\nLet\u0027s relax the `Name` restrictions by accepting punctuation characters\r\nin `Name` by:\r\n* replacing `\\p{Alnum}` with `\\p{Graph}` (alphanumeric + punctuations)\r\n* replacing `\\p{Alnum} ` with `\\p{Print}` (`\\p{Graph}` + whitespace)\r\n* updating `Name#MESSAGE_CONSTRAINTS` to reflect the changes accordingly\r\n\r\nIn addition, let\u0027s also update unit tests that checks for invalid names.",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "bdb16cf85930093a79c59cf791d185f86ac7a6b2",
            "messageTitle": "Model: update `Code#VALIDATION_REGEX` (#77)",
            "messageBody": "`Code#VALIDATION_REGEX` accepts any strings of any characters (except\r\nblank). However, the constraints imposed on `Code` is too permissive.\r\nCodes should begin with two alphabets, followed by four digits, and may\r\noptionally end with an alphabet. Blank should continue to be treated as\r\ninvalid `Code`.\r\n\r\nLet\u0027s impose stricter restrictions on `Code` by:\r\n* updating `Code#VALIDATION_REGEX`\r\n* updating `Code#MESSAGE_CONSTRAINTS` to reflect the changes accordingly\r\n\r\nIn addition, let\u0027s also update all affected unit tests.\r\n\r\nNote: Fixed a minor typo in `SampleDataUtil#CS2102`.",
            "insertions": 59,
            "deletions": 58
          }
        ]
      },
      {
        "insertions": 491,
        "deletions": 189,
        "date": "2019-03-18",
        "commitResults": [
          {
            "hash": "b2f65de9df6d7a98f9def384ba7965a48e693db4",
            "messageTitle": "Model: update `Credits#VALIDATION_REGEX` (#83)",
            "messageBody": "`Credits#VALIDATION_REGEX` accepts at least 3 digits. However, this\r\nconstraint is too strict, and in addition, also assumes that there are\r\nat least 3 digits supplied.\r\n\r\nConsider the following logically valid `Credits`:\r\n\r\n    0 Credits - entered as 000 (00000....0 is accepted too)\r\n    4 Credits - entered as 005 (00000....4 is accepted too)\r\n   12 Credits - entered as 012 (00000...12 is accepted too)\r\n  150 Credits - entered as 150 (00000..150 is accepted too)\r\n\r\nThis makes adding / editing `Credits` extremely unintuitive for users.\r\nWe should instead treat the following `Credits`:\r\n\r\n    0 Credits - accepted when entered exactly as: 0\r\n    4 Credits - accepted when entered exactly as: 4\r\n   12 Credits - accepted when entered exactly as: 12\r\n  150 Credits - accepted when entered exactly as: 150\r\n\r\nIn addition, because the current constraint is lax, users may enter\r\narbitrary and large vaues for Credits (e.g. 999999999). However, in\r\npractice, such large values are never needed.\r\n\r\nLet\u0027s modify and update the `Credits` restrictions by:\r\n* accepting up to 3 numeric digits only\r\n* rejecting values with multiple digits beginning with `0`\r\n* update `Credits#MESSAGE_CONSTRAINTS` to reflect the new range of\r\n  acceptable values (0 - 999)\r\n\r\nIn addition, let\u0027s also update all affected unit tests that violates the\r\nnew credits constraint.",
            "insertions": 118,
            "deletions": 90
          },
          {
            "hash": "d910451f9872fb9f1577d56f81a913b5736ece27",
            "messageTitle": "Model: update `Module#isSameModule(...)` (#85)",
            "messageBody": "When comparing if two modules are same using `Module#isSameModule(...)`,\r\nthe equality of `Name`, `Code` and `Credits` fields are compared.\r\n\r\nHowever, this comparison may be too strict, and may result in duplicate\r\nmodules being created.\r\n\r\ne.g. `Module#isSameModule(...)` will return false for the below modules:\r\n\r\n  Code: AA1234\r\n  Name: Intro to ABC\r\n  Credits: 4\r\n\r\n  Code: AA1234\r\n  Name: Intro to ABC\r\n  Credits: 12\r\n\r\nHowever, they are logically referring to the same module.\r\n\r\nWe should instead make `Code` the identity field, and make `Name`,\r\n`Credits` and `Tag` data fields of `Module` objects.\r\n\r\nFirstly, `Credits` or `Tag` should not be considered as identity fields\r\nbecause their values are not unique enough.\r\n\r\nSecondly, `Name` should not be considered as an identity field because\r\nsome modules have identical names, but refer to different modules.\r\n\r\nFor instance, the below two modules are two separate entities:\r\n\r\n  Code: GEK1531\r\n  Name: Cyber Security\r\n  Credits: 4\r\n\r\n  Code: GET1004\r\n  Name: Cyber Security\r\n  Credits: 4\r\n\r\nLet\u0027s update the `Module#isSameModule(...)` equality comparison to\r\nreflect the changes in identity fields for `Module` objects, and fix the\r\naffected unit tests as well.",
            "insertions": 18,
            "deletions": 30
          },
          {
            "hash": "597cb465e8a2ca3bf71bf302785c05c6c0b6bfc3",
            "messageTitle": "build.gradle: upgrade TestFX dependency to 4.0.15-alpha (#84)",
            "messageBody": "The current version of TestFX dependency we are using is 4.0.12-alpha.\r\n\r\nTestFX version 4.0.15-alpha has been announced for a while and it gives\r\nbetter support for JDK11[1], which we may wish to upgrade to in the\r\nfuture.\r\n\r\nTo keep us updated with TestFX\u0027s development, let\u0027s upgrade TestFX\r\ndependency to its latest stable version 4.0.15-alpha.\r\n\r\n[1] https://github.com/TestFX/TestFX/issues/640#issuecomment-436079910",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "35327667989b6069d4ca745ae786d387beecbe9b",
            "messageTitle": "Model: add `Set\u003cCode\u003e` co-requisites to `Module`",
            "messageBody": "Co-requisites of a module cannot be added in the application.\n\nHowever, users need to know what modules have to be taken together\n(e.g. twinned modules) in the same semester.\n\nAs an initial step, let\u0027s add co-requisites to `Module`, but don\u0027t use\nit yet.\n",
            "insertions": 32,
            "deletions": 13
          },
          {
            "hash": "77a5f35b63ebac8fcb73e29fbb0e1e5c534bb674",
            "messageTitle": "Model: update `Module#toString()` method",
            "messageBody": "Although co-requisites were added to `Module`, the data cannot be\nverified.\n\nLet\u0027s update `Module#toString()` to print the list of co-requisites\nmodule codes so that we can verify if the data is correct.\n",
            "insertions": 15,
            "deletions": 1
          },
          {
            "hash": "fa7f9b9b867faf80ca329f1ba752152663818634",
            "messageTitle": "Logic/commands: make `AddCommand#parse(...)` accept co-requisites",
            "messageBody": "We are ready to begin handling co-requisites in our application.\n\nLet\u0027s teach `AddCommandParser` to handle co-requisites, and update\n`AddCommand#MESSAGE_USAGE`.\n",
            "insertions": 27,
            "deletions": 9
          },
          {
            "hash": "a16e8b6441960056562f1966588f2cc270b46c2c",
            "messageTitle": "Logic/commands: make `EditCommand#parse(...)` accept co-requisites",
            "messageBody": "`AddCommandParser` was taught how to handle co-requisites already.\n\nHowever, `EditCommandParser` does not know how to handle co-requisites\nyet. This means users have to `delete` the `Module` and `add` the\ncorrected details.\n\nLet\u0027s teach `EditCommandParser` to handle co-requisites, and update\n`EditCommand#MESSAGE_USAGE`.\n",
            "insertions": 49,
            "deletions": 5
          },
          {
            "hash": "b4d8d2a90298e569666ba99f677310055dc06a7a",
            "messageTitle": "testutil: implement `ModuleBuilder#withCorequisites(...)`",
            "messageBody": "To facilitate testing of Module corequisites, let\u0027s add\n`ModuleBuilder#withCorequisites(...)` and teach `ModuleBuilder` how to\nhandle corequisites.\n",
            "insertions": 12,
            "deletions": 1
          },
          {
            "hash": "12858175402818074eeed3be9417d92fd0ccbf79",
            "messageTitle": "Storage: make `JsonAdaptedModule` handle corequisites for saving/loading",
            "messageBody": "Although users can add / edit co-requisites, the changes made are not\nsaved.\n\nThis is because `JsonAdaptedModule` does not load/save the\nco-requisites, resulting in loss of information.\n\nLet\u0027s update `JsonAdaoptedModule` to load/save co-requisites properly\nand cascade the changes to `JsonAdaoptedModuleTest`.\n",
            "insertions": 26,
            "deletions": 9
          },
          {
            "hash": "55eb410e2af18585bff9ee3e1f5903751072e576",
            "messageTitle": "Logic/commands: handle invalid co-requisites cases",
            "messageBody": "Users can add or edit co-requisites of modules.\n\nHowever, invalid cases are not handled by the application.\n\nExample: Adding a co-requisite module code that does not exists.\n\nLet\u0027s update the `add` and `edit` command to prevent such edge cases.\n",
            "insertions": 50,
            "deletions": 5
          },
          {
            "hash": "60c53c0a6e950e0cf6fcef22c94288ba3864bdf0",
            "messageTitle": "Ui: make `ModuleCard` handle co-requisites",
            "messageBody": "Although users can add / edit co-requisites, the co-requisites are never\nshown in the Ui (displayed in command results when adding or editing\nmodules).\n\nLet\u0027s update the UI to print the list of corequisites for the respective\nModule.\n",
            "insertions": 13,
            "deletions": 0
          },
          {
            "hash": "196819d3420bf1c654026f562855be9c69682da1",
            "messageTitle": "guitests: make `ModuleCardHandle` handle co-requisites",
            "messageBody": "Let\u0027s update `ModuleCardHandle` to ensure that co-requisites are\ndisplayed in the UI properly.\n",
            "insertions": 23,
            "deletions": 3
          },
          {
            "hash": "287b6585ebc4eb1eaa783d9da569c8d56bd01f96",
            "messageTitle": "Storage: make `JsonSerializableModuleList` handle invalid co-requisites",
            "messageBody": "Although our application can handle invalid co-requisites through add or\nedit commands, our application does not check if the list of\nco-requisite module codes are valid when loading the serialised file.\n\nLet\u0027s update `JsonSerializableModuleList` to handle invalid\nco-requisites accordingly.\n",
            "insertions": 13,
            "deletions": 0
          },
          {
            "hash": "569c7856bb256060f5173bfc58d840c53d0ab02d",
            "messageTitle": "test/storage: update `JsonSerializableAddressBook` test JSON file",
            "messageBody": "Let\u0027s update TypicalModules to test if co-requisites can be\nserialized/deserialized properly.\n",
            "insertions": 15,
            "deletions": 8
          },
          {
            "hash": "268f9b914cdd860df478faf5cbb834a528856734",
            "messageTitle": "Model: make `AddressBook#removeModule(...)` remove deleted co-requisite",
            "messageBody": "Although users can add or edit module co-requisites, if a module is\ndeleted but is a pre-requisite of another module, the co-requisites of\nthe other module is not updated.\n\nLet\u0027s update `AddressBook#removeModule(...)` to remove deleted\nco-requisites accordingly.\n",
            "insertions": 14,
            "deletions": 0
          },
          {
            "hash": "8ab39b829f7472c5eb8a3cf56a493f1fd91b4fd1",
            "messageTitle": "docs/DeveloperGuide: update module co-requisites implementation details (#101)",
            "messageBody": "Although we have added support for `Module` co-requisites, our Developer\r\nGuide does not contain the relevant implementation details.\r\n\r\nLet\u0027s update the Developer Guide to include details of the current\r\nimplementation and design considerations for the adding support for\r\n`Module` co-requisites.",
            "insertions": 37,
            "deletions": 0
          },
          {
            "hash": "7806d0536ba2e8c4f3055d07c56a8b8dd7a414d4",
            "messageTitle": "docs/UserGuide: update module-related command usages (#99)",
            "messageBody": "Although we have added support for `Module` co-requisites, our User\r\nGuide does not contain information about module co-requisites.\r\n\r\nThis may cause confusion among users who want to know how to add/edit\r\nmodule co-requisites.\r\n\r\nAdditionally, deleting a module results in a cascading effect of\r\nremoving the deleted module code from other modules\u0027 co-requisites.\r\n\r\nLet\u0027s update the User Guide to reflect the new changes to\r\nmodules-related commands pertaining to how to add/edit co-requisites, as\r\nwell as the cascading behaviour of the `delete` command.",
            "insertions": 27,
            "deletions": 12
          },
          {
            "hash": "31797a01933b1b289778ae2f11dbb8f424eadfbf",
            "messageTitle": "MainApp: bump `MainApp#VERSION` to v1.2.0 for release (#104)",
            "messageBody": "To prepare for v1.2.0 release, let\u0027s bump `MainApp#VERSION` to v1.2.0.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 21,
        "date": "2019-03-21",
        "commitResults": [
          {
            "hash": "99d7fc60763c8af92e349e766719d3a9ec64c849",
            "messageTitle": "build.gradle: add `buildJar`, update `archiveName` and dependencies (#107)",
            "messageBody": "There are a few issues with the Gradle build script.\r\n* Overlooked issues when building JAR file with `shadowJar`\r\n  `shadowJar` simply bundles the `HelpWindow.html` without re-generating\r\n  the docs first. This may cause the `Help` window of our application to\r\n  display outdated details.\r\n\r\n* `archiveName` is `addressbook.jar`, but should be `PWE.jar`\r\n   Despite our User Guide mentioning `PWE.jar`, the JAR file created is\r\n   by `shadowJar` is `addressbook.jar`. We should update the filename\r\n   accordingly to suit our needs.\r\n\r\n* Dependencies are out-of-date\r\n  We should keep our dependencies up-to-date to fix bugs reported in the\r\n  older releases of our dependencies.\r\n\r\n* Lack of verbosity for `javac` linter warnings\r\n  `javac` reports that the codebase used unchecked or unsafe operations.\r\n   This may indicate potential bugs in our application.\r\n\r\nTo address these issues, let\u0027s update `build.gradle` by\r\n* adding `buildJar` task to simplify the build process and ensuring that\r\n  docs are regenerated first before building the JAR.\r\n* update `archiveName` to `PWE.jar`\r\n* update the out-of-date dependencies\r\n* add `javac` arguments to increase verbosity of linter warnings so that\r\n  we can fix the potential bugs\r\n\r\nNote: After updating Jackson, `Path` objects are now deserialised as\r\n      absolute paths, which causes some of the assertion tests to fail.\r\n      As such, `commons/core/Config` \u0026 `model/UserPrefs` were updated\r\n      accordingly to convert absolute paths back to relative paths so as\r\n      to allow the assertion tests to pass again.",
            "insertions": 36,
            "deletions": 19
          },
          {
            "hash": "0e05453b2a6d589194bab768ed9932654e6eaba1",
            "messageTitle": "Storage/JsonSerializableAddressBook: address `javac` linter warnings (#108)",
            "messageBody": "In PR #69, `getJsonSerializableModuleListClass()` and\r\n`getJsonSerializableRequirementCategoryListClass` returned the raw\r\n`Class` instead of the required `Class\u003cT\u003e`.\r\n\r\nAs a result, the `javac` linter is unable to determine the generic class\r\nat compile time, and thus it reported warnings of unchecked methods.\r\n\r\nThis may appear to be harmless, but it may cause runtime bugs in the\r\nfuture.\r\n\r\nLet\u0027s address the `javac` linter warnings by fixing the methods\u0027 return\r\nvalues in `JsonSerializableAddressBook` class.",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 344,
        "deletions": 40,
        "date": "2019-03-25",
        "commitResults": [
          {
            "hash": "9084f56db719985f7893a7c4b1f4116a88a34aeb",
            "messageTitle": "Storage: add more checks in `JsonSerializable`-related classes",
            "messageBody": "Let\u0027s prevent edge cases from de-serializing untrusted JSON files by\nadding additional logic checks to `JsonSerializable`-related classes.\n",
            "insertions": 109,
            "deletions": 18
          },
          {
            "hash": "e81ecc05d94e15cd035aa027c530e53a2014b18a",
            "messageTitle": "Model: add more checks in `AddressBook` class during edit/delete modules",
            "messageBody": "Let\u0027s prevent edge cases from adding additional logic checks to\n`AddressBook` by cascading changes to module code when they are deleted\nor edited, and cascade the changes to the affected classes.\n",
            "insertions": 234,
            "deletions": 21
          },
          {
            "hash": "7d55c1a32c117cea8ca5548763c6d358b183cfb7",
            "messageTitle": "MainApp: bump `MainApp#VERSION` to v1.2.1 for release (#120)",
            "messageBody": "To prepare for v1.2.1 release, let\u0027s bump `MainApp#VERSION` to v1.2.1.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 135,
        "deletions": 79,
        "date": "2019-03-27",
        "commitResults": [
          {
            "hash": "70a5fd550c911850bf57e5529d779714056bd02d",
            "messageTitle": "Model \u0026 Storage: add more checks to co-requisites cascading (#122)",
            "messageBody": "Let\u0027s prevent edge cases from adding additional logic checks to\r\n`AddressBook` by cascading changes to module code when they are added,\r\ndeleted or edited, and cascade the changes to the affected classes.",
            "insertions": 135,
            "deletions": 79
          }
        ]
      },
      {
        "insertions": 57,
        "deletions": 1,
        "date": "2019-03-28",
        "commitResults": [
          {
            "hash": "13db035dc58b6273878eb84bfa9a57bdad59ba5c",
            "messageTitle": "Model/util: update `SampleDataUtil#getSampleDegreePlanners()` (#131)",
            "messageBody": "Although our application supports Semester 1, 2, 3, 4 for Year 1 through\r\n4, the sample data does not populate Degree Planners for semesters 3 and\r\n4 (special terms semesters 1 and 2 respectively).\r\n\r\nTo reduce confusion amongst our users, let\u0027s update\r\n`SampleDataUtil#getSampleDegreePlanners()` to include degree planners\r\nfor all special terms semesters.",
            "insertions": 57,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 228,
        "deletions": 15,
        "date": "2019-03-29",
        "commitResults": [
          {
            "hash": "38f7c5ac9b974c6d7b769079a69380542a9ef9eb",
            "messageTitle": " Model/util: add and use `InitialDataUtil` class (#134)",
            "messageBody": "* Model/util: add `InitialDataUtil` class\r\n\r\nWhenever the `clear` command is executed, or when the application fails\r\nto read the JSON save data successfully, `new AddressBook()` is passed\r\nto `ModelManager#setAddressBook(...)` to effectively \u0027clear\u0027 all save\r\ndata.\r\n\r\nHowever, this behaviour is undesirable, as it purges all existing\r\nmodules, requirement categories and degree planners. This causes users\r\nto be unable to interact with requirement categories and degree planners\r\nas they no longer exists in the application.\r\n\r\nAs such, instead of purging all the data by replacing the current\r\n`AddressBook` to a new instance, we should replace it to a barebone copy\r\nof an empty AddressBook that retains the respective requirement\r\ncategories and degree planner.\r\n\r\nLet\u0027s add an `InitialDataUtil` class to provide easy access of reseting\r\nexisting data to the initial (empty) data described above.\r\n\r\n* Replace `new AddressBook()` with `getInitialAddressBook()`\r\n\r\nLet\u0027s replace `new AddressBook()` with `getInitialAddressBook()`\r\nwhenever `clear` command is executed, or when the application fails\r\nto read the JSON save data successfully, and update the unit tests for\r\nthe `clear` command as well.\r\n",
            "insertions": 223,
            "deletions": 12
          },
          {
            "hash": "64ec9fe2b088904ff0c90231cbeb11f83fb9e796",
            "messageTitle": "Model: update `Name#VALIDATION_REGEX` and `Name#MESSAGE_CONSTRAINTS` (#135)",
            "messageBody": "To enable `FindCommand` support for boolean expressions for more complex\r\nfiltering of results (PR #119), let\u0027s restrict `Name#VALIDATION_REGEX`\r\nto exclude boolean operators `(`, `)`, `|`, `\u0026` so that it is possible\r\nto separate boolean operators from `Name` arguments.\r\n\r\nIn addition, let\u0027s update `Name#MESSAGE_CONSTRAINTS` to let users know\r\nhow to get around the restrictions by replacing:\r\n* `()` with `[]`\r\n* `\u0026` with `and`\r\n* `|` with `l` (lowercase L)",
            "insertions": 5,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 174,
        "deletions": 7,
        "date": "2019-03-30",
        "commitResults": [
          {
            "hash": "98431c021497eb62b9d21cd07d4f868118965ad8",
            "messageTitle": "Logic/parser: add and use `BooleanExpressionTokenizer`",
            "messageBody": "`BooleanExpressionParser` uses `StringTokenizer` to tokenize the command\narguments.\n\nHowever, `StringTokenizer` is insufficient in extracting prefixed\narguments and boolean operators, as we want to keep boolean operators as\ntokens. Likewise, `ArgumentTokenizer` is also not suitable, as we do not\nwant to use whitespace as delimiter for splitting and extracting\narguments.\n\nConsider the following example.\n\n  find name/Structures || (code/CS2040C \u0026\u0026 credits/4)\n\nBoth `StringTokenizer` and `ArgumentTokenizer` are unable to split the\ntokens into:\n* name/Structures\n* ||\n* (\n* code/CS2040C\n* \u0026\u0026\n* credits/4\n* )\n\nBut, we want to be able to extract the tokens as above to enable\nShunting-yard algorithm to work nicely without any additional processing\nof arguments in `BooleanExpressionParser`.\n\nTo enable this, let\u0027s create `BooleanExpressionTokenizer`, a string\ntokenizer class that extracts all arguments with the specified prefixes\nand boolean operators as tokens, and replace the use of\n`StringTokenizer` to `BooleanExpressionTokenizer` in\n`BooleanExpressionParser`.\n",
            "insertions": 172,
            "deletions": 5
          },
          {
            "hash": "d1dd12a6eb9faa621278ce71a5882e77f90379d3",
            "messageTitle": "test/CommandParserTestUtil: address `javac` linter warnings (#137)",
            "messageBody": "`CommandParserTestUtil#assertParseSuccess(...)` and\r\n`CommandParserTestUtil#assertParseFailure(...)` expects an instance of\r\nthe raw `Parser` object instead of the required `Parser\u003c?\u003e`.\r\n\r\nAs a result, the `javac` linter is unable to determine the generic class\r\nat compile time, and thus it reported warnings of unchecked methods.\r\n\r\nThis may appear to be harmless, but it may cause runtime bugs in the\r\nfuture.\r\n\r\nLet\u0027s address the `javac` linter warnings by fixing the methods\u0027\r\nargument types in `CommandParserTestUtil` class.",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 257,
        "deletions": 129,
        "date": "2019-03-31",
        "commitResults": [
          {
            "hash": "a7f537547fbcc9686a07d54d06369122629727ac",
            "messageTitle": "Model/module: update `Module#toString()` (#138)",
            "messageBody": "The string representation of `Module` objects is not intuitive.\r\n\r\nConsider the following Module:\r\n\r\n  Code: CS1010\r\n  Name: Programming Methodology\r\n  Credits: 4\r\n  Co-requisites: None\r\n  Tags: algorithms, c, imperative, programming\r\n\r\n`Module#toString()` returns the following:\r\n\r\n  Programming Methodology Credits: 4 Code: CS1010 Tags: [algorithms][c]\r\n  [imperative][programming] Co-requisites: None\r\n\r\nThis makes it difficult for users to read and understand the details of\r\na module.\r\n\r\nLet\u0027s update `Module#toString()` such that it will return the following\r\ninstead:\r\n\r\n  CS1010 Programming Methodology (4 Modular Credits)\r\n  Co-requisites: None\r\n  Tags: [algorithms], [c], [imperative], [programming]",
            "insertions": 13,
            "deletions": 20
          },
          {
            "hash": "d1b43acabf4ce3dec4ea909a507621f9ba3d19d0",
            "messageTitle": "Logic/commands: update `ClearCommand#MESSAGE_SUCCESS` (#143)",
            "messageBody": "New users may unintentionally execute the `clear` command, but do not\r\nknow how to get back their data.\r\n\r\nLet\u0027s update the `ClearCommand#MESSAGE_SUCCESS` to provide these users a\r\ntip: use the `undo` command!",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "09896cc753a226e57a2eb1310f9651d1bacec182",
            "messageTitle": "Logic/command: update `HistoryCommand#execute(...)` \u0026 error message (#141)",
            "messageBody": "Let\u0027s update `HistoryCommand#MESSAGE_NO_HISTORY` to sound more natural,\r\nand update `HistoryCommand#execute(...)` to print the command history in\r\nan unordered list format.\r\n\r\nExample:\r\n- undo    [last command executed]\r\n- redo    [second last command executed]",
            "insertions": 20,
            "deletions": 9
          },
          {
            "hash": "f1bd439c23c06250524475f4bfff342046008efc",
            "messageTitle": "Logic: update `DeleteCommand` success and error messages (#142)",
            "messageBody": "The error messages of `DeleteCommand` are very vague, and do not provide\r\nmuch information to help users fix incorrect command usage.\r\n\r\nAdditionally, when users simply executes the `delete` command without\r\nany parameters specified, they are greeted with \"Invalid command\r\nformat!\". This may cause users to feel more confused.\r\n\r\nLet\u0027s update the success and error messages of `DeleteCommand` to\r\naddress the above problems by making the messages easy to understand and\r\nprovide relevant information to help them fix incorrect command usage.\r\nAlso, let\u0027s simply print `DeleteCommand#MESSAGE_USAGE` instead of\r\n`CliSyntax#MESSAGE_INVALID_COMMAND_FORMAT`.",
            "insertions": 19,
            "deletions": 4
          },
          {
            "hash": "44b07094966cb3be476bc8303d0f5125321db39f",
            "messageTitle": "Logic: update `AddCommand` success and error messages (#140)",
            "messageBody": "The error messages of `AddCommand` are very vague, and do not provide\r\nmuch information to help users fix incorrect command usage.\r\n\r\nAdditionally, when users simply executes the `add` command without any\r\nparameters specified, they are greeted with \"Invalid command format!\".\r\nThis may cause users to feel more confused.\r\n\r\nLet\u0027s update the success and error messages of `AddCommand` to address\r\nthe above problems by making the messages easy to understand and provide\r\nrelevant information to help them fix incorrect command usage. Also,\r\nlet\u0027s simply print `AddCommand#MESSAGE_USAGE` instead of\r\n`CliSyntax#MESSAGE_INVALID_COMMAND_FORMAT`.",
            "insertions": 64,
            "deletions": 37
          },
          {
            "hash": "0d171203c9c4badc4f4c8190d618709f29925764",
            "messageTitle": "Logic: update `EditCommand` success and error messages (#139)",
            "messageBody": "The error messages of `EditCommand` are very vague, and do not provide\r\nmuch information to help users fix incorrect command usage.\r\n\r\nAdditionally, when editing a module, a user may not remember what module\r\nwas modified.\r\n\r\nFurthermore, when users simply executes the `edit` command without any\r\nparameters specified, they are greeted with \"Invalid command format!\".\r\nThis may cause users to feel more confused.\r\n\r\nLet\u0027s update the success and error messages of `EditCommand` to address\r\nthe above problems by making the messages easy to understand and provide\r\nrelevant information to help them fix incorrect command usage. Also,\r\nlet\u0027s simply print `EditCommand#MESSAGE_USAGE` instead of\r\n`CliSyntax#MESSAGE_INVALID_COMMAND_FORMAT`.",
            "insertions": 137,
            "deletions": 56
          }
        ]
      },
      {
        "insertions": 37,
        "deletions": 27,
        "date": "2019-04-01",
        "commitResults": [
          {
            "hash": "32ac6ee0e0f65c669ef4d3818e08dba11604421b",
            "messageTitle": "docs: update `Ui.png` and increase width in documentations (#147)",
            "messageBody": "Let\u0027s update `Ui.png` in preparation of v1.3 release, and update the\r\ndisplayed image width in `README` and `UserGuide`.",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "d0db8352cd0c673728d652e5c3dbba7ff4cd95b4",
            "messageTitle": "docs/UserGuide: update module management sections (#151)",
            "messageBody": "Let\u0027s update the User Guide to reflect the changes to module management\r\nfeatures (i.e. `add`, `edit`, `delete`) so that users can understand how\r\nto use our application.",
            "insertions": 34,
            "deletions": 19
          },
          {
            "hash": "360ffaa76a868517c4f2f2fc3e89ff1240e004c8",
            "messageTitle": "docs/DeveloperGuide: update class diagrams (#156)",
            "messageBody": "The class diagrams are not up-to-date.\r\n\r\nLet\u0027s update the class diagrams so that developers can understand our\r\napplication architecture design easily.",
            "insertions": 0,
            "deletions": 5
          },
          {
            "hash": "fef8a9dfc204704117d7497f272d55a5a83dc140",
            "messageTitle": "MainApp: bump `MainApp#VERSION` to v1.3 for release (#157)",
            "messageBody": "To prepare for v1.3 release, let\u0027s bump `MainApp#VERSION` to v1.3.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 63,
        "date": "2019-04-03",
        "commitResults": [
          {
            "hash": "b81dfbc4d6b356da143437b20848bb1111f97a34",
            "messageTitle": "docs/UserGuide: update inconsistencies in command usage (#165)",
            "messageBody": "Let\u0027s fix some inconsistencies in command usage.",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "170bd29bc6c2952a2fd4dc853c7f6c30f776f7fc",
            "messageTitle": "Logic/parser: refactor `ParserUtil` methods (#167)",
            "messageBody": "* Logic/parser: extract `arePrefixesPresent(...)` to `ParserUtil`\r\n\r\nMany command parsers (such as `AddCommandParser`,\r\n`PlannerAddCommandParser`, `RequriementRemoveCommandParser`) have the\r\nsame `arePrefixesPresent(...)` implementation.\r\n\r\nLet\u0027s extract the `arePrefixesPresent(...)` to `ParserUtil` to reduce\r\nduplicate code.\r\n\r\n* logic/parser: simplfy `ParserUtil#parseCorequisites(...)` implementation\r\n\r\n`ParserUtil#parseCorequisites(...)` is simply a syntactic sugar for\r\n`ParserUtil#parseCodes(...)`.\r\n\r\nLet\u0027s update `ParserUtil#parseCorequisites(...)` to call\r\n`parseCodes(...)` internally instead of duplicating code.\r\n",
            "insertions": 18,
            "deletions": 58
          }
        ]
      },
      {
        "insertions": 693,
        "deletions": 146,
        "date": "2019-04-04",
        "commitResults": [
          {
            "hash": "2fe1abcefc3a55e85e2501cc3636eef3fa6e0347",
            "messageTitle": "App: improve overall code quality (#170)",
            "messageBody": "There\u0027s inconsistent/insufficient use of defensive programming in our\r\ncodebase.\r\n\r\nLet\u0027s update the codebase to add precondition checks by using:\r\n* `requireNonNull` to verify preconditions in public methods\r\n* `checkArgument` to verify preconditions in public methods\r\n* `assert` to verify preconditions in private/protected methods\r\n\r\nBesides that, let\u0027s also rename `ApplicationParser` to `CommandParser`\r\nso that it makes more sense, and reflects its actual purpose.\r\n\r\nPrecondition checks are done in accordance to guidelines obtained from:\r\nhttps://docs.oracle.com/javase/8/docs/technotes/guides/language/assert.html",
            "insertions": 639,
            "deletions": 119
          },
          {
            "hash": "e6f6858d4bc3b4d9a75645f024a25ce7d24ad3aa",
            "messageTitle": "Model: implement `Comparable` interface (#173)",
            "messageBody": "Very often, there is a need to compare/sort attributes of `Module` and\r\n`DegreePlanner`. Yet, these attributes (such as `Code`, `Year`,\r\n`Semester`) do not implement the `Comparable` interface to facilitate\r\nsorting of data.\r\n\r\nLet\u0027s update the attributes of `Module` and `DegreePlanner` to implement\r\nthe `Comparable` interface to simplify and standardise the way we\r\ncompare the values.",
            "insertions": 46,
            "deletions": 22
          },
          {
            "hash": "76ae4a7eb5e12c12203da6f1c9ab8ae14d9c7c73",
            "messageTitle": "[#178/#182] Logic/commands: fix implementation of `history` command (#190)",
            "messageBody": "The `history` command was erroneously updated to list the command\r\nhistory in reversed lexicographical order instead of in reversed order\r\nof when the commands were entered.\r\n\r\nLet\u0027s fix the implementation of the `history` command.",
            "insertions": 8,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 1,
        "date": "2019-04-07",
        "commitResults": [
          {
            "hash": "7cdda573d4735629880cda939408ec2e6a5b0b75",
            "messageTitle": "build.gradle: update `defaultTasks` and add more compiler checks (#201)",
            "messageBody": "Gradle supplies compiler arguments when compiling Java source code.\r\nHowever, Gradle does not supply compiler arguments when compiling Java\r\ntest code.\r\n\r\nBesides that, the `defaultTasks` does not check for Checkstyle errors.\r\n\r\nLet\u0027s update `build.gradle` to address these two issues by:\r\n* adding `compileTestJava`\r\n* updating `defaultTasks` to include `checkstyleMain` \u0026 `checkstyleTest`",
            "insertions": 7,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 877,
        "deletions": 319,
        "date": "2019-04-08",
        "commitResults": [
          {
            "hash": "e45bd0ad7ad2703c24abb7710328fd301f4b65df",
            "messageTitle": "Model/module: add `Module#semesters`",
            "messageBody": "Users may want to keep track of what modules are offered in an academic\nyear.\n\nFor instance, CS1010 Programming methodology is offered in Semesters\n1, 2, 4 (Special Semester Term 2) only. It would be pointless for users\nto plan to take the module in Special Semester Term 1 (Semester 3 in our\napplication) when it is not actually being offered.\n\nLet\u0027s implement `Module#semesters` to enable users to keep track of\nwhich semesters a `Module` can be taken, and update the UI to show the\nsemesters the module is offered in.\n",
            "insertions": 405,
            "deletions": 142
          },
          {
            "hash": "b82c0d03474f962051d8d20d1779357c55cce745",
            "messageTitle": "test: fix unit and system tests to support `Module#semesters`",
            "messageBody": "Unit and system tests are failing due to the addition of\n`Module#semesters`.\n\nLet\u0027s fix all the broken unit and system tests to ensure that\n`Module#semesters` works as expected.\n",
            "insertions": 472,
            "deletions": 177
          }
        ]
      },
      {
        "insertions": 412,
        "deletions": 195,
        "date": "2019-04-10",
        "commitResults": [
          {
            "hash": "87bd7344c6e23ebb7b03f0f25fe5a2643f2322b4",
            "messageTitle": "Storage: improve storage data integrity checks",
            "messageBody": "Our application assumes data integrity of all modules, requirement\ncategories and degree planner to function properly.\n\nAlthough there are some checks in place to ensure that data are not\ntampered with (unintentionally or otherwise), there is still room for\nimprovement to make the checks more comprehensive.\n\nLet\u0027s update Storage component to use Jackson-friendly adapted objects\ninstead of primitive types (e.g. `String` should not be used for storing\n`Name`, but rather, a custom `JsonAdaptedName` should be used), and\nimplement more data integrity checks throughout data deserialization.\n",
            "insertions": 412,
            "deletions": 195
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 23,
        "date": "2019-04-13",
        "commitResults": [
          {
            "hash": "734a2f19093d9baf28b2a32370d4293a132783dd",
            "messageTitle": "Test/TestApp: fix `initPrefs(...)` implementation and broken tests (#210)",
            "messageBody": "TestApp does not set the requirement category list JSON filepath and the\r\ndegree planner list JSON filepath in `initPrefs(...)`.\r\n\r\nThis causes `sandbox/pref_testing.json` to include the default values of\r\n`degreePlannerListFilePath` and `requirementCategoryListFilePath` in\r\n`UserPrefs` whenever `TestApp#initPrefs(...)` is used. Unfortunately,\r\nthis is incorrect, as TestApp uses save data files in the `sandbox`\r\ndirectory!\r\n\r\nLet\u0027s fix the erroneous `TestApp#initPrefs(...)` implementation and\r\nupdate the broken unit tests to reflect the correct behaviour of the\r\napplication.",
            "insertions": 18,
            "deletions": 18
          },
          {
            "hash": "b00cdaf348c4eedaed3bfa9c741311f1b76f153f",
            "messageTitle": "Model/module: make `Code` store uppercase string (#211)",
            "messageBody": "Code should be made case-insensitive, as `cs1010` and `CS1010`\r\nessentially refers to the same module code. We should also disallow\r\nstoring module codes in lowercase to maintain consistency throughout our\r\napplication (as some module codes will be in uppercase, some will be in\r\nlowercase).\r\n\r\nLet\u0027s update `Code` to make it case-insensitive, but store them in\r\nuppercase. Additionally, let\u0027s update the unit tests to ensure that\r\ncase-insensitive `Code` works as expected.",
            "insertions": 12,
            "deletions": 1
          },
          {
            "hash": "9074adff635f908251b3405f575f128a486209d0",
            "messageTitle": "Ui: update `GuiSettings#DEFAULT_WIDTH` and `MainWindow.fxml` (#212)",
            "messageBody": "`GuiSettings#DEFAULT_WIDTH` does not match the minimum width of the root\r\nelement in `MainWindow.fxml`. Also, the `minWidth` of the Requirement\r\nCategories panel needs to be increased, as the title of the panel can\r\nbecome truncated if the width of the application window is minimum.\r\n\r\nLet\u0027s update `GuiSettings#DEFAULT_WIDTH` to match `MainWindow.fxml`, and\r\nlet\u0027s also rescale the `minWidth` of all the main panels in\r\n`MainWindow.fxml`.",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 1277,
        "deletions": 537,
        "date": "2019-04-14",
        "commitResults": [
          {
            "hash": "b59439225fa580e62f1094e02e50e9785c61b9b3",
            "messageTitle": "docs: update UserGuide structure and general commands usage (#218)",
            "messageBody": "Let\u0027s re-organise the content of the User Guide so that it looks more\r\nnatural. Additionally, let\u0027s update the general commands usage to make\r\nit more user-friendly.",
            "insertions": 121,
            "deletions": 115
          },
          {
            "hash": "b0bffed5e8e048843ebcab0f81acd3bb4b5d7437",
            "messageTitle": "DeveloperGuide: update \"Troubleshooting Testing\" section (#219)",
            "messageBody": "Due to new privacy enhancements introduced in macOS Mojave, applications\r\nwithout `Accessibility` permission cannot simulate keyboard and mouse\r\nmovements.\r\n\r\nThis causes GUI tests that uses `CommandBoxHandle#run(...)` to execute\r\ncommands to fail, as `CommandBoxHandle#run(...)` attempts to simulate\r\npressing `Enter` key in the Command Box using `GuiRobot` (subclass of\r\n`org.testfx.api.FxRobot`).\r\n\r\nThe `Enter` keypress event is then handled by\r\n`CommandBox#handleCommandEntered()`, which executes the command.\r\n\r\nHowever, because of insufficient privileges, `GuiRobot` may be unable to\r\nsimulate the `Enter` keypress event in the Command Box, thus the handler\r\nmethod is not called. This results in the command in the Command Box to\r\nnot get executed, which in turn causes the GUI tests to fail.\r\n\r\nTo reduce confusion amongst developers using macOS Mojave, let\u0027s update\r\nthe \"Troubleshooting Testing\" section to discuss this issue, and provide\r\ninstructions on how to resolve it.",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "c5fcb999b2926051adae812e02a83a159ed795a2",
            "messageTitle": "Model/util: update `SampleDataUtil` (#146)",
            "messageBody": "Let\u0027s update the `SampleDataUtil` to populate our application with more\r\nsample data to facilitate testing, and reduce time spent by users to\r\ncreate their customised degree plan using our application.",
            "insertions": 234,
            "deletions": 74
          },
          {
            "hash": "f0cfec547ea2d05f1112a2966ca9a3c3c032ec42",
            "messageTitle": "Logic/commands: enhance logic checks for module management commands (#222)",
            "messageBody": "`add` and `edit` commands have yet to be updated to properly handle\r\ninteractions with co-requisite/semesters constraints. This may cause\r\ndata integrity of the degree plan to be violated, which may cause the\r\napplication to function correctly.\r\n\r\nLet\u0027s update the `add` and `edit` commands to properly handle\r\ninteractions with co-requisite/semesters, and update the tests to ensure\r\ncorrect behaviour of the commands. Additionally, let\u0027s introduce\r\n`StringUtil#joinStreamAsString(...)` helper method to reduce repetitive\r\ncode when converting a stream to a delimited string.",
            "insertions": 635,
            "deletions": 201
          },
          {
            "hash": "9e4de0e4ccde7ff255f14a4d0627983bc4b049eb",
            "messageTitle": "docs/UserGuide: update Module Management section (#231)",
            "messageBody": "Let\u0027s update the User Guide for v1.4 release.",
            "insertions": 181,
            "deletions": 108
          },
          {
            "hash": "8f74a54eafadc42cbe698b71154ef3ecb119d9a3",
            "messageTitle": "MainApp: bump `MainApp#VERSION` to v1.4 for release (#221)",
            "messageBody": "To prepare for v1.4 release, let\u0027s bump `MainApp#VERSION` to v1.4.",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a373a80717728ebb13b4384cb2425a25dc7898d4",
            "messageTitle": "docs/team: update Ngo Wei Lin\u0027s Personal Project Portfolio (#239)",
            "messageBody": "Let\u0027s update Ngo Wei Lin\u0027s Personal Project Portfolio to showcase his\r\ncontributions to the project.",
            "insertions": 97,
            "deletions": 38
          }
        ]
      },
      {
        "insertions": 254,
        "deletions": 98,
        "date": "2019-04-15",
        "commitResults": [
          {
            "hash": "396d4219ed4b7746d7b1d08878015af4e297bc67",
            "messageTitle": "docs/DeveloperGuide: update Edit Module feature (#251)",
            "messageBody": "Let\u0027s update the Developer Guide to include the current implementation\r\nand design considerations for the Edit Module feature.",
            "insertions": 155,
            "deletions": 36
          },
          {
            "hash": "fd1a4416c8fe72bdfc1f17a06eed1866228bd4c1",
            "messageTitle": "Logic/commands: fix command usage (#255)",
            "messageBody": "Let\u0027s fix some inconsistencies in the command usage and User Guide.",
            "insertions": 99,
            "deletions": 62
          }
        ]
      }
    ],
    "chyeo": [
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2019-02-18",
        "commitResults": [
          {
            "hash": "2404833bedb47348ded0528eaa750688929b0ce0",
            "messageTitle": "AboutUs: add ChengHong\u0027s details (#5)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 146,
        "deletions": 2,
        "date": "2019-02-26",
        "commitResults": [
          {
            "hash": "d3fc3d21772062080cac237d631298a2dde7b988",
            "messageTitle": "AboutUs: add Yeo Cheng Hong\u0027s details",
            "messageBody": "Let\u0027s update the documentaton to align with the project requirements:\n* change chyeo.jpg to chyeo.png\n* adding a personal project portfolio template\n* update roles and responsibilities\n",
            "insertions": 73,
            "deletions": 1
          },
          {
            "hash": "e3b8ad1c6833f27813fe177b199b524a9566c061",
            "messageTitle": "AboutUs: add Yeo Cheng Hong\u0027s details (#19)",
            "messageBody": "Previously in #5, `About Us.adoc` was updated to include:\r\n* Yeo Cheng Hong\u0027s GitHub profile URL\r\n* Yeo Cheng Hong\u0027s avatar picture\r\n* Yeo Cheng Hong\u0027s responsibilities\r\n\r\nHowever, the image was erroneously suffixed with `.jpg` instead of \r\n`.png`. Furthermore, the personal project portfolio was not updated yet.\r\n\r\nLet\u0027s fix this by updating the documentation to include Yeo Cheng Hong\u0027s\r\ndetails through:\r\n* renaming the avatar image file extension from `.jpg` to `.png`\r\n* adding a personal project portfolio template",
            "insertions": 73,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-02-28",
        "commitResults": [
          {
            "hash": "19e33f3472468854c9968ba525710e0de3f743db",
            "messageTitle": "AboutUs: add Yeo Cheng Hong\u0027s details",
            "messageBody": "Let\u0027s update the documentation to align with the project requirements:\n* reference the image on the document to chyeo.png\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 3319,
        "deletions": 1940,
        "date": "2019-03-04",
        "commitResults": [
          {
            "hash": "9f5609cfbbec54a5d46ce2d293422ce4adfc9ba2",
            "messageTitle": "Requirement: add `Requirement` Model",
            "messageBody": "",
            "insertions": 102,
            "deletions": 0
          },
          {
            "hash": "fbf205539f9ff0503aeb8a19c6068349d2e53098",
            "messageTitle": "Requirement: add UniqueRequirementList",
            "messageBody": "",
            "insertions": 139,
            "deletions": 0
          },
          {
            "hash": "9c16b81a4d84d20afc68b42bbd2d62bfca2d1354",
            "messageTitle": "Requirement: add ModuleList",
            "messageBody": "",
            "insertions": 54,
            "deletions": 0
          },
          {
            "hash": "5d4e514b841eda61fd7c152569d8c74aeb9b68ba",
            "messageTitle": "Requirement: add Requirement exceptions",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          },
          {
            "hash": "584f1e5a8a7a89f58503d601548730d03ebeb7ab",
            "messageTitle": "Model: add RequirementModel",
            "messageBody": "",
            "insertions": 78,
            "deletions": 0
          },
          {
            "hash": "7c2945c03f4a7e363c72995d538cf15d1b174b1c",
            "messageTitle": "Model: add RequirementList",
            "messageBody": "",
            "insertions": 122,
            "deletions": 0
          },
          {
            "hash": "1da3f02e0cc2e34531193de79869e7710eefa7b0",
            "messageTitle": "Model: add ReadOnlyRequirementList",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "9515c1c7358bc8544e179084e736056b164b4a6c",
            "messageTitle": "Model: add VersionedRequirementList",
            "messageBody": "",
            "insertions": 110,
            "deletions": 0
          },
          {
            "hash": "c79f0d1075888ea2d9c3316cc925abb7935e44ee",
            "messageTitle": "Model: add ModelManager methods",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "63924a9c12486a42c0602fcc0e1d21351905aec4",
            "messageTitle": "Model: update to handle Requirement",
            "messageBody": "",
            "insertions": 155,
            "deletions": 5
          },
          {
            "hash": "fe2f5f073e787713c841a15b57c8f789082e33e5",
            "messageTitle": "Model: update UserPref to prep Requirement storage",
            "messageBody": "",
            "insertions": 17,
            "deletions": 1
          },
          {
            "hash": "8d37eb9695218cd0ff721527619e7d9a392941cd",
            "messageTitle": "Model: add sample data generator for Requirement",
            "messageBody": "",
            "insertions": 48,
            "deletions": 0
          },
          {
            "hash": "8b0fc531167de6a3276e01cb247b92fc2b639926",
            "messageTitle": "Storage: add RequirementList storage",
            "messageBody": "",
            "insertions": 47,
            "deletions": 0
          },
          {
            "hash": "79abf7d40332733058dcc41bd93a77935af628a9",
            "messageTitle": "Storage: add Json files to handle RequirementList",
            "messageBody": "",
            "insertions": 270,
            "deletions": 0
          },
          {
            "hash": "3d05c6893f7f7518395efd93ddff135d99f84b0e",
            "messageTitle": "Storage: update to handle RequirementList",
            "messageBody": "",
            "insertions": 47,
            "deletions": 2
          },
          {
            "hash": "4ed3b4f3d061f1ba88e7d19323962fdd6e5c95df",
            "messageTitle": "MainApp: update to handle storage for RequirementList",
            "messageBody": "",
            "insertions": 28,
            "deletions": 2
          },
          {
            "hash": "ae8bbe6538857a40af41dafc39cd11414f14b68a",
            "messageTitle": "Checkstyle errors correction",
            "messageBody": "",
            "insertions": 362,
            "deletions": 414
          },
          {
            "hash": "2f71e827d6ab04122206dd111649a494be39776f",
            "messageTitle": "Test: update to include RequirementList",
            "messageBody": "",
            "insertions": 167,
            "deletions": 54
          },
          {
            "hash": "3a753bb1b97baa49435c680ed3527d88cd13929c",
            "messageTitle": "Model: refractor \u0027Requirement\u0027 to \u0027RequirementCategory\u0027",
            "messageBody": "",
            "insertions": 1370,
            "deletions": 1349
          },
          {
            "hash": "b545d8549ae6e32d732cdd693ee11b4f71acb52c",
            "messageTitle": "Fix Checkstyle Errors",
            "messageBody": "",
            "insertions": 94,
            "deletions": 94
          },
          {
            "hash": "5d1b3086d3be17a1d781b880905e6e46a6a5c2ba",
            "messageTitle": "Model: update SampleRequirementCategoryUtil",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "c912b20389c5e77f5c6c65c07168d9e9822be4e7",
            "messageTitle": "docs/UserGuide: update to include `requirement_*` command usage",
            "messageBody": "The current User Guide does not contain any commands and details related\r\nto requirement categories.\r\n\r\nLet\u0027s update the UserG uide to include command usage and examples on \r\ncommands related to requirement categories.",
            "insertions": 67,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 1031,
        "deletions": 1264,
        "date": "2019-03-16",
        "commitResults": [
          {
            "hash": "e2c26ed53e743d4a6a33754e48cab16be31ac1c8",
            "messageTitle": "Model: Depreciate VersionedRequirementCategoryList",
            "messageBody": "In order to combine \u0027VersionedRequirementCategory\u0027 into\n\u0027VersionedAddressBook\u0027, the following steps were taken in this\ncommit:\n\n- methods from \u0027RequirementCategoryList\u0027 was re-initialized in\n  \u0027AddressBook\u0027\n\n- methods from \u0027ReadOnlyRequirementCategoryList\u0027 was re-initialized\n  in \u0027ReadOnlyAddressBook\u0027\n\n- \u0027Model\u0027, \u0027ModelManager\u0027 and \u0027AddressBook\u0027 was updated to referenced\n  the new methods initialized in \u0027AddressBook\u0027 and \u0027ReadOnlyAddressBook\u0027\n\n- \u0027ReadOnlyRequirementCategoryList\u0027, \u0027RequirementCategoryList\u0027 and\n  \u0027RequirementCategoryModel\u0027 were depreciated as no more reference to\n  these files were made\n\n- \u0027SampleRequirementCategoryUtil\u0027 was depreciated and the methods to\n  generate sample data was add in \u0027SampleDataUtil\u0027\n",
            "insertions": 173,
            "deletions": 454
          },
          {
            "hash": "9aa541fc48d2785af7b985397e47b79fd6eb2279",
            "messageTitle": "Logic: update current logic classes to faciliate combination",
            "messageBody": "In order to combine \u0027VersionedRequirementCategory\u0027 into\n\u0027VersionedAddressBook\u0027, the logic classes must be updated as well.\n\nThe following are steps taken in this commit:\n\n- initialize \u0027RequirementCategory\u0027 methods in \u0027Logic\u0027\n\n- initialize \u0027RequirementCategory\u0027 methods in \u0027LogicManager\u0027\n\n- update \u0027SampleDataUtil\u0027 to generate sample \u0027RequirementCategory\u0027\n  data if storage data files are not present\n\n- update \u0027ModelManager\u0027 to reference methods in \u0027AddressBook\u0027\n\n- \u0027JsonRequirementCategoryListStorage\u0027 and\n  \u0027RequirementCategoryListStorage\u0027 were depreciated as no more\n  references to these files were made\n",
            "insertions": 43,
            "deletions": 131
          },
          {
            "hash": "05d0aa15879ac6d9e8c4d936759f1e861038c72a",
            "messageTitle": "Storage: update on files to reference \u0027RequirementCategory\u0027 methods",
            "messageBody": "\u0027JsonRequirementCategoryListStorage\u0027 and\n\u0027RequirementCategoryListStorage\u0027 was created with new methods to\nfaciliate the combination of \u0027VersionRequirementCategory\u0027 into\n\u0027VersionedAddressBook\u0027. Hence the current storage files must be upated\nin order to reference methods in the newly created files\n\nThe following are changes made in this commit:\n\n- Created \u0027JsonRequirementCategoryListStorage\u0027 and\n  \u0027RequirementCategoryListStorage\u0027 with new \u0027RequirementCategory\u0027 methods\n\n- Update on \u0027JsonSerializableRequirementCategoryList\u0027, \u0027Storage\u0027 and\n \u0027StorageManager\u0027 to refence methods in the newly created files\n",
            "insertions": 141,
            "deletions": 13
          },
          {
            "hash": "db5f8d35d4ca2de20849b0316b57314205c68f62",
            "messageTitle": "Main: update \u0027MainApp\u0027 to dereference old \u0027RequirementCategory\u0027 methods",
            "messageBody": "The \u0027MainApp\u0027 is still referencing old methods, new methods have been\ncreated to faciliate the combination of \u0027VersionedRequirementCategory\u0027\ninto \u0027VersionedAddressBook\u0027\n\nThe \u0027MainApp\u0027 must be updated to remove any old references\n",
            "insertions": 3,
            "deletions": 23
          },
          {
            "hash": "9915b2ee6660fba607cc763c5a00fb7c3cc6271f",
            "messageTitle": "Model: update \u0027RequirementCategory\u0027 storage file path location",
            "messageBody": "As \u0027VersionedRequirementCategory\u0027 is being combined into\n\u0027VersionedAddressBook\u0027, the storage file path location for\n\u0027RequirementCategory\u0027 must be updated as well\n\nThe following are changes made in this commit:\n\n- Storage file path location was updated in \u0027UserPref\u0027\n\n- \u0027SampleDataUtil\u0027 was updated to include \"General Education\" and\n  \"Unrestricted Electives\" requirement categories\n\n- \u0027ModelManager\u0027 was updated to reference a \u0027RequirementCategory\u0027 method\n\n- \u0027JsonRequirementCategoryListStorage\u0027,\n  \u0027JsonSerializableRequirementCategoryList\u0027 and\n  \u0027RequirementCategoryListStorage\u0027 were depreciated as a storage file\n  path location was being referenced\n",
            "insertions": 10,
            "deletions": 197
          },
          {
            "hash": "5b8ba6cf17b9c2abc169c3f4b943edf258d2a12f",
            "messageTitle": "Storage: update to reference new \u0027RequirementCategory\u0027 storage location",
            "messageBody": "The \u0027RequirementCategory\u0027 data storage location was updated to faciliate\nthe combination of \u0027VersionedRequirementCategory\u0027 into\n\u0027VersionedAddressBook\u0027. The current storage files must be updated to\nreference the new data storage location.\n\nThe following are changes made in this commit:\n\n- \u0027RequirementCategory\u0027 methods are added to \u0027AddressBookStorage\u0027 so\n that other storage files are able to reference the\n \u0027RequirementCategory\u0027 methods\n\n- \u0027JsonAddressBookStorage\u0027 is updated to include logic to read and write\n  to the new data storage location\n\n- \u0027JsonSerializableAddressBook\u0027 is updated to be able to interact with\n  the new data storage file\n\n- \u0027Storage\u0027 and \u0027StorageManager\u0027 are updated in accordance to the\n  to the above changes\n",
            "insertions": 103,
            "deletions": 9
          },
          {
            "hash": "35b6932bee8ec550dacfac0aaabf48a5cad7442d",
            "messageTitle": "Main: update \u0027MainApp\u0027 to reference new \u0027JsonAddressBookStorage\u0027 methods",
            "messageBody": "Changes were made to \u0027JsonAddressBookStorage\u0027 to faciliate the\ncombination of \u0027VersionedRequiremetnCategory\u0027 into\n\u0027VersionedAddressBook\u0027.\n\n\u0027MainApp\u0027 must be updated as well so that it is able to reference\nmethods in \u0027JsonAddressBookStorage\u0027\n",
            "insertions": 2,
            "deletions": 4
          },
          {
            "hash": "7db08cd7ef154b8feeb24f6161d98d16c68a8f9d",
            "messageTitle": "Test: update on existing test cases",
            "messageBody": "As multiple changes were made to logic classes, storage classes\nand \u0027MainApp\u0027. The existing test cases must be updated as well\nso that the changes made can be tested.\n\nThe test cases are updated accordingly to the changes made.\n",
            "insertions": 53,
            "deletions": 74
          },
          {
            "hash": "4ebc7c50248c465e4959122862271349754740b4",
            "messageTitle": "Fix checkstyle issues",
            "messageBody": "Some checkstyle issues were encounted during the integration process.\n\nTo ensure that the new or edited codes have the same styling and standards,\nthe checkstyle issues encountered must be fix before the changes can be\nmerged.\n",
            "insertions": 39,
            "deletions": 37
          },
          {
            "hash": "7c96bba54984b3df7f51cc3944547e2e10090b3b",
            "messageTitle": "Storage: implementing a new storage model",
            "messageBody": "After a series of discussion and considerations, the group have\ndecided to implement a new storage model. Where \u0027JsonAddressBookStorage\u0027\nwill now only be able to interact with \u0027JsonSerializableAddressBook\u0027.\n\n\u0027JsonSerialiazbleAddressBook\u0027 will then interact with the following 3\nclasses:\n- \u0027JsonSerializableRequirementCategoryList\u0027\n- \u0027JsonSerializableModuleList\u0027\n- \u0027JsonSerializableDegreePlannerList\u0027\n\n\u0027JsonAddressBookStorage\u0027 will not be able to interact with the above 3\nclasses. It will call methods in \u0027JsonSerializableAddressBook\u0027 instead.\n\nThe following are change made in this commit:\n\n- \u0027RequirementCategory\u0027 will now have its own data storage file as\n  defined in\u0027UserPref\u0027. Previously it was using the same file as\n  addressBook\n\n- \u0027JsonSeriliazbleApplication\u0027 is created with the relevant logic to\n  read and write to data storage files\n\n- \u0027JsonSerializableRequirementCategoryList\u0027 is created with the relevant\n  methods to define how data is stored\n\n- \u0027JsonAddressBookStorage\u0027 is updated accordingly to the above changes\n",
            "insertions": 158,
            "deletions": 72
          },
          {
            "hash": "051dda52ec1972e45814385f0d58d19d6267a4d3",
            "messageTitle": "Storage: update logic flow of reading and storing from Json files",
            "messageBody": "The current implementation now is where the\n\u0027JsonSerializableApplication\u0027 will handle the read and write operations\nto the existing data storage files.\n\nThis should not be the case as \u0027JsonAddressBookStorage\u0027 should be the\none handling these operations. While \u0027JsonSerializableApplication\u0027\nshould only be interacting with the classes of:\n\u0027JsonSerialiazbleAddressBook\u0027\n\u0027JsonSerializableRequirementCategoryList\u0027\n\u0027JsonSerializableDegreePlannerList\u0027\n\nThe following are changes made in this commit:\n\n- Move reading and saving of storage data files from\n  \u0027JsonSerializableApplication\u0027 to \u0027JsonAddressBookStorage\u0027\n\n- Initialize methods in \u0027JsonSerializableApplication\u0027 to return the\n  classes of the above mentioned files\n\n- Update to \u0027LogicManager\u0027, \u0027Storage\u0027, \u0027StorageManager\u0027 in accordance with\n  the above changes\n",
            "insertions": 62,
            "deletions": 77
          },
          {
            "hash": "fbeea73cc141ca0460edd7f46de407e6ef3f3e93",
            "messageTitle": "Storage: refactor SerializableAddressBook to SerializableModuleList",
            "messageBody": "The current codes have confusing instances of\n\u0027JsonSerializableAddressBook\u0027 refering to the \u0027Module\u0027 class instead of\nthe entire application.\n\nTo prevent any future confusion and easy of understanding of the codes,\nthe group have decided to:\n- refactor \u0027JsonSerializableAddressBook\u0027 to \u0027JsonSerializableModuleList\u0027\n- refactor \u0027JsonSerializableApplication\u0027 to\n\u0027JsonSerializableAddressBook\u0027\n\nAll relevant files are updated in this commit with accordance to the\nabove changes\n",
            "insertions": 112,
            "deletions": 110
          },
          {
            "hash": "1c08deedc698297014c9a809c4b65adf707081c7",
            "messageTitle": "Test: update of testcases after refactoring",
            "messageBody": "As \u0027JsonSerializableAddressBook\u0027 was refactored to\n\u0027JsonSerailizableModuleList\u0027 and \u0027JsonSerialiazbleApplication\u0027 was\nrefactored to \u0027JsonSerializableAddressBook\u0027 in the previous commit to\nprevent confusion and easy of understanding of the codes.\n\nThe testcases have to be updated as well in order to reflect the changes made.\n",
            "insertions": 132,
            "deletions": 63
          }
        ]
      },
      {
        "insertions": 449,
        "deletions": 110,
        "date": "2019-03-17",
        "commitResults": [
          {
            "hash": "3cc0993b856e4f768e62c8bf4f4bbe2a5ba5e3e8",
            "messageTitle": "Storage: update logic flow of reading and storing from Json files",
            "messageBody": "The current logic flow of \u0027JsonSerializableAddressBook\u0027 is where it\ninitialize 3 instances of \u0027ReadOnlyAddressBook\u0027 - \u0027ModuleList\u0027,\n\u0027DegreePlannerList\u0027 and \u0027RequirementCategoryList\u0027\n\nThe discussed flow was to have\u0027JsonSerializableAddressBook\u0027 combine the\n3 instances and return only 1 \u0027ReadOnlyAddressBook\u0027 to\n\u0027JsonAddressBookStorage\u0027\n\nHence the codes must be updated to have the above logic flow\n\nThe changes made in this commit are:\n\n- \u0027JsonAddressBookStorage\u0027 now passes \u0027ObservableModuleList\u0027 and\n\u0027ObservableRequirementCategoryList\u0027 to\u0027 JsonSerializableAddressBook\u0027\nto be initialized and returning a \u0027ReadOnlyAddressBook\u0027 to\n\u0027JsonAddressBookStorage\u0027\n\nThe testcases are also updated to:\n- include sample RequirementCategory data\n- to use the implemented logic flow\n",
            "insertions": 441,
            "deletions": 109
          },
          {
            "hash": "10a2407332de76bec13bff1ca7c74fe03bef3a58",
            "messageTitle": "systemtests: comment out testcase in \u0027DeleteComandSystemTest\u0027",
            "messageBody": "There is an unknown bug with Travis CI for a testcase in the\nDeleteCommandSystemTest class, where the desired behaviour was where\nthe \u0027Assert\u0027 class returns true.\n\nHowever, for unknown reasons the \u0027Assert\u0027 class wil always return false\nwhen the testcase was executed in Travis CI on github.\n\nThe group has ran the testcase locally on 3 different Operating Systems\nplatforms: Windows, Mac, and Ubuntu. In addition the testcase was also\nran multiple times, each time with parameters such as \"gui\" and \"headless\".\n\nAnd for every Operating System and manual tests the above mentioned testcase\nalways returns a success.\n\nOn github, Appveyor too returns a success for the above mentioned\ntestcase and the group was stumped to why Travis CI was failin this\ntestcase.\n\nAfter discussion, the group agreed upon to comment this buggy this test\nunit for now and will revist this particular testcase in the future.\n",
            "insertions": 8,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 401,
        "deletions": 43,
        "date": "2019-03-18",
        "commitResults": [
          {
            "hash": "a5aae05ed2190caed65ab8513a6c7f3d7157071a",
            "messageTitle": "SampleDataUtil: update data in preparation for new command",
            "messageBody": "The new command will need some sample data in order to test if the\ncommand was correctly implemented.\n\nLet\u0027s update the current sample data to allow the user to test if the\nnew command is working as desired.\n",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "7e4839e6b687d4ae0311c89de6445f3e24e08373",
            "messageTitle": "RequirementCategoryBuilder: update to faciliate new command",
            "messageBody": "As a new command will be added, the \u0027RequirementCategoryBuilder\u0027 was\nvalidated to see if there are any conflicting attributes or methods\nthat may cause a problem at a later stage.\n\nUpon insepction, a few comments and methods have to be updated. Let\u0027s\nupdate the \u0027RequirementCategoryBuilder\u0027 class so that it will not have\nany conflicting issues when the new command is implemented.\n",
            "insertions": 9,
            "deletions": 8
          },
          {
            "hash": "8aa4241caa8433d48bf6917ad8f22e6c9954fa3e",
            "messageTitle": " commands: add \u0027RequirementAddCommand\u0027 class with uninitialized methods",
            "messageBody": "In order for the program to be able to handle a new command, a class\nmust first be created to handle the logic flow for the new command.\n\nIn this case, a command to add a module to an existing requirment\ncategory is to be implemented.\n\nLet\u0027s create a skeleton \u0027RequirmentAddCommand\u0027 class with uninitialzed\nmethods to show how the logic would flow for the new command. Let\u0027s also\nadd in instructions on how the command is to be used as well as error\nmessages that will be displayed if an error was to occur.\n",
            "insertions": 72,
            "deletions": 0
          },
          {
            "hash": "902f9d989e15c3dbc8bf52d392f69b56a635d94a",
            "messageTitle": "commands: initialize methods created in \u0027RequirementAddCommand\u0027 class",
            "messageBody": "The methods created in the \u0027RequirmentAddCommand\u0027 class is to have a\nskeleton for the logic flow of the new command. However the methods\ncreated have not yet been referenced in the \u0027Model\u0027, \u0027ModelManager\u0027,\n\u0027AddressBook\u0027 and \u0027AddCommandTest\u0027\n\nLet\u0027s add the method created in the \u0027RequirementAddCommand\u0027 class so\nthat the application is able to reference to these methods.\n",
            "insertions": 81,
            "deletions": 3
          },
          {
            "hash": "5416804cee9fa3a331e0b3fb569abb17c9aa6b1c",
            "messageTitle": "UniqueRequirementCategoryList: implement logic of initialized methods",
            "messageBody": "The skeleton for the new command have been created where a module is\nadded to an existing requirment category in the \u0027RequirementAddCommand\u0027\nclass. However, the logic to how the commands work have not been added\nyet.\n\nLet\u0027s add the logic for the commands in the\n\u0027UniqueRequirementCategoryList\u0027 class to allow the new command to work\nproperly.\n\n* The \u0027location()\u0027 method will return the position of the desired\nrequirement category in the requirment category list\n\n* The \u0027isModuleInRequirmentCategory()\u0027 method checks if the requirement\ncategory already contains the module to be added\n\n* The \u0027doesModuleExistInApplication()\u0027 method checks if a module exists in the\nexisting moduleList in the application\n\n* The \u0027addModuleToRequirmentCategory()\u0027 method adds the module entered\nto a requirement category\n",
            "insertions": 84,
            "deletions": 0
          },
          {
            "hash": "06652063d722b87bed84bdf934b044451b5afbf6",
            "messageTitle": "parser: implementing \u0027RequirementAddCommandParser\u0027 for the new command",
            "messageBody": "After the skeleton and logic for the new command is implemented, the\nway the data is read from the user\u0027s input must be implemented as well\nso that the data can be passed to the logic and then stored into the\ndata storage files.\n\nLet\u0027s implement the parser needed in order to read the user\u0027s input data\nand pass it to \u0027RequirmentAddCommand\u0027 class.\n\n* \u0027RequirmentAddCommandParser\u0027 class was created to parse the input data\nbased on the \u0027name\u0027 and \u0027code\u0027 prefixes.\n\n- The \u0027RequirmentAddCommandParser\u0027 parsers the name to be the requirment\n  category to add the module to\n\n- The \u0027RequirementAddCommandParser\u0027 parsers the code to be the modules\n  that will be added to the requirment category\n\n- The \u0027RequirementAddCommandParser\u0027 will then create a temporary\n  list of modules with temporary data, except for the module codes\n  which will be validated in the \u0027RequirementAddCommand\u0027 class\n\n* A \u0027parseCodes\u0027 method was created in \u0027ParserUtil\u0027 to return back a\n  list of module codes\n",
            "insertions": 63,
            "deletions": 0
          },
          {
            "hash": "9c49a7b05e7f0f843922117df016f98f8fcd47c1",
            "messageTitle": "AddressBookParser: update to allow application to take in new command",
            "messageBody": "After the logic and parsing of the user input have been implemented, the\napplication itself must be able to take in the command and call the\nrelevant classess implemented for the command to work.\n\nLet\u0027s allow the application to be able to take in the command by\nupdating \u0027AddressBookParser\u0027\n",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "f3cfd26fba619da53785f88464284237e758f100",
            "messageTitle": "test: create new testcases for the implemented command",
            "messageBody": "The new command adds an existing module to a requirment category.\n\nIn order for the application to test for desired behaviours, new\ntestcases have been created to test the response of the application if\nundesired inputs were entered.\n\nNew testcases added are:\n - a null input is given\n - a non-existent requirement category is given\n - a non-existent module is given\n - a valid input is given\n",
            "insertions": 81,
            "deletions": 0
          },
          {
            "hash": "bd0cf5aa0acc4bdd4d70d5890941dcfa9074a80f",
            "messageTitle": "fix checkstyle issue",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "ed4bd10aeba6332c6d86abf9c1d1d9e09caa67d0",
            "messageTitle": "Fix checkystyle issues",
            "messageBody": "",
            "insertions": 0,
            "deletions": 25
          },
          {
            "hash": "576f6049c23c52863ce82a5fc5c9d6e0f4d46d30",
            "messageTitle": "Fix checkystyle issues",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-03-19",
        "commitResults": [
          {
            "hash": "abe90355d6af7a5700b5040ab2c4f16f1cbd2bd9",
            "messageTitle": "UserGuide: update to reflect current implementation (#103)",
            "messageBody": "Currently, UserGuide states that requirment_add command is not\r\nimplemented.\r\n\r\nLet\u0027s update it by removing [coming in v2.0] tag.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 228,
        "deletions": 242,
        "date": "2019-03-25",
        "commitResults": [
          {
            "hash": "4f2a462cd41aba408cf58c5e31c704deee791e94",
            "messageTitle": "requirement: update logic of new command and checks",
            "messageBody": "The current implementations, creates a new RequirementCategory object\nwith the parsed data and a temp Credit variable. The RequirementCategory\nobjected created will then be passed to the \u0027RequirementAddCommand\u0027\nclass.\n\nThe new logic update will not create a new RequirementCategory object\nand instead only pass data that was parsed. In this case, only the Name\nand Set\u003cCode\u003e will be passed to \u0027RequirementAddCommand\u0027 class.\n\nThe current implementation of the \u0027requirement_add\u0027 command has a bug\nwhere no more than 1 module code can be added to a requirement category.\nThe bug was caused by not using a new Set\u003cCode\u003e variable, when a module\ncode is added to a requirement category with a module code already added\nto it.\n\nThe update of the logic when a module code is added to a requirement\ncategory now adds to a new Set\u003cCode\u003e variable and updates the total\namount of credits of a requirement category based on the modules added\nto the requirement category.\n\nThe location method was updated to return an RequirementCategory object\ninstead of a interger value.\n\nThe other methods were updated accordingly to the data that was parsed,\ninstead of a \u0027RequirementCategory\u0027 object.\n",
            "insertions": 36,
            "deletions": 96
          },
          {
            "hash": "ab6a8cd593885fdb811cfcca29131fca43339bcb",
            "messageTitle": "Update to files to reference updated methods",
            "messageBody": "As the methods and logic in \u0027UniqueRequirementCategoryList\u0027 were updated\nto the take in data that was parsed instead of an \u0027RequirementCategory\u0027\nobject. The relevant classes that are referencing the methods were\nupdated.\n",
            "insertions": 43,
            "deletions": 72
          },
          {
            "hash": "f50bf6133fd68ac714417e30eba85c11b8632e0b",
            "messageTitle": "RequirementAddCommand: update methods and to receive data parsed",
            "messageBody": "The current \u0027RequirementAddCommand\u0027 class was to receive a\nRequirementCategory object. The RequirementCategory object will then\npassed to various methods for checking and validation before adding\nthe module code to the requirement category.\n\nThe updated \u0027RequirementAddCommand\u0027 class now only takes in the data\nthat was parsed only and then pass the relevant data to methods for\nchecking and validation.\n\nThe name of the error messages are also updated according to the methods\nname.\n",
            "insertions": 46,
            "deletions": 28
          },
          {
            "hash": "e7d783021db8d3e6b2585a50576887c21dc5bb84",
            "messageTitle": "AddCommandTest: update to reference updated methods",
            "messageBody": "Methods in \u0027AddCommandTest\u0027 were updated to reference the methods\nthat were updated in the previous commit\n",
            "insertions": 36,
            "deletions": 29
          },
          {
            "hash": "3b83bef87a86c97d49c0edaa5f67ab7a1425b482",
            "messageTitle": "test: update on test data generated",
            "messageBody": "A module code was added to the test data to be generated to faciliate\nin the testing of the \u0027requirement_add\u0027 command\n",
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "e799553f47ab3cc20498973acca73c450db6d6e5",
            "messageTitle": "RequirementAddCommandTest: update to add in new test cases",
            "messageBody": "\u0027RequirementAddCommanTest\u0027 was referencing the old methods on where a\nRequirementCategory object was being passed to \u0027RequirementAddCommand\u0027\nclass instead of the data that was parsed.\n\nThe current test cases were updated accordingly to pass in only related\ndata.\n\nNew test cases were added to test for behaviour for:\n- if the module code was already added to the requirement category\n- if the module code can be successfully added into a requirement\ncategory\n",
            "insertions": 22,
            "deletions": 8
          },
          {
            "hash": "dd67dd0b4c8624f508ed831e95ad8f92e443ea73",
            "messageTitle": "DeveloperGuide: include design considerations on requirement_add command (#105)",
            "messageBody": "The current DeveloperGuide has very little content regarding the various design considerations that was made while developing this application\r\n\r\nLet\u0027s add in the design considerations for the \u0027requirement_add\u0027 command into the DeveloperGuide",
            "insertions": 36,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 239,
        "deletions": 9,
        "date": "2019-03-31",
        "commitResults": [
          {
            "hash": "ea4b496bb17c127d2777ad0493efccfae6c9185d",
            "messageTitle": "Logic: implement \u0027requirement_list\u0027 command",
            "messageBody": "The logic of the command is created in \u0027RequirementListCommand\u0027 and the\napplication is updated to be able to handle the command\n\u0027requirement_list\u0027 when it is entered into the application\n\n\u0027UniqueModuleList\u0027 is also modified to overload the \u0027contains\u0027 method\nto return a \u0027Module\u0027 object when a module code is provided\n\nAll files are also updated to reference the overloaded \u0027contains\u0027 method\n",
            "insertions": 115,
            "deletions": 5
          },
          {
            "hash": "a3c88622c062b5ac16355d3d5ac1297ee32e050f",
            "messageTitle": "test: creating test cases for new command",
            "messageBody": "Test cases for the new command is created to determine if the command\nbehaves as inteneted.\n",
            "insertions": 71,
            "deletions": 2
          },
          {
            "hash": "b296c335d985341b5cf5f308e8c18f9ac174b711",
            "messageTitle": "view: creating UI panels to display requirement categories",
            "messageBody": "In order for the requirement categories to be displayed on the\napplication, new panels and cards must be created\n\n* \u0027RequirementCategoryListCard\u0027 will format how the data will be\n  displayed\n\n* \u0027RequirementCategoryListPanel\u0027 will act as a container to contain all the data\n  that will be displayed\n\n* \u0027MainWindow\u0027 is updated to include the \u0027RequirementCategoryListPanel\u0027\n",
            "insertions": 53,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 722,
        "deletions": 88,
        "date": "2019-04-01",
        "commitResults": [
          {
            "hash": "3a3c229c368cc12283c08143b56b9bbbc7ccd6f0",
            "messageTitle": "UI: implement the logic to display the requirement categories",
            "messageBody": "The logic to populate the data needs to be impelmented so that the\nrelevant information can be displayed\n\n* \u0027MainWindow\u0027 will pass the \u0027RequirmentCategoryList\u0027 and \u0027ModuleList\u0027\n to \u0027RequirementCategoryListPanel\u0027\n\n* \u0027RequirementCategoryListPanel\u0027 and \u0027RequirementCategoryCard\u0027 will then initialize\n and pass in the requirement category and the module list to populate\n and display the data\n",
            "insertions": 159,
            "deletions": 0
          },
          {
            "hash": "57423a9f83af5ec2ad4708d63db8ee450edac1d0",
            "messageTitle": "Update CSS for display the requirement categories",
            "messageBody": "Some CSS were edited to ensure that the UI is able to display the\nrequirment categories as intented\n",
            "insertions": 38,
            "deletions": 20
          },
          {
            "hash": "4f95dbad14fb2f7c5ece50e193bf99539e6ba6b8",
            "messageTitle": "Fixing files with merge conflict issues",
            "messageBody": "",
            "insertions": 6,
            "deletions": 7
          },
          {
            "hash": "0fc735ad74dff29f96b1d460d76170e86208b44e",
            "messageTitle": "Logic: implement logic for \u0027requirement_remove\u0027 command",
            "messageBody": "To implement a new command, the following classes are created in order\nto process the logic flow for the command\n\n* RequirementRemoveCommandParser: to parse the input data before passing\nthe data to \u0027RequirementRemoveCommand\u0027\n\n* RequirementRemoveCommand: handles the logic and checks to which the\nspecified data is exists from the coressponding requirement category\n",
            "insertions": 136,
            "deletions": 0
          },
          {
            "hash": "dcb0e39a153b8999c836986dd9a4cac49e91df01",
            "messageTitle": "AddressBookParser: update to take in \u0027requirement_remove\u0027 command",
            "messageBody": "Update to allow the application to take in the new command and to ensure\nthat the data is passed to the correct java classes\n",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "fe50e68280d7202f3ba70ebdcac4be57cccbfa51",
            "messageTitle": "RequirementRemoveCommandTest: create test cases for implemented command",
            "messageBody": "To test the desired behaviour for the new command, test cases are\ncreated to see if the application handles negative and positive inputs\nin the correct format\n\nTest cases for the parser class is also created as well\n",
            "insertions": 259,
            "deletions": 9
          },
          {
            "hash": "b492dc90d1a7c75ad5ba80495b6880171c2c1d88",
            "messageTitle": "docs/UserGuide: update requirement-related command usages (#149)",
            "messageBody": "The current implementation has added support for \u0027requirement_remove\u0027\r\nand \u0027requirement_list\u0027 commands. Our User Guide does not contain the\r\nlatest information about these commands.\r\n\r\nThis may cause confusion among users who would want to know how to\r\nremove/list module codes from requirement categories.\r\n\r\nLet\u0027s update the User Guide to reflect the new changes to\r\nrequirement-related commmands pertaining to how to remove/list module\r\ncodes from requirement categories.",
            "insertions": 24,
            "deletions": 24
          },
          {
            "hash": "c002733bb919b8ea84a5de47154e1ff27ef9e02c",
            "messageTitle": "docs/DeveloperGuide: update requirement design considerations (#155)",
            "messageBody": "We have added support for \u0027requirement_list\u0027 and \u0027requirement_remove\u0027\r\ncommands. However, the Developer Guide does not contain the relevant\r\nimpelmentation details.\r\n\r\nLet\u0027s update the Developer Guide to include details of the current\r\nimplementations and design considerations for the \u0027requirment_list\u0027\r\ncommand.",
            "insertions": 96,
            "deletions": 28
          }
        ]
      },
      {
        "insertions": 261,
        "deletions": 16,
        "date": "2019-04-08",
        "commitResults": [
          {
            "hash": "f30bb950c603f0dff478f51263b840953443b5ce",
            "messageTitle": "Model: update \u0027UniqueRequirementCategoryList\u0027 checking method",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "2c059d2d79bac69a88aaecb393565e9b63811398",
            "messageTitle": "Logic: update all requirement commands",
            "messageBody": "",
            "insertions": 10,
            "deletions": 7
          },
          {
            "hash": "83f0e4885c431f3d2f810e2d28ab68a1f045863c",
            "messageTitle": "test/parser: add test case for \u0027requirement-add\u0027 command",
            "messageBody": "",
            "insertions": 248,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 1854,
        "deletions": 372,
        "date": "2019-04-14",
        "commitResults": [
          {
            "hash": "a7de2dd3afdf5b1d2b00852cabba44ab2613bb7e",
            "messageTitle": "Logic: create logic for \u0027requirement_move\u0027 command",
            "messageBody": "Currently our application does not allow users to move the modules that\nhave been added to requirement categories.\n\nThis makes it difficult for users when they are moving the modules in\nthe requirement category around. They would have to delete and add the\nmodules multiple times during the moving process.\n\nTo address these issues, let\u0027s add the \u0027requirement_move\u0027 command to\nallow users to move modules in the requirement category.\n\nFirst, let\u0027s implement the logic to handle how the modules are going to\nbe moved from one requirement category to another.\n\n- \u0027RequirementMoveCommandParser\u0027 is used to parse in the user input\n\n- \u0027RequirementMoveCommand\u0027 is used to handle the parsed input and this\n class is where most of the logic reside\n",
            "insertions": 278,
            "deletions": 0
          },
          {
            "hash": "7778aacb6f6a85cda9a535c0d8c2e3261ea0f534",
            "messageTitle": "Logic: update application to take in new command",
            "messageBody": "- \u0027ApplicationParser\u0027 is updated to take in the new command implemented\n",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "434f419b5915d6603246d99c55b122f67533d438",
            "messageTitle": "test/parser: creating test cases for new command",
            "messageBody": "In order to determine if the new command behaves as intended, test cases\nare created to determine the behvaiour of the command.\n",
            "insertions": 495,
            "deletions": 39
          },
          {
            "hash": "93fbb76ce3ad082ab1545fd0e9372fdc8987b858",
            "messageTitle": "Logic: update \u0027requirement_remove\u0027 command logic",
            "messageBody": "",
            "insertions": 82,
            "deletions": 43
          },
          {
            "hash": "398096eb3346970d679fa863499a8dc66b7377d9",
            "messageTitle": "test/parser: update test case for updated command logic",
            "messageBody": "",
            "insertions": 44,
            "deletions": 33
          },
          {
            "hash": "2be3da0e8b3bf08440f56118157424bbca5948a9",
            "messageTitle": "test/logic: update test cases to reflect new command logic",
            "messageBody": "",
            "insertions": 100,
            "deletions": 67
          },
          {
            "hash": "ecd939a15ca567a7180b26fbf17c48b3c2808137",
            "messageTitle": "Test/requirement: adding test cases for \u0027RequirementCategory\u0027 classes",
            "messageBody": "",
            "insertions": 289,
            "deletions": 0
          },
          {
            "hash": "d982a9836c9f460619719a9e8fbba50483f43cdb",
            "messageTitle": "test: update \u0027requirement_add\u0027 command test cases",
            "messageBody": "",
            "insertions": 103,
            "deletions": 56
          },
          {
            "hash": "6c686c78e5be01b760f37bea14b0256693bf5818",
            "messageTitle": "Requirement: refactor \u0027collectors\u0027 to \u0027StringUtil\u0027",
            "messageBody": "",
            "insertions": 41,
            "deletions": 44
          },
          {
            "hash": "d6d5b1c731d5d93aae2556980481d371ffd29a83",
            "messageTitle": "docs/UserGuide: update User Guide for Requirements Tracker (#228)",
            "messageBody": "Let\u0027s update the User Guide `Requirements Tracker` section.",
            "insertions": 126,
            "deletions": 43
          },
          {
            "hash": "095c909471db75e0709ece4b2b5a27a367383e12",
            "messageTitle": "docs/DeveloperGuide: update to reflect current impelemtation (#232)",
            "messageBody": "",
            "insertions": 292,
            "deletions": 47
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 35,
        "date": "2019-04-15",
        "commitResults": [
          {
            "hash": "da350504aec0a112e8a99d187e98aed596e336f9",
            "messageTitle": "docs/team: update personal portfolio to reflect changes (#236)",
            "messageBody": "",
            "insertions": 67,
            "deletions": 35
          }
        ]
      }
    ],
    "lycjackie": [
      {
        "insertions": 17,
        "deletions": 290,
        "date": "2019-02-16",
        "commitResults": [
          {
            "hash": "e53c994e3c34a8103fe949a1f2c1581f0ff359b4",
            "messageTitle": "UserGuide: rename `AddressBook` to `PlanWithEase`",
            "messageBody": "Updates all other information accordingly\n",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "bd247b8daf9787d99bb41990775ab91e06c7f3bd",
            "messageTitle": "DeveloperGuide: rename `AddressBook` to `PlanWithEase`",
            "messageBody": "Updates all relevant information\n",
            "insertions": 6,
            "deletions": 8
          },
          {
            "hash": "2f51ac45dc17ca175a48022a41b318a7786e8948",
            "messageTitle": "README: rename `AddressBook` to `PlanWithEase`",
            "messageBody": "Updates relevant information accordingly\n",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "0569ac9babd03a67ae8b16803e2f0260ff8ebfcf",
            "messageTitle": "ContactUs: update issue tracker URL",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "7fc309588ca94f05f57fe3db7c016f25c15eca53",
            "messageTitle": "AboutUs: rename `AddressBook` to `PlanWithEase",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "1cb872af1f07e852644866a97b252cc715e95e03",
            "messageTitle": "docs: delete `LearningOoutcomes`",
            "messageBody": "Since we will not be using this `.adoc` in the future\n\nLet us remove this file to make our repo cleaner\n",
            "insertions": 0,
            "deletions": 271
          }
        ]
      },
      {
        "insertions": 76,
        "deletions": 4,
        "date": "2019-02-18",
        "commitResults": [
          {
            "hash": "053e7892b445b831a5cd45eb846886ea77f0c295",
            "messageTitle": "AboutUs: add Lee Yu Choy\u0027s details (#9)",
            "messageBody": "`About Us.adoc` does not include details of team members in team T09-1.\r\n\r\nLet\u0027s update the documentation to include Lee Yu Choy\u0027s details by:\r\n* adding a personal project portfolio template\r\n* adding an avatar image\r\n* updating roles and responsibilities",
            "insertions": 76,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 3,
        "date": "2019-02-26",
        "commitResults": [
          {
            "hash": "7c9135e5bce9d07a776d097ca6351c16fbcac109",
            "messageTitle": "[#21] `build.gradle`: update project details to fix GitHub pages (#22)",
            "messageBody": "The Gradle configuration file does not include our project URL, and also\r\ncauses GitHub pages to treat our project as a SE-EDU project, which \r\nrenders\r\n\r\nLet\u0027s update `build.gradle` by\r\n* updating our project name\r\n* updating our project GitHub pages URL\r\n* removing the `site-seedu` attribute \r\n\r\nThis fixes and closes #21.",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 396,
        "deletions": 48,
        "date": "2019-03-02",
        "commitResults": [
          {
            "hash": "129e5ba3b8254d2275590a481e833b0f747f08d6",
            "messageTitle": "Model/module: add new abstract class `KeywordsPredicate`",
            "messageBody": "The `FindCommand` only take in `NameContainsKeywordsPredicate`,\n this do not allow us to extend it further for future enhancement\n\nLet\u0027s create an abstract class to prepare ourselves so that\n`FindCommand` will process more attribute other than `Name`\n",
            "insertions": 10,
            "deletions": 0
          },
          {
            "hash": "042762de7b364ac8ba641fa2ad5c352a687c37d0",
            "messageTitle": "Model: make `NameContainsKeywordsPredicate` extends `KeywordsPredicate",
            "messageBody": "`NameContainsKeywordsPredicate` only implements `Predicate\u003cModule\u003e`\n\nAs such this does not allow us to do polymorphism easily.\n\nLet\u0027s extend the class with `KeywordsPredicate` and :\n* cascade all changes to all affected classes\n",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "3d2810020e9d2ed529a3b6e3e9c376f0a36954e3",
            "messageTitle": "Logic: make `FindCommandParser#parse(...)` parse `PREFIX_NAME`",
            "messageBody": "With the plan to include more attributes keyword into the `FindCommand`\n\nAs such, we need to be able to identify which attribute the keyword\nis referring to.\n\nLet\u0027s update `FindCommandParser#parse` to accept `PREFIX_NAME`\n\nDisclaimer: This commit will break all existing unit tests, and will be fixed later on\n",
            "insertions": 17,
            "deletions": 5
          },
          {
            "hash": "2969187abf0cb2ab8dabcfcc1d12df921c5d4119",
            "messageTitle": "commands/FindCommandTest: refactor methods name",
            "messageBody": "With the plan to include more attributes keyword into the `FindCommand`\n\nwe will need to be able to differentiate the test cases.\n\nLet\u0027s refactor the test cases method name to reflect which attribute\nits testing.\n",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "1c62d34916f94bd732e1905e37ffb135b31e3626",
            "messageTitle": "systemtests/FindCommandSystemTest: update broken unit tests in `find()`",
            "messageBody": "We have update the `FindCommand` to require `PREFIX_NAME` to identify\nthe keywords it is finding for.\n\nHowever, this caused the unit tests in `FindCommandSystemTest` class\nto fail.\n\nLet\u0027s fix the faulty unit tests by\n* having the `PREFIX_NAME` appended before the`keyword`\n* cascade the changes to class that uses the previous `find` keyword\n",
            "insertions": 21,
            "deletions": 18
          },
          {
            "hash": "6e948b98d7ea990f11cbd76953ca7a4cf4d490c9",
            "messageTitle": "test/parser: update `AddressBookParserTest` broken unit test",
            "messageBody": "We have update the `FindCommand` to require `PREFIX_NAME` to identify\nthe keywords it is finding for.\n\nHowever, this caused the unit test in `AddressBookParserTest` class\nto fail.\n\nThe broken unit test is\n* parseCommand_find()\n\nLet\u0027s fix the faulty unit tests by\n* having the `PREFIX_NAME` appended before the`keyword`\n",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "51d2926e90fd28b4504a54b6c10f19022d4c57a0",
            "messageTitle": "test/parser: update `FindCommandParserTest` broken unit test",
            "messageBody": "We have update the `FindCommand` to require `PREFIX_NAME` to identify\nthe keywords it is finding for.\n\nHowever, this caused the unit test in `FindCommandParserTest` class\nto fail.\n\nThe broken unit test is\n* parse_validArgs_returnsFindCommand()\n\nLet\u0027s fix the faulty unit tests by\n* having the `PREFIX_NAME` appended before the`keyword`\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "d90a0b14667ae23f4784c32f1c2c2396720d9248",
            "messageTitle": "test/parser: refactor ` FindCommandParserTest` attribute name",
            "messageBody": "With plans to include more attributes keywords in the future,\nwe will need to be able to differentiate the test cases.\n\nLet\u0027s refactor the attribute name to reflect which attribute its\ntesting.\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "8586867f0c798fffbade680f4a0b00f5d89b3521",
            "messageTitle": "Model/module: add `CodeContainsKeywordsPredicate` class",
            "messageBody": "This class help to test if a Module\u0027s `code` matches any of\nthe keywords given\n",
            "insertions": 30,
            "deletions": 0
          },
          {
            "hash": "9d1cdd95d8bdb238cd319fa7adbe4e939564314c",
            "messageTitle": "Logic: make `FindCommandParser#parse(...)` parse `PREFIX_CODE`",
            "messageBody": "With the plan to include more attributes keyword into the `FindCommand`\n\nAs such, we can start off by allowing `FindCommand` to handle the\nsearch of module code.\n\nLet\u0027s update `FindCommandParser#parse` to allow `PREFIX_CODE`\n",
            "insertions": 7,
            "deletions": 1
          },
          {
            "hash": "d2cf37e5c797781de48fbc22c921b92d2fac55fd",
            "messageTitle": "FindCommand: update `MESSAGE_USAGE`",
            "messageBody": "The `FindCommand` now is able to find and list all modules in the\napplication whose name or code contains any of the argument keywords.\n\nAs such, let\u0027s update the `MESSAGE_USAGE` to show appropriate response\n",
            "insertions": 10,
            "deletions": 6
          },
          {
            "hash": "71fe8a74d07cecaf877e362b966251ed0d078b5e",
            "messageTitle": "test/module: add unit tests to `CodeContainsKeywordsPredicateTest`",
            "messageBody": "We have implement `CodeContainsKeywordsPredicate` for our\n`FindCommandParser`\n\nLet\u0027s ensure that the behavior is what we expected by creating new\ntest cases for it.\n",
            "insertions": 78,
            "deletions": 0
          },
          {
            "hash": "f90c2f6507c4dba6e453d73ede9627e0c6af9fdb",
            "messageTitle": "test/parser: add unit test to `FindCommandParserTest`",
            "messageBody": "We have update the `parser` to take in `PREFIX_CODE`\n\nLet\u0027s add test case to ensure that the behavior of`FindCommandParser`\nis what we expect\n",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "554eaf9cf01ebbc048f0a24bae26f682b9818643",
            "messageTitle": "test/commands: add unit test to `FindCommandTest`",
            "messageBody": "The `FindCommand` is now able to find module code.\n\nLet\u0027s add test case to ensure that the behavior of the `FindCommand`\nis what we expect.\n",
            "insertions": 19,
            "deletions": 0
          },
          {
            "hash": "c8ffe342107e79a1a8824837d235983c97f59a16",
            "messageTitle": "systemtests/FindCommandSystemTest: add unit tests",
            "messageBody": "The `FindCommand` is now able to find module code.\n\nLet\u0027s add some simple test case to ensure that the behavior of the\n`FindCommand` is what we expect.\n",
            "insertions": 20,
            "deletions": 0
          },
          {
            "hash": "44bbfcdb1b35fa4225e3ea4a893288fec9d5f2a8",
            "messageTitle": "Model/module: add `CreditsContainsKeywordsPredicate` class",
            "messageBody": "This class help to test if a Module\u0027s `credits` matches any of\nthe keywords given\n",
            "insertions": 30,
            "deletions": 0
          },
          {
            "hash": "623e551f2e1663713f261d7a275d47d406adab19",
            "messageTitle": "Logic: make `FindCommandParser#parse(...)` parse `PREFIX_CREDITS`",
            "messageBody": "The `FindCommand` can search for `Name` and `Code`, however it is not\nsufficient for the user to use the appication efficiently.\n\nAs such, we can extend the `FindCommand` to take in `Credits`\n\nLet\u0027s update`FindCommandParser#parse` to allow `PREFIX_CREDITS`\n",
            "insertions": 7,
            "deletions": 1
          },
          {
            "hash": "3b52d53ae742bd434337d8fec5d0a2828bc239e7",
            "messageTitle": "FindCommand: update `MESSAGE_USAGE`",
            "messageBody": "The `FindCommand` now is able to find and list all modules in the\napplication whose name, code or credits contains any of the argument keywords.\n\nAs such, let\u0027s update the `MESSAGE_USAGE` to show appropriate response\n",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "c57229b3f625bf4da8b1b4ebe7386d2dc9e8ad80",
            "messageTitle": "Logic: refactor `FindCommandParser#parse(...)`",
            "messageBody": "After we include more attribute keywords to parse function, the method\nitself is getting too complex\n\nLet\u0027s extract out the `KeywordsPredicate` parsing into a new method\n",
            "insertions": 6,
            "deletions": 1
          },
          {
            "hash": "04dd0986fbe1bb02dcda4cd097eb6e31442036a4",
            "messageTitle": "test/module: add unit tests to `CreditsContainsKeywordsPredicateTest`",
            "messageBody": "We have implement `CreditsContainsKeywordsPredicate` in\n`FindCommandParser`\n\nLet\u0027s ensure that the behavior is what we expected by creating new\ntest cases for it.\n",
            "insertions": 70,
            "deletions": 0
          },
          {
            "hash": "ea05da395f45d6f5a43041dbbfb869608bcde976",
            "messageTitle": "test/parser: add unit test to `FindCommandParserTest`",
            "messageBody": "We have update the `parser` to take in `PREFIX_CREDITS`\n\nLet\u0027s add test case to ensure that the behavior of`FindCommandParser`\nis what we expect\n",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "ae7d847a10524168d23febcacf50f25ff1519ed5",
            "messageTitle": "test/commands: add unit test to `FindCommandTest`",
            "messageBody": "The `FindCommand` is now able to find module credits.\n\nLet\u0027s add test case to ensure that the behavior of the `FindCommand`\nis what we expect.\n",
            "insertions": 19,
            "deletions": 0
          },
          {
            "hash": "171e28c69b84fc20debc442a8b4d39c35d0c5d8a",
            "messageTitle": "systemtests/FindCommandSystemTest: add unit test",
            "messageBody": "The `FindCommand` is now able to find module credits.\n\nLet\u0027s add some simple test case to ensure that the behavior of the\n`FindCommand` is what we expect.\n",
            "insertions": 18,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 0,
        "date": "2019-03-03",
        "commitResults": [
          {
            "hash": "bbc2fb6ee47cfc77f4465d55ede0255247d3bffd",
            "messageTitle": "docs/images: resize `lycjackie.png` (#39)",
            "messageBody": "The `lycjackie.png` image looks very out of place.\r\n\r\nLet\u0027s resize the image to make it look better on the project list.",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 70,
        "deletions": 36,
        "date": "2019-03-04",
        "commitResults": [
          {
            "hash": "7af3611343a82f2e4538e0ce454e1757a3f747b2",
            "messageTitle": "docs/UserGuide: update `find` command usage (#49)",
            "messageBody": "The `FindCommand` was updated to allow searching of keywords in other \r\nfields apart from `Name, such as:\r\n* `Code`\r\n* `Credits`\r\n\r\nHowever, these changes have yet to been reflected in the User Guide, \r\nwhich may confuse the users.\r\n\r\nLet\u0027s update the User Guide to reflect the changes made to `find` \r\ncommand through updating:\r\n* the `find` command usage\r\n* the examples of `find` command\r\n* the restrictions of `find` command (e.g. able to find one field at a \r\n  time only)",
            "insertions": 26,
            "deletions": 15
          },
          {
            "hash": "5a5606035e6bdeca90fab615dc5fdec572a83da3",
            "messageTitle": "docs/team: remove `dataencryption` tag to fix `asciidoctor` warning",
            "messageBody": "After PR #50 was merged, there was a dangling reference to\nthe `dataencryption` tag on all developer\u0027s Personal Project Portfolio.\n\nLet\u0027s fix this issue by removing the dangling references to the\nnon-existent `dataencryption` tag on all portfolios.\n",
            "insertions": 0,
            "deletions": 10
          },
          {
            "hash": "d959d9f7b30425196a82c4a0ec8d8c2473d92c7c",
            "messageTitle": "README: update acknowledgement",
            "messageBody": "The `AddressBook Level 4` URL was not crediting the original source\nof Address Book (SE-EDU initiative).\n\nLet\u0027s update the acknowledgement by changing the hyperlink\n",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "5cf749cbac4b15c3109e8050342e8cddb99ddb7b",
            "messageTitle": "README: update application description",
            "messageBody": "As our application has morphed from an Address Book application to a\ndegree planner application, the description of the application on\n`README` does not match what our newly morphed application does.\n\nLet’s update the description to suit our application’s purpose\n",
            "insertions": 13,
            "deletions": 7
          },
          {
            "hash": "8004e8333ca9c22cad864aaa6b6e8b40a32d9573",
            "messageTitle": "DeveloperGuide: add `find` module use case (#54)",
            "messageBody": "The use case in the developer guide does not reflect most of our system\r\nfunctional requirements.\r\n\r\nA newer developer that wish to contribute would have a harder time to\r\nensure the proper behaviour between the system and the user.\r\n\r\nLet’s add a use case to show a representation of a user’s interaction\r\nwith the system.",
            "insertions": 28,
            "deletions": 2
          },
          {
            "hash": "6feb9222bbf0bda36d36ace146a8907ac94c773b",
            "messageTitle": "UI: update application title to `PlanWithEase` (#60)",
            "messageBody": "As our application has morphed from an Address Book application to a\r\ndegree planner application, the title on the application now does not match\r\nour newly morph application\r\n\r\nLet\u0027s update the title of the application to `PlanWithEase`.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 191,
        "deletions": 34,
        "date": "2019-03-15",
        "commitResults": [
          {
            "hash": "f500d7e05ca3e611aac3845055da48eb131efa3a",
            "messageTitle": "Logic/ParserUtil: add more helper methods",
            "messageBody": "`ParserUtil` support the parsing of single string to its respective\nclass, however this is not sufficient for us if we want parse a\nan array of string into a list of its respective classes.\n\nLet\u0027s add methods to facilitate this and provide an extra interface for:\n- parsing of multiple module\u0027s names\n- parsing of multiple module\u0027s codes\n- parsing of multiple module\u0027s credits\n",
            "insertions": 60,
            "deletions": 0
          },
          {
            "hash": "e954bce2e3d11cae8f8e9e3a21606ae777923e02",
            "messageTitle": "Logic: Fix `FindCommandParser#getKeywordsPredicate(...)`",
            "messageBody": "As mention in #78, the logic flow in splitting the keywords was not done\nproperly.\n\nThe current behaviour is\n1. Get the argument after find `PREFIX`\n2. Form an `object` with the argument\n3. Convert the `object` into `String`\n4. Split the `String` by whitespaces\n\nThe expected behaviour should be:\n1. Split each argument by whitespaces after the `PREFIX`\n2. Form individual `object` for every `String`\n3. Convert each individual `object `to `String`\n4. Form the search `keywords` using each `String`\n\nLet’s update `FindCommandParser#getKeywordsPredicate(…)` to\nfollow the expected behaviour\n",
            "insertions": 17,
            "deletions": 10
          },
          {
            "hash": "b8404b8e85a7a7da2311f5b15116378e68398dd4",
            "messageTitle": "test/parser: add unit tests to `FindCommandParserTest`",
            "messageBody": "We have update the `parser` logic to be able to parse strings into\nmultiple objects. (i.e. `List\u003cCredits\u003e`)\n\nLet\u0027s add unit tests to ensure that the behaviour of `FindCommandParser`\nis what we expect and:\n- remove TODO as it was fix by previous commit\n",
            "insertions": 36,
            "deletions": 6
          },
          {
            "hash": "c8cb9e5afbdc2a8d0421d1363851838715cec983",
            "messageTitle": "Model: refactor `KeywordsPredicate`",
            "messageBody": "The implementation of the `FindCommand` is now only restricted to one\nattribute, we should try to utilise Predicate to simplify filtering of results.\n\nWe should also make `KeywordsPredicate` a generic interface for all\n`...ContainsKeywordsPredicate` to implement.\n\nLet\u0027s start by refactor `KeywordsPredicate` to extend\n`Predicate\u003cModule\u003e` and:\n- refactor from abstract class to an interface\n- cascade changes to all class\n",
            "insertions": 7,
            "deletions": 6
          },
          {
            "hash": "e1ba246dd5ed37d1e852d90b458012d83abacfe3",
            "messageTitle": "Logic: enhance `FindCommandParser`",
            "messageBody": "The implementation of the `FindCommand` is restricted to find only one\nattribute at any one time. i.e. `find name/NAME...` or `find code/CODE...`\n\nTo let our user to have a better find experience, we should support\nthe usage of multiple attributes on the `FindCommand` concurrent\n\nLet\u0027s enhance the `FindCommandParser` to improve our `FindCommand` so\nthat it support multiple attributes in one `findCommand`\ni.e. `find name/NAME... code/CODE...`\n",
            "insertions": 28,
            "deletions": 12
          },
          {
            "hash": "9f8fbaf681f3c3ac2cbaf624ad180e6a240840c9",
            "messageTitle": "systemtest/FindCommandSystemTest: add unit tests",
            "messageBody": "The `FindCommand` is now able to find mutiple params in one line\n\nLet\u0027s add some unit tests to ensure that the behaviour of the\n`FindCommand` is what we expect.\n",
            "insertions": 43,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 6,
        "date": "2019-03-16",
        "commitResults": [
          {
            "hash": "2d9c0592ee386e3f897a5f751d69afe6155e5ce2",
            "messageTitle": "docs/UserGuide: update `find` command usage (#68)",
            "messageBody": "The `FindCommand` was updated to allow multiple prefix in one command.\r\n\r\nHowever, these changes have yet to been reflected in the User Guide,\r\nwhich may confuse the users.\r\n\r\nLet\u0027s update the User Guide to reflect the changes made to `find`\r\ncommand through updating:\r\n* the `find` command usage\r\n* the examples of `find` command\r\n* remove the restriction of only one prefix",
            "insertions": 6,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 6,
        "date": "2019-03-21",
        "commitResults": [
          {
            "hash": "a74ccfc2c8302f2d04dc1b0bf522d5c25a704f93",
            "messageTitle": "Resources/images: update application icon (#110)",
            "messageBody": "After morphing into our degree planner application, the address book \r\napplication icon is no longer representative of what our application \r\noffers.\r\n\r\nLet\u0027s update the application icon to make it more relatable and:\r\n* rename `address_book_32.png` to `plan_with_ease_32.png`\r\n* cascade the change of application icon filename in the codebase\r\n* acknowledge the original source of the icon (Font Awesome) in `README`\r\n* update `copyrights.txt` to conform to Font Awesome Free License[1] \r\n  (CC BY 4.0 License[2])\r\n\r\n[1] https://fontawesome.com/license/free\r\n[2] https://creativecommons.org/licenses/by/4.0/",
            "insertions": 6,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 5,
        "date": "2019-03-25",
        "commitResults": [
          {
            "hash": "ddf86bd2d6421fc6cceb2e16b9f099ec94a3a4d7",
            "messageTitle": "docs/UserGuide: fix repoURL (#116)",
            "messageBody": "The repoURL is linked to `/tree/master` of our github pages, although\r\nthis is still a valid github URL.\r\n\r\nWhen we used it to reference `/releases`, will not be a valid page.\r\n\r\nThis might create confusion when our user read our user guide and\r\ncould not download our released `PWE.jar`\r\n\r\nLet\u0027s update the `repoURL` to point to\r\n`https://github.com/CS2113-AY1819S2-T09-1/main`",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "7ece63a38fc21e00d508acf381fdf926ece4074c",
            "messageTitle": "UI: standardise `saveLocationStatus` path in status bar (#117)",
            "messageBody": "The displayed `saveLocationStatus` path does not match across different \r\noperating system.\r\n\r\nFor Windows operating system, the relative path of the save location is \r\nbeing displayed.\r\n\r\nFor UNIX-based operating system, the absolute path of the save location \r\nis being displayed.\r\n\r\nLet\u0027s update the `StatusBarFooter#saveLocationStatus` in the constructor\r\nto display relative path across all major operating system and cascade \r\nall changes in `systemtest`.",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "4b452f10208cde4c1f1593ecd7b54181439c08c7",
            "messageTitle": "docs/DeveloperGuide: update `find` command implementation details (#100)",
            "messageBody": "Let\u0027s update the Developer Guide to include details of the current\r\nimplementation and design considerations for the `find` command.",
            "insertions": 58,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 121,
        "deletions": 0,
        "date": "2019-03-29",
        "commitResults": [
          {
            "hash": "bbe2af9b0876b36196c15902904757bc37d4eb43",
            "messageTitle": "Logic: create `BooleanExpressionParser` class",
            "messageBody": "Our implementation for `FindCommandParser#getKeywordsPredicate` result\nan implicit boolean OR predicate.\n\nThis is not desirable for our users as they will not be able to have a\ntighter search results. e.g. Finding for module\u0027s `name` with both\n`Programming` and `Methodology`.\n\nWith the aim to improve our `FindCommand`\n\nlet\u0027s create a new class skeleton `BooleanExpressionParser` to help\nus evaluate the argument which the user provide.\n",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "dc39f75357e97619092dee3f43b669de4cb4a031",
            "messageTitle": "Logic: create `Operator` class",
            "messageBody": "Our implementation for `FindCommandParser#getKeywordsPredicate` result\nan implicit boolean OR predicate.\n\nThis is not desirable for our users as they will not be able to have a\ntighter search results. e.g. Finding for module\u0027s `name` with both\n`Programming` and `Methodology`.\n\nLet\u0027s create an enum class on all the operators that will be used by\n`BooleanExpressionParser` and include:\n- precedence to indicate which operators should be evaluated first.\n",
            "insertions": 25,
            "deletions": 0
          },
          {
            "hash": "6a1bbaf1847524d9e914d7cc6dd6d4c8f42518b7",
            "messageTitle": "Logic: add helper method on Operator",
            "messageBody": "To ease our future implementation.\n\nLet\u0027s add helper method to convert `String` to `Operator` and:\n- check which operator has higher precedence\n",
            "insertions": 20,
            "deletions": 0
          },
          {
            "hash": "fcc701dbf43fcee9d33f2fe04cb0d38fa8451766",
            "messageTitle": "Logic: add helper method on Operator",
            "messageBody": "To ease our future implementation.\n\nLet\u0027s add helper method to evaluate the operators\n",
            "insertions": 25,
            "deletions": 0
          },
          {
            "hash": "b2cf5be1f24491605b8d121281771f7b5f7c781f",
            "messageTitle": "Logic: add helper method for `BooleanExpressionParser`",
            "messageBody": "To ease our future implementation, we will need a way to parse\narguments into `Predicate`.\n\nLet\u0027s create a helper method to do it.\n",
            "insertions": 43,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 380,
        "deletions": 201,
        "date": "2019-03-30",
        "commitResults": [
          {
            "hash": "165b55b7cfa3996ca5691a6cac443669ab56390f",
            "messageTitle": "Logic: implement `BooleanExpressionParser#parse`",
            "messageBody": "Our implementation for `FindCommandParser#getKeywordsPredicate` result\nan implicit boolean OR predicate.\n\nThis is not desirable for our users as they will not be able to have a\ntighter search results. e.g. Finding for module\u0027s `name` with both\n`Programming` and `Methodology`.\n\nLet\u0027s improve our parsing method to make use of `Shunting Yard` so we\ncould detect if `\u0026\u0026` or `||` is used and parse according to what the\nuser provide.\n",
            "insertions": 97,
            "deletions": 0
          },
          {
            "hash": "cf8bd29bd127fb14ac0154b81a35e2805b83e8de",
            "messageTitle": "Logic: utilise `BooleanExpressionParser#parse`",
            "messageBody": "To improve our `FindCommandParser`, we will need to utilise the new\nmethod which we created previously\n\nThe new method returns us a composite Predicate which we could use to\ninstantiate `FindCommand`\n\nLet\u0027s update `FindCommandParser#parse# to utilise the new method and:\n- remove all unused method\n- remove all unused imports\n",
            "insertions": 1,
            "deletions": 50
          },
          {
            "hash": "8d328f5147352dfbf2e7df9c6daf2c5a7a59881b",
            "messageTitle": "Logic: adopt `CliSyntax` for consistency",
            "messageBody": "Most of the operators have been moved to `CliSyntax`\n\nLet\u0027s remove the duplicated code from `BooleanExpressionParser` to make\nour code quality better.\n",
            "insertions": 4,
            "deletions": 8
          },
          {
            "hash": "b6b35e2ce08b362c6cb29ca61a4ded2aee291c06",
            "messageTitle": "Logic: Improve `BooleanExpressionParser#getKeywordsPredicate`",
            "messageBody": "With the implementation of Shunting Yard algorithm, we do not need to\nparse multiple keywords into its predicate.\n\nLet\u0027s improve on our creation of predicate by doing the following:\n\nIf the search term is just a single word.\nWe will find if the keyword is contain within its particular attributes.\n\nIf the search term is a sentence.\nWe wll find if the keyword matches the sentence exactly.\n\nand:\n- add new unit tests for method added.\n- remove unused method.\n",
            "insertions": 86,
            "deletions": 81
          },
          {
            "hash": "8e3af821f16a4014e66629c621615723399a2e8b",
            "messageTitle": "FindCommand: update `MESSAGE_USAGE`",
            "messageBody": "The `FindCommand` is able to find expression with boolean expressions.\n\nAs such, let\u0027s update the `MESSAGE_USAGE` to show appropriate response\n",
            "insertions": 21,
            "deletions": 7
          },
          {
            "hash": "377aaa302515a13ae01b8cc10522b7b3c9eb7874",
            "messageTitle": "test/parser: update `ParserTest` unit test",
            "messageBody": "We have updated the `FindCommandParser` to allow specific boolean logic\nin our `FindCommand`\n\nLet\u0027s update our unit tests to ensure the behaviour of our parser.\n\n`FindCommandParser` now will return a composite Predicate, as\nsuch, we could not test if two `FindCommand` are equals based on the\npredicate alone.\n\nHence, we will ensure the behaviour of our `FindCommand` in system test\nand remove multiple keywords checks for our parser.\n\nAffected file include:\n- FindCommandParserTest.java\n- AddressBookParserTest.java\n",
            "insertions": 75,
            "deletions": 37
          },
          {
            "hash": "41dfc7bd2aded1b90d2a894144796a24110c5cfd",
            "messageTitle": "systemtest/FindCommanSystemTest: fix broken unit tests",
            "messageBody": "We have updated the `FindCommandParser` to allow specific boolean logic\nin our `FindCommand`.\n\nThese changes broke our system unit tests.\n\nLet\u0027s update our system unit tests to fix all our broken unit tests.\n",
            "insertions": 23,
            "deletions": 17
          },
          {
            "hash": "39226387202af1fd888ec1faafe0a7c7ccce6567",
            "messageTitle": "systemtest/FindCommanSystemTest: add unit tests",
            "messageBody": "We have updated the `FindCommandParser` to allow specific boolean logic\nin our `FindCommand`\n\ne.g.\n`find name/NAME1 \u0026\u0026 name/NAME2`\n`find code/CODE || ( name/NAME1 \u0026\u0026 name/NAME2 )\n\nLet\u0027s add new system unit tests to ensure the behaviour of\n`FindCommand` is what we expect and :\n- include negative unit tests\n",
            "insertions": 73,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 658,
        "deletions": 61,
        "date": "2019-04-01",
        "commitResults": [
          {
            "hash": "da90b9cb4aa15c282e202e01c3aaf95c267e4d5a",
            "messageTitle": "UI: add new css `WhiteTheme.css` (#144)",
            "messageBody": "The black theme was created for `AddressBook`, as our application have\r\nmorph from `AddressBook` to `PlanWithEase`, we should have our own\r\nstyle to allow our users to remember our product.\r\n\r\nLet\u0027s update the CSS to have some contrasts from the original\r\n`AddressBook` and:\r\n- cascade all changes needed to allow our application to look nicer.\r\n- display module name in degree planner\r\n- display total credits in degree planner",
            "insertions": 525,
            "deletions": 31
          },
          {
            "hash": "26cb061b0984d7922ae094bba71381226757d0e1",
            "messageTitle": "docs/UserGuide: update `find` command usage (#152)",
            "messageBody": "The `FindCommand` have went through a revamp and is able to\r\nsupport boolean.\r\n\r\nWith such a big changes, we should update our user guide to avoid\r\nconfusing our users.\r\n\r\nLet\u0027s update the `UserGuide` to reflect the changes make to `find`\r\ncommand and:\r\n* provide a more concise guide on expression usage.\r\n* update the examples.",
            "insertions": 75,
            "deletions": 21
          },
          {
            "hash": "3eed8ec1991257de4786361ed6e55d9dd54a6d25",
            "messageTitle": "docs/DeveloperGuide: update `find` command implementation details (#153)",
            "messageBody": "Let\u0027s update the `DeveloperGuide` to include details of our current\r\nimplementation and:\r\n* include the interactions between the parser component.",
            "insertions": 58,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 2968,
        "deletions": 2958,
        "date": "2019-04-04",
        "commitResults": [
          {
            "hash": "b41f7599d9223c2b1b25a3868b1d5f3c6fa738e0",
            "messageTitle": "App: refactor `*AddressBook*` to `*Application*` (#168)",
            "messageBody": "Our codebase still contains `*AddressBook*` after we morphed the \r\noriginal application to become a degree planner application.\r\n\r\nThis may confuse developers, as our application is no longer related to \r\naddress book.\r\n\r\nLet\u0027s refactor the entire codebase such that we refactor:\r\n* filenames that are `*AddressBook*` to `*Application*`\r\n* class names that are `*AddressBook*` to `*Application*`\r\n* class attributes are `*AddressBook*` to `*Application*`\r\n* class methods are `*AddressBook*` to `*Application*`\r\n* all variables are `*AddressBook*` to `*Application*`\r\n* `*AddressBook*` to `*Application*` in comments\r\n* all documentations to replace `*AddressBook*` with `*Application*`\r\n* refactor our package from `seedu.address` to `pwe.planner`\r\n\r\nAdditionally, let\u0027s rename `addressbook.json` to `moduleList.json` to \r\nrepresent the actual data it contains.",
            "insertions": 2968,
            "deletions": 2958
          }
        ]
      },
      {
        "insertions": 59,
        "deletions": 60,
        "date": "2019-04-05",
        "commitResults": [
          {
            "hash": "093745831230b6f2cf18373cdf49c2d6676744d8",
            "messageTitle": "Logic/parser: convert `BooleanExpressionParser` to use generics (#193)",
            "messageBody": "The `BooleanExpressionParser` is constrained to only finding `Module` \r\nonly. However, this means that we are unable to extend the \r\n`BooleanExpressionParser` to find other objects, such as \r\n`DegreePlanner`.\r\n\r\nLet\u0027s convert `BooleanExpressionParser` to use generics so as to allow\r\nfinding of other objects based on boolean expressions and return the \r\ncustom `Predicate`.",
            "insertions": 59,
            "deletions": 60
          }
        ]
      },
      {
        "insertions": 478,
        "deletions": 108,
        "date": "2019-04-08",
        "commitResults": [
          {
            "hash": "0eaf376543ee0cc4868aeab89977657e06a27921",
            "messageTitle": "Logic: improve our `clear` command",
            "messageBody": "The `clear` command will always clear all data in our storage, this may\nnot be optimal for our users. Given that we have 3 component, namely\n`modules`, `requirements` and `degree planner`. The users may prefer to\nclear individual component of the storage instead.\n\nLet\u0027s improve our `clear` command and:\n* clear a parser to handle the arguments\n* fix unit tests which will fails after the new implementation.\n\nNote: I have disallow clearing of module as requirement and planner\nboth depends on module to exists. By clearing `module` alone this will\naffect the integrity of our application. Thus it does not make sense to\nsupport clearing of `module`\n",
            "insertions": 157,
            "deletions": 12
          },
          {
            "hash": "f4bfee00b6c981c9da8de97eb7b45a5a96de4bfe",
            "messageTitle": "logic/Test: create unit test for `ClearCommandParser`",
            "messageBody": "Let\u0027s ensure that our parser is working as expected.\n",
            "insertions": 57,
            "deletions": 0
          },
          {
            "hash": "8d1be1a68260d64c8b42913de605f93f411248d9",
            "messageTitle": "logic/Test: Add unit tests on updated behaviour",
            "messageBody": "The `clear` command is able to clear single component.\n\nLet\u0027s create new unit tests to test the behaviour of the clear command.\n",
            "insertions": 33,
            "deletions": 0
          },
          {
            "hash": "cd2407c068976c2b7315c660b4e897e3ba59eb9e",
            "messageTitle": "[#174] UI: include title for all main panels (#194)",
            "messageBody": "There is no titles for all of the main panels (i.e. Module List, \r\nRequirement Categories, Degree Plan). This may cause users to be \r\nconfused about what each panel does, and how to use it.\r\n\r\nLet\u0027s update the UI to include the titles for all the main panels.",
            "insertions": 34,
            "deletions": 11
          },
          {
            "hash": "4f2d5a1a21c5dc3ed0ca49c54701c68d0e6e4211",
            "messageTitle": "Logic: add new `Exception` for `BooleanExpressionParser`",
            "messageBody": "We have generalize our `BooleanExpressionParser`, however the exception\nthat is being thrown now is all related to `FindCommand`.\n\nLet\u0027s remove all the `FindCommand` exceptions and create a more\ngeneral exception for `BooleanExpressionParser` and:\n* cascade the changes to all affected class\n* fixed broken test cases\n",
            "insertions": 83,
            "deletions": 24
          },
          {
            "hash": "cb535d7e45f5c6ec49f9103129b87d0f4e998c7e",
            "messageTitle": "parser/Test: add new unit tests related to new `Exception`",
            "messageBody": "After modifying the `BooleanExpressionParser` to throw a more general\nexception, we need to ensure that the class is throw error as expected.\n\nLet\u0027s add new unit tests ensure the behaviour of our\n`BooleanExpressionParser`\n",
            "insertions": 31,
            "deletions": 0
          },
          {
            "hash": "426987281b743f812d71b189703dd96ef6c0ca82",
            "messageTitle": "systemtest/FindCommandSystemTest: add new unit tests related to new `Exception`",
            "messageBody": "After modifying the `BooleanExpressionParser` to throw a more general\nexception, we need to ensure that the class is throw error as expected.\n\nLet\u0027s add new unit tests ensure the behaviour of our\n`BooleanExpressionParser`\n",
            "insertions": 16,
            "deletions": 1
          },
          {
            "hash": "951c4471c0801b74b3cf93f12f51a606c61902c1",
            "messageTitle": "parser/Test: uncheck type after `BooleanExpressionParser` was made generic",
            "messageBody": "Let\u0027s update all affects classes and give it a type.\n",
            "insertions": 67,
            "deletions": 60
          }
        ]
      },
      {
        "insertions": 406,
        "deletions": 174,
        "date": "2019-04-13",
        "commitResults": [
          {
            "hash": "c91e3b3d1d8929d984280e5b6271d3f0c220f015",
            "messageTitle": "docs/UserGuide: re-structure content and add more images (#207)",
            "messageBody": "Although there is some sort of contnt flow in in our User Guide, it is \r\nnot sufficient for readers to navigate our user guide efficiently.\r\n\r\nAdditionally, we have yet to provide clear notation to allow our reader\r\nto understand our GUI easily.\r\n\r\nGeneral commands such as `clear` do not provide the user with a clear\r\nillustration on what is expected after running the `clear` command.\r\n\r\nLet\u0027s update the `UserGuide` to re-structure the content flow and:\r\n* add labels to the GUI\r\n* change to smaller font for figure descriptions (e.g. `Figure X`)\r\n* clean up the FAQ section\r\n* add images to better illustrate general commands",
            "insertions": 406,
            "deletions": 174
          }
        ]
      },
      {
        "insertions": 788,
        "deletions": 236,
        "date": "2019-04-14",
        "commitResults": [
          {
            "hash": "d1962718e9cae668cb8993239f12d1b76de0c16f",
            "messageTitle": "README: acknowledge css source. (#216)",
            "messageBody": "After changing the look of our application, we referenced an open-source\r\nCSS file as baseline.\r\n\r\nLet\u0027s acknowledge them in our `README` and update changes in `copyright`",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "192f34d93c201aef243d52772b4fdec86822a72f",
            "messageTitle": "docs/Images: Upload labelled UI (#217)",
            "messageBody": "The image for `UiLabelled.png` is incorrect.\r\n\r\nLet\u0027s fix it by updating it with the correct image.",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "508d543e1f5929180b720e51e6b120aa7ae64775",
            "messageTitle": "Logic: add new `reset` command (#214)",
            "messageBody": "* Logic: add new `reset` command\r\n\r\nWe are able to reset the application to load with the sample data by \r\ndeleting the JSON save files. However, this may be confusing for a user!\r\n\r\nLet\u0027s create a new command `reset` to allow users to reset the \r\napplication to to load the sample data, and add new unit test to ensure \r\nthat the `ResetCommand` is working as intended.\r\n\r\n  [1/2] Logic: add new `reset` command\r\n  [2/2] test/Logic: add new unit test for `ResetCommand`\r\n",
            "insertions": 62,
            "deletions": 0
          },
          {
            "hash": "8875b95f7dff5db947e73eeee0f658f363fd0c14",
            "messageTitle": "Logic: refactor XYZContainsKeywordsPredicate keyword to `String` (#206)",
            "messageBody": "The `find` command allows only one keyword per prefix, it does not make\r\nsense for our predicate keywords to be a `List\u003cString\u003e`\r\n\r\nLet\u0027s refactor all our XYZContainsKeywordsPredicate keyword to be\r\n`String` and:\r\n* cascade all changes to all affected class\r\n* fix all broken unit tests\r\n* remove irrelevant unit tests\r\n* add new unit tests to ensure behaviour",
            "insertions": 84,
            "deletions": 135
          },
          {
            "hash": "182afd72ab178d276c5516518624a6160abc8cdb",
            "messageTitle": "docs/DeveloperGuide: There was some typo in the diagrams (#220)",
            "messageBody": "Let\u0027s update the diagrams to reflect our classes.",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "c5279083634ac853f63c5008f5995c4a6613af5c",
            "messageTitle": "Model/module: add `TagContainsKeywordsPredicate` class",
            "messageBody": "To support the finding of tags\n\nLet\u0027s create a new class `TagContainsKeywordsPredicate` to test\nif any module\u0027s tag matches the keyword provided\n",
            "insertions": 38,
            "deletions": 0
          },
          {
            "hash": "01493d826b34b587c3eaeb5e9ab3713d2500d70b",
            "messageTitle": "Logic/parser:  utilise tags",
            "messageBody": "",
            "insertions": 6,
            "deletions": 1
          },
          {
            "hash": "de79e7ed59aeec0de74d677a5fe0030f9fbd5e06",
            "messageTitle": "Logic/parser: `FindCommandParser` now able to parse `PREFIX_TAG`",
            "messageBody": "With `TagContainsKeywordsPredicate` in `BoolelanExpressionParser`, we\nshould allow finding of `tag` in our `find` command.\n\nLet\u0027s update our `FindCommandParser` to be able to parse `PREFIX_TAG`\n",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "e93df71175bd4be73f2575f10ec2e2608bad7e6b",
            "messageTitle": "FindCommand: Update MESSAGE_USAGE",
            "messageBody": "The `FindCommand` now is able to find and list all modules in the\napplication whose tags contains the argument keywords.\n\nAs such, let\u0027s update the `MESSAGE_USAGE` to show appropriate response\n",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "12b1804ae3474179fc9ed99d8c78f0491bd5033f",
            "messageTitle": "test/module: add unit tests to `TagContainsKeywordsPredicateTest`",
            "messageBody": "We have implement `TagContainsKeywordsPredicateTest` for our\n`FindCommandParser`\n\nLet\u0027s ensure that the behavior is what we expected by creating new\ntest cases for it.\n",
            "insertions": 64,
            "deletions": 0
          },
          {
            "hash": "9ce830086ae4bcf91f811e6e73daddbac61678b9",
            "messageTitle": "test/parser: add unit tests to `FindCommandParserTest`",
            "messageBody": "To ensure that we are able to search for tags.\n\nLet\u0027s add new unit tests to ensure behaviour of our `FindCommandParser`\n",
            "insertions": 19,
            "deletions": 0
          },
          {
            "hash": "5ecc03928760d4fcc6ddc5552e6b60bc45b5dede",
            "messageTitle": "test/commands: add unit test to `FindCommandTest`",
            "messageBody": "The `FindCommand` is now able to find module\u0027s tag.\n\nLet\u0027s add test case to ensure that the behaviour of the `FindCommand`\nis what we expect.\n",
            "insertions": 14,
            "deletions": 0
          },
          {
            "hash": "166f2edaabbe318c33a7787c35ea6ec8025bb659",
            "messageTitle": "systemtests/FindCommandSystemTest: add unit tests",
            "messageBody": "The `FindCommand` is now able to find module\u0027s tag.\n\nLet\u0027s add some simple test case to ensure that the behaviour of the\n`FindCommand` is what we expect.\n",
            "insertions": 20,
            "deletions": 0
          },
          {
            "hash": "80b57566839cd77057a0b8a4d82e6c78357ec301",
            "messageTitle": "Model: support `SemesterContainsKeywordsPredicate` for module",
            "messageBody": "Let’s update the `SemesterContainsKeywordsPredicate` to use for module\n",
            "insertions": 14,
            "deletions": 3
          },
          {
            "hash": "aafaa33f58361dcb4cd922b367b0b2f46e5f932f",
            "messageTitle": "Logic/parser: `FindCommandParser` now able to parse `PREFIX_SEMSTER`",
            "messageBody": "With `SemesterContainKeywordsPredicate`  in `BoolelanExpressionParser`, we\nshould allow finding of `semester` in our `find` command.\n\nLet\u0027s update our `FindCommandParser` to be able to parse `PREFIX_SEMESTER`\n",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "809dad830355f4774f7be0d7657c5390cefaff5d",
            "messageTitle": "test/parser: add unit tests to `FindCommandParserTest` To ensure that we are able to search for semester.",
            "messageBody": "Let\u0027s add new unit tests to ensure behaviour of our `FindCommandParser`\n",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "fcf224586b8fe6a155fde5083b74d740e1a25ada",
            "messageTitle": "test/commands: add unit test to `FindCommandTest`",
            "messageBody": "The `FindCommand` is now able to module\u0027s semester.\n\nLet\u0027s add test case to ensure that the behaviour of the `FindCommand`\nis what we expect.\n",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "1cc3ec530cd575d43f721b38affd5fdc9562efcb",
            "messageTitle": "systemtests/FindCommandSystemTest: add unit tests",
            "messageBody": "The `FindCommand` is now able to find module\u0027s semester.\n\nLet\u0027s add some simple test case to ensure that the behaviour of the\n`FindCommand` is what we expect.\n",
            "insertions": 19,
            "deletions": 0
          },
          {
            "hash": "6d5126e426116d65401e9b56d930e26f9911174a",
            "messageTitle": "docs/UserGuide: add `reset` command and improve `find` command (#226)",
            "messageBody": "Our application is now able reset all modules to the sample state.\r\n\r\nLet\u0027s update our User Guide to explain how it works and:\r\n* add more diagrams to make our explanation clearer.",
            "insertions": 60,
            "deletions": 19
          },
          {
            "hash": "48f71253636ae1341867614eba334534298b1c14",
            "messageTitle": "docs/UserGuide: add some future enhancement (#229)",
            "messageBody": "Let’s update the future enhancement for the application to grow",
            "insertions": 13,
            "deletions": 0
          },
          {
            "hash": "0932641276427cfa7d6da7dfa0b782ebcee4941d",
            "messageTitle": "docs/DeveloperGuide: improve explanation for `find` feature. (#172)",
            "messageBody": "Let’s update the `DeveloperGuide` to improve our explanation to describe\r\nthe implementation better for our reader.",
            "insertions": 223,
            "deletions": 34
          },
          {
            "hash": "b8760eeb4e0184f750c6a4155197b54a032e143d",
            "messageTitle": "docs/UserGuide: fix minor typo (#233)",
            "messageBody": "",
            "insertions": 7,
            "deletions": 5
          },
          {
            "hash": "a5d44ff4919818d4ebbd71dd86e3e66ef1bb11ea",
            "messageTitle": "docs/PPP: Update more information in PPP (#234)",
            "messageBody": "The PPP is not an indicative of what I have done in the project.\r\n\r\nLet\u0027s update the PPP to reflects my work.",
            "insertions": 109,
            "deletions": 33
          },
          {
            "hash": "a356d98157176eacd20c33180f3f5e33dc516cf0",
            "messageTitle": "docs/UserGuide: fix typo (#237)",
            "messageBody": "Let\u0027s update our user guide to fix typo.",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 0,
        "date": "2019-04-15",
        "commitResults": [
          {
            "hash": "f7cbfd73e6661a4f2f80ed56de11def375e91efa",
            "messageTitle": "docs/DeveloperGuide: Update diagrams (#243)",
            "messageBody": "Let\u0027s rename all `addressbook` instances to our application.",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "364814e6a85109dad126a59b74441744744175e2",
            "messageTitle": "docs/DeveloperGuide: update diagrams (#247)",
            "messageBody": "Let\u0027s update the diagrams to reflect the latest changes",
            "insertions": 0,
            "deletions": 0
          }
        ]
      }
    ]
  },
  "authorFinalContributionMap": {
    "truegitnovice": 3814,
    "WendyBaiYunwei": 1496,
    "Creastery": 5893,
    "chyeo": 4067,
    "lycjackie": 5516
  },
  "authorFileTypeContributionMap": {
    "truegitnovice": {
      "adoc": 3,
      "adoc": 580,
      "adoc": 175,
      "adoc": 160,
      "java": 4,
      "java": 5,
      "java": 27,
      "java": 131,
      "java": 74,
      "java": 15,
      "java": 2,
      "java": 11,
      "java": 4,
      "java": 30,
      "java": 31,
      "java": 57,
      "java": 99,
      "java": 63,
      "java": 51,
      "java": 6,
      "java": 1,
      "java": 16,
      "java": 86,
      "java": 53,
      "java": 34,
      "java": 147,
      "java": 53,
      "java": 35,
      "java": 6,
      "java": 10,
      "java": 50,
      "java": 29,
      "java": 42,
      "java": 49,
      "java": 50,
      "java": 11,
      "java": 42,
      "java": 8,
      "java": 24,
      "java": 68,
      "java": 39,
      "java": 10,
      "fxml": 2,
      "css": 26,
      "fxml": 12,
      "fxml": 7,
      "fxml": 2,
      "json": 35,
      "json": 7,
      "json": 27,
      "json": 1,
      "java": 6,
      "java": 19,
      "java": 44,
      "java": 1,
      "java": 1,
      "java": 32,
      "java": 195,
      "java": 98,
      "java": 4,
      "java": 3,
      "java": 23,
      "java": 99,
      "java": 129,
      "java": 7,
      "java": 78,
      "java": 51,
      "java": 40,
      "java": 181,
      "java": 50,
      "java": 40,
      "java": 16,
      "java": 8,
      "java": 62,
      "java": 57,
      "java": 1,
      "java": 2,
      "java": 14,
      "java": 24,
      "java": 17,
      "java": 2
    },
    "WendyBaiYunwei": {
      "adoc": 4,
      "adoc": 210,
      "adoc": 65,
      "adoc": 81,
      "java": 169,
      "java": 108,
      "java": 168,
      "java": 11,
      "java": 32,
      "java": 41,
      "java": 47,
      "java": 1,
      "java": 1,
      "java": 152,
      "java": 104,
      "java": 71,
      "java": 32,
      "java": 97,
      "java": 53,
      "java": 49
    },
    "Creastery": {
      "gitignore": 1,
      "adoc": 7,
      "json": 30,
      "gradle": 28,
      "adoc": 9,
      "adoc": 217,
      "adoc": 362,
      "adoc": 1,
      "adoc": 99,
      "adoc": 1,
      "adoc": 1,
      "adoc": 1,
      "java": 3,
      "java": 14,
      "java": 13,
      "java": 1,
      "java": 13,
      "java": 2,
      "java": 5,
      "java": 6,
      "java": 2,
      "java": 14,
      "java": 4,
      "java": 13,
      "java": 29,
      "java": 3,
      "java": 7,
      "java": 19,
      "java": 63,
      "java": 4,
      "java": 3,
      "java": 20,
      "java": 375,
      "java": 1,
      "java": 9,
      "java": 13,
      "java": 3,
      "java": 5,
      "java": 4,
      "java": 2,
      "java": 2,
      "java": 1,
      "java": 3,
      "java": 4,
      "java": 8,
      "java": 1,
      "java": 31,
      "java": 8,
      "java": 22,
      "java": 10,
      "java": 145,
      "java": 16,
      "java": 4,
      "java": 10,
      "java": 72,
      "java": 9,
      "java": 13,
      "java": 61,
      "java": 9,
      "java": 7,
      "java": 3,
      "java": 7,
      "java": 4,
      "java": 10,
      "java": 191,
      "java": 30,
      "java": 97,
      "java": 3,
      "java": 12,
      "java": 2,
      "java": 24,
      "java": 4,
      "java": 17,
      "java": 4,
      "java": 74,
      "java": 9,
      "java": 4,
      "java": 191,
      "java": 10,
      "java": 2,
      "java": 20,
      "java": 9,
      "java": 6,
      "java": 9,
      "java": 5,
      "java": 6,
      "java": 8,
      "java": 190,
      "java": 362,
      "java": 9,
      "java": 54,
      "java": 27,
      "java": 92,
      "java": 54,
      "java": 20,
      "java": 54,
      "java": 8,
      "java": 54,
      "java": 28,
      "java": 95,
      "java": 48,
      "java": 48,
      "java": 49,
      "java": 7,
      "java": 31,
      "java": 6,
      "java": 9,
      "java": 5,
      "java": 4,
      "java": 3,
      "java": 10,
      "java": 31,
      "java": 30,
      "java": 5,
      "java": 4,
      "java": 6,
      "java": 17,
      "css": 1,
      "fxml": 4,
      "fxml": 5,
      "fxml": 1,
      "json": 7,
      "json": 4,
      "json": 7,
      "json": 3,
      "json": 35,
      "json": 7,
      "java": 4,
      "java": 40,
      "java": 37,
      "java": 3,
      "java": 7,
      "java": 40,
      "java": 19,
      "java": 23,
      "java": 103,
      "java": 63,
      "java": 37,
      "java": 263,
      "java": 8,
      "java": 5,
      "java": 2,
      "java": 4,
      "java": 18,
      "java": 85,
      "java": 13,
      "java": 2,
      "java": 1,
      "java": 27,
      "java": 1,
      "java": 29,
      "java": 10,
      "java": 35,
      "java": 6,
      "java": 47,
      "java": 1,
      "java": 44,
      "java": 23,
      "java": 7,
      "java": 2,
      "java": 78,
      "java": 88,
      "java": 3,
      "java": 3,
      "java": 50,
      "java": 79,
      "java": 40,
      "java": 1,
      "java": 7,
      "java": 3,
      "java": 89,
      "java": 6,
      "java": 29,
      "java": 44,
      "java": 24,
      "java": 89,
      "java": 25,
      "java": 4,
      "java": 34,
      "java": 96,
      "java": 19,
      "java": 4,
      "java": 8,
      "java": 2,
      "java": 21
    },
    "chyeo": {
      "adoc": 3,
      "adoc": 279,
      "adoc": 116,
      "adoc": 103,
      "java": 6,
      "java": 16,
      "java": 16,
      "java": 1,
      "java": 122,
      "java": 42,
      "java": 163,
      "java": 123,
      "java": 13,
      "java": 12,
      "java": 31,
      "java": 47,
      "java": 32,
      "java": 89,
      "java": 90,
      "java": 115,
      "java": 6,
      "java": 3,
      "java": 13,
      "java": 11,
      "java": 104,
      "java": 163,
      "java": 10,
      "java": 6,
      "java": 68,
      "java": 17,
      "java": 43,
      "java": 54,
      "java": 88,
      "java": 26,
      "java": 44,
      "java": 41,
      "java": 17,
      "java": 43,
      "java": 9,
      "java": 1,
      "java": 87,
      "java": 49,
      "css": 23,
      "fxml": 1,
      "fxml": 3,
      "fxml": 35,
      "fxml": 8,
      "json": 28,
      "java": 2,
      "java": 9,
      "java": 1,
      "java": 75,
      "java": 5,
      "java": 2,
      "java": 4,
      "java": 5,
      "java": 164,
      "java": 47,
      "java": 349,
      "java": 175,
      "java": 6,
      "java": 36,
      "java": 80,
      "java": 85,
      "java": 74,
      "java": 11,
      "java": 11,
      "java": 6,
      "java": 88,
      "java": 201,
      "java": 2,
      "java": 8,
      "java": 2,
      "java": 61,
      "java": 33,
      "java": 5,
      "java": 71,
      "java": 16,
      "java": 5,
      "java": 7,
      "java": 1
    },
    "lycjackie": {
      "adoc": 20,
      "gradle": 6,
      "txt": 4,
      "adoc": 6,
      "adoc": 1,
      "adoc": 282,
      "adoc": 343,
      "adoc": 2,
      "css": 1,
      "adoc": 146,
      "java": 3,
      "java": 47,
      "java": 1,
      "java": 1,
      "java": 2,
      "java": 1,
      "java": 1,
      "java": 1,
      "java": 1,
      "java": 1,
      "java": 2,
      "java": 1,
      "java": 3,
      "java": 1,
      "java": 1,
      "java": 3,
      "java": 18,
      "java": 1,
      "java": 19,
      "java": 24,
      "java": 15,
      "java": 46,
      "java": 4,
      "java": 1,
      "java": 12,
      "java": 22,
      "java": 3,
      "java": 37,
      "java": 3,
      "java": 3,
      "java": 5,
      "java": 13,
      "java": 14,
      "java": 8,
      "java": 11,
      "java": 6,
      "java": 8,
      "java": 26,
      "java": 9,
      "java": 8,
      "java": 1,
      "java": 15,
      "java": 1,
      "java": 1,
      "java": 173,
      "java": 2,
      "java": 41,
      "java": 3,
      "java": 27,
      "java": 5,
      "java": 13,
      "java": 31,
      "java": 43,
      "java": 3,
      "java": 32,
      "java": 11,
      "java": 11,
      "java": 1,
      "java": 9,
      "java": 7,
      "java": 5,
      "java": 16,
      "java": 14,
      "java": 2,
      "java": 54,
      "java": 43,
      "java": 72,
      "java": 6,
      "java": 3,
      "java": 16,
      "java": 24,
      "java": 3,
      "java": 30,
      "java": 3,
      "java": 30,
      "java": 11,
      "java": 4,
      "java": 3,
      "java": 13,
      "java": 38,
      "java": 4,
      "java": 1,
      "java": 1,
      "java": 3,
      "java": 2,
      "java": 12,
      "java": 5,
      "java": 2,
      "java": 1,
      "java": 1,
      "java": 5,
      "java": 5,
      "java": 1,
      "java": 1,
      "java": 3,
      "java": 15,
      "java": 15,
      "java": 30,
      "java": 3,
      "java": 6,
      "java": 7,
      "java": 6,
      "java": 3,
      "java": 45,
      "java": 13,
      "java": 5,
      "java": 8,
      "java": 6,
      "java": 5,
      "java": 14,
      "java": 44,
      "java": 6,
      "java": 4,
      "java": 6,
      "java": 41,
      "java": 8,
      "java": 2,
      "java": 1,
      "java": 12,
      "java": 2,
      "java": 3,
      "java": 6,
      "java": 3,
      "java": 1,
      "java": 6,
      "java": 1,
      "java": 5,
      "java": 2,
      "fxml": 9,
      "fxml": 1,
      "css": 1,
      "fxml": 25,
      "css": 463,
      "json": 1,
      "json": 1,
      "json": 1,
      "java": 1,
      "java": 2,
      "java": 1,
      "java": 1,
      "java": 1,
      "java": 27,
      "java": 1,
      "java": 1,
      "java": 1,
      "java": 2,
      "java": 2,
      "java": 3,
      "java": 2,
      "java": 1,
      "java": 3,
      "java": 18,
      "java": 1,
      "java": 34,
      "java": 45,
      "java": 38,
      "java": 81,
      "java": 1,
      "java": 19,
      "java": 40,
      "java": 53,
      "java": 9,
      "java": 6,
      "java": 98,
      "java": 6,
      "java": 5,
      "java": 48,
      "java": 13,
      "java": 29,
      "java": 21,
      "java": 15,
      "java": 14,
      "java": 17,
      "java": 25,
      "java": 24,
      "java": 56,
      "java": 86,
      "java": 1,
      "java": 57,
      "java": 47,
      "java": 3,
      "java": 6,
      "java": 43,
      "java": 154,
      "java": 24,
      "java": 15,
      "java": 10,
      "java": 31,
      "java": 44,
      "java": 34,
      "java": 4,
      "java": 298,
      "java": 56,
      "java": 2,
      "java": 53,
      "java": 2,
      "java": 8,
      "java": 22,
      "java": 2,
      "java": 64,
      "java": 8,
      "java": 2,
      "java": 8,
      "java": 60,
      "java": 24,
      "java": 5,
      "java": 21,
      "java": 34,
      "java": 1,
      "java": 6,
      "java": 8,
      "java": 7,
      "java": 9,
      "java": 6,
      "java": 6,
      "java": 1,
      "java": 4,
      "java": 5,
      "java": 2,
      "java": 15,
      "java": 4,
      "java": 3,
      "java": 4,
      "java": 3,
      "java": 2,
      "java": 1,
      "java": 9,
      "java": 4,
      "java": 10,
      "java": 1,
      "java": 10,
      "java": 1,
      "java": 3,
      "java": 2,
      "java": 1,
      "java": 2,
      "java": 47,
      "java": 33,
      "java": 37,
      "java": 1,
      "java": 27,
      "java": 52,
      "java": 249,
      "java": 8,
      "java": 2,
      "java": 8,
      "java": 23,
      "java": 4,
      "fxml": 1,
      "fxml": 1
    }
  },
  "authorContributionVariance": {
    "truegitnovice": 119938.54,
    "WendyBaiYunwei": 25029.219,
    "Creastery": 356514.25,
    "chyeo": 567631.7,
    "lycjackie": 557856.6
  },
  "authorDisplayNameMap": {
    "truegitnovice": "AHN...GYU",
    "WendyBaiYunwei": "BAI...WEI",
    "Creastery": "NGO...LIN",
    "chyeo": "YEO...ONG",
    "lycjackie": "LEE...HOY"
  }
}
